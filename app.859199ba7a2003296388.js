webpackJsonp([0],[function(e,t,n){"use strict";var i=n(1),r=n(3),o=n(23);r.enableProdMode(),i.platformBrowserDynamic().bootstrapModule(o.AppModule)},,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(21),s=n(24),l=n(28),c=n(21),d=n(29),p=n(118),h=n(130),m=n(132),u=n(183),f=n(185),g=n(58),y=n(66),v=n(188),b=n(190),_=n(68),S=n(70),w=n(72),k=n(75),M=n(79),C=n(81),D=n(193),I=n(195),x=n(197),T=n(199),A=n(200),P=n(191),O=n(64),L=n(59),R=n(61),j=n(63),N=n(76),E=function(){function AppModule(){}return AppModule=i([o.NgModule({imports:[a.BrowserModule,s.FormsModule,l.HttpModule,m.MdlModule,d.routing,h.Angulartics2Module.forRoot()],declarations:[u.AppComponent,g.ParameteriseComponent,f.PlotComponent,y.PageNotFoundComponent,v.WidthLengthTableComponent,b.JsonInputComponent,P.MyJsonPipe,_.HomeComponent,S.CreateModelComponent,w.UseModelComponent,k.StorageManagementComponent,M.SpecificationsComponent,C.DicomComponent,I.SendToParameterisationComponent,D.JsonEditComponent,x.BokehCreateModelComponent,T.BokehUseModelComponent,A.ChooseSpecificationsComponent],providers:[L.ElectronApiService,R.DataService,j.TitleService,c.Title,N.LocalStorageService,p.Angulartics2GoogleAnalytics,O.ModelData,O.ModelMeasurement,O.ModelGrid,O.Predictions],bootstrap:[u.AppComponent]}),r("design:paramtypes",[])],AppModule)}();t.AppModule=E},,,,,,function(e,t,n){"use strict";var i=n(30),r=n(58),o=n(66),a=n(68),s=n(70),l=n(72),c=n(75),d=n(79),p=n(81),h=[{path:"home",component:a.HomeComponent,data:{title:"Home"}},{path:"storage",component:c.StorageManagementComponent},{path:"specifications",component:d.SpecificationsComponent},{path:"dicom",component:p.DicomComponent},{path:"parameterise",component:r.ParameteriseComponent},{path:"create-model",component:s.CreateModelComponent},{path:"use-model",component:l.UseModelComponent},{path:"",component:a.HomeComponent},{path:"model",redirectTo:"create-model"},{path:"**",component:o.PageNotFoundComponent}];t.appRoutingProviders=[],t.routing=i.RouterModule.forRoot(h)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){"use strict";var __decorate=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=__webpack_require__(3),router_1=__webpack_require__(30),electron_api_service_1=__webpack_require__(59),data_service_1=__webpack_require__(61),title_service_1=__webpack_require__(63),model_data_1=__webpack_require__(64),demo_data_1=__webpack_require__(62),ParameteriseComponent=function(){function ParameteriseComponent(e,t,n,i,r){this.electronApiService=e,this.dataService=t,this.myTitleService=n,this.router=i,this.modelData=r,this.parameterisation={insert:{x:[0],y:[0]},width:null,length:null,circle:null,ellipse:null},this.jsonValid=!0,this.xInputValid=!0,this.yInputValid=!0,this.equalLengths=!0,this.serverResponseValid=!0,this.dataInFlight=!1,this.submitDisabled=!1,this.refreshJsonInput=!1,this.insertData={machine:null,parameterisation:this.parameterisation,energy:null,applicator:null,ssd:null,factor:null},this.machineExists=!1,this.machineSettingsExist=!1,this.modelExists=!1,this.ableToAddDataToModel=!1,this.dataAlreadyExistsOnModel=!1,this.serverError=!1}return ParameteriseComponent.prototype.ngOnInit=function(){this.getData(),this.myTitleService.setTitle("Parameterisation"),this.parameteriseURL=localStorage.getItem("parameteriseURL"),null==this.parameteriseURL&&(this.parameteriseURL="http://electronapi.simonbiggs.net/parameterise"),this.machineSpecifications=JSON.parse(localStorage.getItem("specifications")),null==this.machineSpecifications&&(this.machineSpecifications={}),this.checkMachineSettings(),this.checkIfCanBeSentToModel(),this.updateTextAreaValues()},ParameteriseComponent.prototype.createKey=function(){var e='{"machine":'+JSON.stringify(String(this.insertData.machine))+',"energy":'+JSON.stringify(Number(this.insertData.energy))+',"applicator":'+JSON.stringify(String(this.insertData.applicator))+',"ssd":'+JSON.stringify(Number(this.insertData.ssd))+"}";return e},ParameteriseComponent.prototype.addMeasuredFactor=function(e){this.dataAlreadyExistsOnModel=!0,this.ableToAddDataToModel=!1;var t=this.createKey(),n=JSON.parse(localStorage.getItem(t));null==n&&(n={measurement:{width:[],length:[],factor:[]},model:{width:[],length:[],factor:[]}}),n.model.width=[],n.model.length=[],n.model.factor=[],n.measurement.width.push(Number(this.insertData.parameterisation.width)),n.measurement.length.push(Number(this.insertData.parameterisation.length)),n.measurement.factor.push(Number(e)),localStorage.setItem(t,JSON.stringify(n)),localStorage.setItem("current_machine",JSON.stringify(Number(this.insertData.machine))),localStorage.setItem("currentEnergy",JSON.stringify(Number(this.insertData.energy))),localStorage.setItem("currentApplicator",JSON.stringify(this.insertData.applicator)),localStorage.setItem("currentSSD",JSON.stringify(Number(this.insertData.ssd)))},ParameteriseComponent.prototype.predictFactor=function(){localStorage.setItem("current_machine",JSON.stringify(Number(this.insertData.machine))),localStorage.setItem("currentEnergy",JSON.stringify(Number(this.insertData.energy))),localStorage.setItem("currentApplicator",JSON.stringify(this.insertData.applicator)),localStorage.setItem("currentSSD",JSON.stringify(Number(this.insertData.ssd))),this.currentSettings={machine:this.insertData.machine,energy:this.insertData.energy,applicator:this.insertData.applicator,ssd:this.insertData.ssd},this.modelData.loadModelData(this.currentSettings),this.modelData.predictions.width.unshift(this.parameterisation.width),this.modelData.predictions.length.unshift(this.parameterisation.length),0!=this.insertData.factor&&null!=this.insertData.factor&&this.modelData.predictions.measuredFactor.unshift(this.insertData.factor),this.modelData.saveModelData(this.currentSettings),this.router.navigate(["/use-model"])},ParameteriseComponent.prototype.updateTextAreaValues=function(){this.textAreaX=String(this.parameterisation.insert.x).replace(/,/g,", "),this.textAreaY=String(this.parameterisation.insert.y).replace(/,/g,", ")},ParameteriseComponent.prototype.checkIfEqualLengths=function(){this.parameterisation.insert.x.length==this.parameterisation.insert.y.length?this.equalLengths=!0:this.equalLengths=!1},ParameteriseComponent.prototype.saveInsertData=function(){this.insertData.parameterisation=this.parameterisation,localStorage.setItem("last_insertData",JSON.stringify(this.insertData))},ParameteriseComponent.prototype.validateInput=function(e){return/^[-\d\.,;\s]*$/.test(e)},ParameteriseComponent.prototype.inputTextAreaX=function(xInput){try{this.validateInput(xInput)?(this.parameterisation.insert.x=eval("["+xInput.replace(/[,;\n\t]\s*/g,", ")+"]"),this.insertUpdated(this.parameterisation.insert),this.xInputValid=!0,this.checkIfEqualLengths(),this.saveInsertData(),this.checkIfCanBeSentToModel()):this.xInputValid=!1}catch(err){console.log(err),this.xInputValid=!1}},ParameteriseComponent.prototype.inputTextAreaY=function(yInput){try{this.validateInput(yInput)?(this.parameterisation.insert.y=eval("["+yInput.replace(/[,;\n\t]\s*/g,", ")+"]"),this.insertUpdated(this.parameterisation.insert),this.yInputValid=!0,this.checkIfEqualLengths(),this.saveInsertData(),this.checkIfCanBeSentToModel()):this.yInputValid=!1}catch(err){console.log(err),this.yInputValid=!1}},ParameteriseComponent.prototype.getData=function(){var e=localStorage.last_insertData;if(e){this.insertData=JSON.parse(e);var t=this.insertData.parameterisation.insert;this.insertUpdated(t),this.insertData.parameterisation=this.parameterisation}},ParameteriseComponent.prototype.loadDemoData=function(){var e=JSON.parse(JSON.stringify(demo_data_1.DEMO_PARAMETERISE_INPUT));this.insertUpdated(e.insert),this.insertData={machine:null,parameterisation:this.parameterisation,energy:null,applicator:null,ssd:null,factor:null},this.updateTextAreaValues(),this.checkIfEqualLengths()},ParameteriseComponent.prototype.sleep=function(e){return new Promise(function(t){return setTimeout(t,e)})},ParameteriseComponent.prototype.recursiveServerSubmit=function(){var e=this;this.serverError=!1,this.electronApiService.sendToServer(this.parameteriseURL,JSON.stringify(this.parameterisation.insert)).then(function(t){e.parameterisation.circle=t.circle,e.parameterisation.ellipse=t.ellipse,e.parameterisation.width=t.width,e.parameterisation.length=t.length;var n=t.complete;n?(e.dataInFlight=!1,e.serverResponseValid=!0,e.checkSubmitButton(),localStorage.setItem(JSON.stringify(e.parameterisation.insert),JSON.stringify(e.parameterisation)),e.saveInsertData(),e.checkIfCanBeSentToModel(),null==e.parameterisation.width&&(e.serverError=!0)):e.sleep(500).then(function(){return e.recursiveServerSubmit()})})},ParameteriseComponent.prototype.checkIfCanBeSentToModel=function(){if(this.ableToAddDataToModel=!1,this.dataAlreadyExistsOnModel=!1,this.machineSettingsExist){var e=this.createKey(),t=JSON.parse(localStorage.getItem(e));null==t?this.ableToAddDataToModel=!0:null==t.measurement?this.ableToAddDataToModel=!0:null!=this.parameterisation.width&&null!=this.parameterisation.length&&null!=this.insertData.factor&&(t.measurement.width.indexOf(Number(this.parameterisation.width))>-1&&t.measurement.length.indexOf(Number(this.parameterisation.length))>-1&&t.measurement.factor.indexOf(Number(this.insertData.factor))>-1?this.dataAlreadyExistsOnModel=!0:(this.dataAlreadyExistsOnModel=!1,this.ableToAddDataToModel=!0))}},ParameteriseComponent.prototype.checkMachineSettings=function(){this.R50=null;var e=this.insertData.machine,t=this.insertData.energy,n=this.insertData.applicator,i=this.insertData.ssd;if(this.machineSpecifications[e]){var r=this.machineSpecifications[e];this.R50=r.R50[t],r.energy.indexOf(Number(t))>-1&&r.applicator.indexOf(String(n))>-1&&r.ssd.indexOf(Number(i))>-1?this.machineSettingsExist=!0:this.machineSettingsExist=!1,this.machineExists=!0}else this.machineExists=!1,this.machineSettingsExist=!1,this.modelExists=!1},ParameteriseComponent.prototype.insertDataChange=function(){localStorage.setItem("last_insertData",JSON.stringify(this.insertData)),this.checkMachineSettings(),this.checkIfCanBeSentToModel()},ParameteriseComponent.prototype.onSubmit=function(){this.dataInFlight=!0,this.checkSubmitButton(),this.recursiveServerSubmit()},ParameteriseComponent.prototype.insertDataFromLocalStorage=function(e){},ParameteriseComponent.prototype.parameterisationFromLocalStorage=function(e){var t=JSON.parse(e);this.parameterisation.insert=t.insert,this.parameterisation.width=t.width,this.parameterisation.length=t.length,this.parameterisation.circle=t.circle,this.parameterisation.ellipse=t.ellipse},ParameteriseComponent.prototype.insertUpdated=function(e){var t=localStorage.getItem(JSON.stringify(e));t?this.parameterisationFromLocalStorage(t):(this.parameterisation.insert=e,this.parameterisation.width=null,this.parameterisation.length=null,this.parameterisation.circle=null,this.parameterisation.ellipse=null)},ParameteriseComponent.prototype.onJsonStatusChange=function(e){this.jsonValid=e,this.checkSubmitButton()},ParameteriseComponent.prototype.checkSubmitButton=function(){this.dataInFlight||!this.jsonValid?this.submitDisabled=!0:this.submitDisabled=!1},ParameteriseComponent.prototype.parameterisationServerChange=function(e){localStorage.setItem("parameteriseURL",e)},ParameteriseComponent=__decorate([core_1.Component({selector:"my-parameterise",template:__webpack_require__(65)}),__metadata("design:paramtypes",[electron_api_service_1.ElectronApiService,data_service_1.DataService,title_service_1.TitleService,router_1.Router,model_data_1.ModelData])],ParameteriseComponent)}();exports.ParameteriseComponent=ParameteriseComponent},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(28);n(60);var s=function(){function ElectronApiService(e){this.http=e,this.wakeUpURL="http://electronapi.simonbiggs.net/wakeup"}return ElectronApiService.prototype.wakeUpServer=function(){return this.http.get(this.wakeUpURL).toPromise()},ElectronApiService.prototype.sendToServer=function(e,t){return this.http.post(e,t).toPromise().then(function(e){return e.json()})["catch"](this.handleError)},ElectronApiService.prototype.handleError=function(e){return console.error("An error occurred",e),Promise.reject(e.message||e)},ElectronApiService=i([o.Injectable(),r("design:paramtypes",[a.Http])],ElectronApiService)}();t.ElectronApiService=s},,function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(62),s=function(){function DataService(){}return DataService.prototype.getParameterisationData=function(){return Promise.resolve(a.DEMO_PARAMETERISE_INPUT)},DataService=i([o.Injectable(),r("design:paramtypes",[])],DataService)}();t.DataService=s},function(e,t){"use strict";var n={x:[.99,-.14,-1,-1.73,-2.56,-3.17,-3.49,-3.57,-3.17,-2.52,-1.76,-1.04,-.17,.77,1.63,2.36,2.79,2.91,3.04,3.22,3.34,3.37,3.08,2.54,1.88,1.02,.99],y:[5.05,4.98,4.42,3.24,1.68,.6,-.64,-1.48,-2.38,-3.77,-4.81,-5.26,-5.51,-5.58,-5.23,-4.64,-3.77,-2.77,-1.68,-.29,1.23,2.68,3.8,4.6,5.01,5.08,5.05]};t.DEMO_PARAMETERISE_INPUT={insert:n,circle:null,ellipse:null,width:null,length:null}},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=function(){function TitleService(){this.title="Home"}return TitleService.prototype.getTitle=function(){return this.title},TitleService.prototype.setTitle=function(e){this.title=e},TitleService=i([o.Injectable(),r("design:paramtypes",[])],TitleService)}();t.TitleService=a},function(e,t,n){"use strict";var i=this&&this.__extends||function(e,t){function __(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)},r=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),s=function(){function Base(){}return Base.prototype.reset=function(){for(var e=0,t=this.propNames;e<t.length;e++){var n=t[e];this[n]=[]}},Base.prototype.fillFromObject=function(e){e=this.updateOldKeyNames(e);for(var t=0,n=this.propNames;t<n.length;t++){var i=n[t];null==e[i]?this[i]=[]:this[i]=e[i]}},Base.prototype.updateOldKeyNames=function(e){var t;for(var n in this.keyConversions)null!=e[n]&&null==e[this.keyConversions[n]]&&(t=this.keyConversions[n],Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(e,n)),delete e[n]);return e},Base}();t.Base=s;var l=function(e){function ModelMeasurement(){e.apply(this,arguments),this.propNames=["width","length","measuredFactor"],this.keyConversions={factor:"measuredFactor"},this.width=[],this.length=[],this.measuredFactor=[]}return i(ModelMeasurement,e),ModelMeasurement=r([a.Injectable(),o("design:paramtypes",[])],ModelMeasurement)}(s);t.ModelMeasurement=l;var c=function(e){function ModelGrid(){e.apply(this,arguments),this.propNames=["width","length","predictedFactor"],this.keyConversions={factor:"predictedFactor"},this.width=[],this.length=[],this.predictedFactor=[]}return i(ModelGrid,e),ModelGrid=r([a.Injectable(),o("design:paramtypes",[])],ModelGrid)}(s);t.ModelGrid=c;var d=function(e){function Predictions(){e.apply(this,arguments),this.propNames=["width","length","area","measuredFactor","predictedFactor"],this.width=[],this.length=[],this.area=[],this.measuredFactor=[],this.predictedFactor=[]}return i(Predictions,e),Predictions=r([a.Injectable(),o("design:paramtypes",[])],Predictions)}(s);t.Predictions=d;var p=function(){function ModelData(e,t,n){this.measurement=e,this.model=t,this.predictions=n,this.propNames=["measurement","model","predictions"]}return ModelData.prototype.fillFromObject=function(e){if(null==e)for(var t=0,n=this.propNames;t<n.length;t++){var i=n[t];this[i].reset()}else for(var r=0,o=this.propNames;r<o.length;r++){var i=o[r];null==e[i]?this[i].reset():this[i].fillFromObject(e[i])}},ModelData.prototype.createLocalStorageKey=function(e){var t='{"machine":'+JSON.stringify(String(e.machine))+',"energy":'+JSON.stringify(Number(e.energy))+',"applicator":'+JSON.stringify(String(e.applicator))+',"ssd":'+JSON.stringify(Number(e.ssd))+"}";return t},ModelData.prototype.loadModelData=function(e){var t=this.createLocalStorageKey(e),n=JSON.parse(localStorage.getItem(t));this.fillFromObject(n)},ModelData.prototype.saveModelData=function(e){var t=this.createLocalStorageKey(e);localStorage.setItem(t,JSON.stringify(this))},ModelData=r([a.Injectable(),o("design:paramtypes",[l,c,d])],ModelData)}();t.ModelData=p},function(e,t){e.exports='<div class="mdl-grid">\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet" style="display: flex; align-items: center; flex-flow: row wrap;">\r\n    <h5>Equivalent ellipse parameterisation</h5>\r\n    <p>This is for the determination of equivalent ellipse widths and lengths as defined in the paper method.</p>\r\n\r\n    <p>\r\n      To begin shape parameterisation you need to define your insert shape. \r\n      This can be done by editing the x and y coordinates within the text boxes below or by using a shape       \r\n      <a routerLink="/dicom" routerLinkActive="active">\r\n        pulled from a dicom file.\r\n      </a>\r\n    </p>\r\n\r\n    <p>\r\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\r\n      This web app should handle copying and pasting from a range of sources (including excel).\r\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\r\n    </p>\r\n\r\n    <mdl-textfield\r\n      type="text"\r\n      label="X coordinates (cm @iso)"\r\n      [(ngModel)]="textAreaX"\r\n      (input)="inputTextAreaX($event.target.value)"\r\n      rows=4\r\n      floating-label\r\n      [disabled]="dataInFlight"\r\n      [style.width]="\'100%\'"></mdl-textfield>\r\n\r\n    <mdl-textfield\r\n      type="text"\r\n      label="Y coordinates (cm @iso)"\r\n      [(ngModel)]="textAreaY"\r\n      (input)="inputTextAreaY($event.target.value)"\r\n      rows=4\r\n      floating-label\r\n      [disabled]="dataInFlight"\r\n      [style.width]="\'100%\'"></mdl-textfield>\r\n\r\n    <p *ngIf="!equalLengths">\r\n      The x and y coordinate lengths need to be the same as each other.\r\n    </p>\r\n\r\n    <p *ngIf="this.parameterisation.insert.x.length < 3 || this.parameterisation.insert.y.length < 3">\r\n      You need at least 3 data points to create an insert shape.\r\n    </p>\r\n\r\n    <div style="width:100%; height:30px"></div>\r\n\r\n    <button\r\n      mdl-button mdl-button-type="raised" \r\n      mdl-colored="primary" \r\n      mdl-ripple\r\n      angulartics2On="click" angularticsEvent="Parameterise | Load demo data"\r\n      [disabled]="submitDisabled"\r\n      (click)="loadDemoData()">Load Demo Data         \r\n    </button>\r\n\r\n    <div style="width:20px; height:30px"></div>\r\n\r\n    <button\r\n      mdl-button mdl-button-type="raised" \r\n      mdl-colored="primary" \r\n      mdl-ripple\r\n      angulartics2On="click" angularticsEvent="Parameterise | Parameterise insert"\r\n      [disabled]="submitDisabled || !xInputValid || !yInputValid || !equalLengths"\r\n      (click)="onSubmit()">Parameterise Insert          \r\n    </button>\r\n\r\n\r\n\r\n    <div [hidden]="serverResponseValid">\r\n      {{serverErrorMessage}}\r\n    </div>\r\n\r\n    <div style="height:20px; width:100%;"></div>\r\n\r\n    <my-plot \r\n      [insert_x]="parameterisation.insert.x"\r\n      [insert_y]="parameterisation.insert.y"\r\n      [circle]="parameterisation.circle"\r\n      [ellipse]="parameterisation.ellipse"\r\n      [enabled]="xInputValid && yInputValid && equalLengths">\r\n    </my-plot>\r\n\r\n    <div style="height:20px; width:20px;"></div>\r\n\r\n    <my-width-length-table\r\n      [width]="parameterisation.width"\r\n      [length]="parameterisation.length"\r\n      [enabled]="xInputValid && yInputValid && equalLengths">\r\n    </my-width-length-table>\r\n\r\n  </div>\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h5>Send parameterisation to model</h5>\r\n    <p>\r\n      Once you have parameterised an insert shape you may either predict this insert with the model, or you may add the insert to the model.\r\n    </p>\r\n    <p>\r\n      To predict the insert with the model you must have filled in the correct machine ID, energy, applicator, and ssd in the text boxes below.\r\n      Furthermore these inputs need to correspond to one of the \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        machine specifications you have defined.\r\n      </a>\r\n    </p>\r\n    <p>\r\n      To append the current insert shape along with its measured factor to the model you must have filled in the corresponding machine ID, energy, applicator, ssd, and measured factor in the text boxes below.\r\n      Once again the machine specifications given need to correspond to one of the \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        machine specifications you have defined.\r\n      </a>\r\n    </p>\r\n\r\n\r\n    <mdl-textfield\r\n      type="text"\r\n      label="Machine (ID)"\r\n      (input)="insertDataChange()"\r\n      floating-label\r\n      [(ngModel)]="insertData.machine"\r\n      style="width:100%"></mdl-textfield>\r\n\r\n    <p *ngIf="!machineExists">\r\n      This machine ID does not exist within your \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        provided machine specifications.\r\n      </a>\r\n    </p>\r\n    <mdl-textfield\r\n      type="text"\r\n      label="Energy (Nominal or MeV)"\r\n      (input)="insertDataChange()"\r\n      floating-label\r\n      [(ngModel)]="insertData.energy"\r\n      style="width:100%"></mdl-textfield>\r\n    <mdl-textfield\r\n      type="text"\r\n      label="Applicator (ID)"\r\n      (input)="insertDataChange()"\r\n      floating-label\r\n      [(ngModel)]="insertData.applicator"\r\n      style="width:100%"></mdl-textfield>\r\n    <mdl-textfield\r\n      type="text"\r\n      label="SSD (cm)"\r\n      (input)="insertDataChange()"\r\n      floating-label\r\n      [(ngModel)]="insertData.ssd"\r\n      style="width:100%"></mdl-textfield>\r\n\r\n    <p *ngIf="!machineSettingsExist">\r\n      These specific machine settings do not exist within your       \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        provided machine specifications.\r\n      </a>\r\n    </p>\r\n\r\n    <mdl-textfield #measuredFactor\r\n      type="text"\r\n      label="Measured insert factor (as per TG 25)"\r\n      (input)="insertDataChange()"\r\n      floating-label\r\n      [(ngModel)]="insertData.factor"\r\n      style="width:100%"></mdl-textfield>\r\n\r\n    <button\r\n      mdl-button mdl-button-type="raised" \r\n      mdl-colored="primary" \r\n      mdl-ripple\r\n      angulartics2On="click" angularticsEvent="Parameterise | Add measured factor to model"\r\n      [disabled]="!ableToAddDataToModel || !machineSettingsExist || measuredFactor.value==null || measuredFactor.value==\'\' || submitDisabled || !xInputValid || !yInputValid || !equalLengths"\r\n      (click)="addMeasuredFactor(measuredFactor.value)">Add Measured Factor to Model            \r\n    </button>\r\n\r\n    <p *ngIf="dataAlreadyExistsOnModel && !submitDisabled && xInputValid && yInputValid && equalLengths && machineSettingsExist">\r\n      This width, length, and measured factor combination exists within the model.       \r\n      <a routerLink="/model" routerLinkActive="active">\r\n        View the model.\r\n      </a>\r\n    </p>\r\n    \r\n    <div style="height:20px; width:20px;"></div>\r\n\r\n\r\n\r\n\r\n    <button\r\n      mdl-button mdl-button-type="raised"\r\n      mdl-colored="primary" \r\n      mdl-ripple\r\n      angulartics2On="click" angularticsEvent="Parameterise | Predict factor with model"\r\n      [disabled]="!machineSettingsExist || submitDisabled || !xInputValid || !yInputValid || !equalLengths || parameterisation.width == null || parameterisation.length == null"\r\n      (click)="predictFactor()">Predict Factor with Model        \r\n    </button>\r\n\r\n    \r\n    <!--<p>\r\n      <font color="#d3d3d3">\r\n        Currently the "Predict Factor with Model" button just changes the active machine specifications to match that given above and then takes you to the model component.\r\n        A future implementation is to have this button plot your insert shape on the model plot and display the predicted factor.\r\n      </font>\r\n    </p>-->\r\n\r\n\r\n\r\n  </div>\r\n\r\n\r\n\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet">\r\n    <h5>Change parameterisation server url (optional)</h5>\r\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default server is: <br>\r\n      <a>http://electronapi.simonbiggs.net/parameterise</a>       \r\n    </p>\r\n    <mdl-textfield\r\n      type="text"\r\n      label="Parameterisation Server Address"\r\n      (input)="parameterisationServerChange($event.target.value)"\r\n      floating-label\r\n      [(ngModel)]="parameteriseURL"\r\n      style="width:100%"></mdl-textfield>\r\n  </div>\r\n\r\n  <!--<div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet">\r\n    <h5>Edit raw coordinates</h5>\r\n    <my-json-input #jsonInput\r\n      [insert]="parameterisation.insert"\r\n      [jsonDisabled]="dataInFlight"\r\n      (insertUpdated)="insertUpdated($event)"\r\n      (jsonStatus)="onJsonStatusChange($event)">\r\n    </my-json-input>\r\n  </div>-->\r\n\r\n</div>\r\n'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=function(){function PageNotFoundComponent(){}return PageNotFoundComponent=i([o.Component({selector:"my-page-not-found",template:n(67)}),r("design:paramtypes",[])],PageNotFoundComponent)}();t.PageNotFoundComponent=a},function(e,t){e.exports='<div class="mdl-grid">\r\n  <div class="mdl-cell mdl-cell--12-col">\r\n    This page has not been found. Please provide feedback ...\r\n  </div>\r\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(63),s=function(){function HomeComponent(e){this.myTitleService=e}return HomeComponent.prototype.ngOnInit=function(){this.myTitleService.setTitle("Home")},HomeComponent=i([o.Component({selector:"my-home",template:n(69)}),r("design:paramtypes",[a.TitleService])],HomeComponent)}();t.HomeComponent=s},function(e,t){e.exports='<div itemscope itemtype="http://schema.org/SoftwareApplication" class="mdl-grid">\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h3 itemprop="name">Electron insert factor modelling</h3>\r\n    <p>\r\n      Tags: <span itemprop="applicationCategory">Medical physics, electron inserts, electron cutouts, Python, Angular2, Bokeh, spline modelling</span><br>\r\n      Last update: <span itemprop="datePublished" content="2016-10-18">2016-10-23</span><br>\r\n      Version: <span itemprop="softwareVersion">0.1.4-beta</span><br>\r\n      Operating system: <span itemprop="operatingSystem">Windows, Linux, Mac, Android, and iOS</span> <br>\r\n      Requirements: <span itemprop="requirements">A browser that supports <a href="http://caniuse.com/#feat=namevalue-storage">local storage</a></span><br>\r\n      Developed by: <span itemprop="author" itemscope itemtype="http://schema.org/Person"><a itemprop="name" href="https://github.com/SimonBiggs">Simon Biggs</a></span>\r\n\r\n    </p>\r\n    \r\n    <h4>Description</h4>\r\n    <p>\r\n      This online web app is for the modelling of the portion of the electron output factor that is dependent on the shape of the shielding insert mounted within the applicator. This allows modelling insert factors using only the measured factors already available at a centre. Should all outliers be removed from the data set the user might expect as low as 0.5% standard uncertainty for factor prediction with as little as 8 data points.\r\n    </p>\r\n\r\n\r\n    <p>If you have any issues or feedback please contact me at <a href="mailto:mail@simonbiggs.net">mail@simonbiggs.net</a>.</p>\r\n\r\n    <h4>Instructions</h4>\r\n    <h5>Overview</h5>\r\n    <p>This web app is divided into four logical components:</p>\r\n      <ul>\r\n        <li>   \r\n          Defining your centre specific machine specifications within the   \r\n          <a routerLink="/specifications" routerLinkActive="active">\r\n            machine specifications component\r\n          </a>\r\n        </li>\r\n        <li>\r\n          Insert shape extraction from a dicom patient plan within the\r\n          <a routerLink="/dicom" routerLinkActive="active">\r\n            dicom component\r\n          </a>\r\n        </li>\r\n        <li>\r\n          Parameterise the insert shapes into equivalent widths and lengths within the\r\n          <a routerLink="/parameterise" routerLinkActive="active">\r\n            parameterisation component\r\n          </a>\r\n        </li>\r\n        <li>\r\n          Take at least 8 widths, lengths, and measured factors for a given machine, applicator, energy, ssd combination and create an empirical model within the\r\n          <a routerLink="/create-model" routerLinkActive="active">\r\n            model component\r\n          </a>\r\n        </li>\r\n      </ul>\r\n\r\n      <p>\r\n        All your model and machine data is saved on your local machine within your browser. \r\n        Your progress will be saved as long as you do not clear your browser data.\r\n        In the future I plan to implement a data export and import feature, as well as the ability to sync models between browsers via a server.\r\n        Currently however the only place your web app data is being stored is on your local machine.\r\n      </p>\r\n\r\n       \r\n      \r\n      <h5>To demo</h5>\r\n      <p>\r\n        If you wish to simply demo this app these are the following steps you can take:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Within the \r\n          <a routerLink="/dicom" routerLinkActive="active">\r\n            dicom component \r\n          </a>\r\n          download the demo dicom file, load it into the web app and see the insert shapes be pulled from the dicom file without any network traffic\r\n        </li>\r\n        <li>\r\n          Within the \r\n          <a routerLink="/parameterise" routerLinkActive="active">\r\n            parameterise component\r\n          </a>\r\n          press the "Load Demo Data" button and then press the "Parameteterise Insert" button to see the parameterisation algorithim in action\r\n        </li>\r\n        <li>\r\n          Within the \r\n          <a routerLink="/model" routerLinkActive="active">\r\n            model component\r\n          </a>\r\n          press the "Load Demo Data" button and then press the "Run Spline Model" to see the spline model being created. \r\n          You can then either hover over the model, or tap on the model to view the relevant values.\r\n        </li>\r\n      </ul>\r\n\r\n      <h5>To implement in your centre</h5>\r\n      <p>\r\n        To implement this web app in your centre you need to do the following:\r\n      </p>\r\n      <ul>\r\n        <li>  \r\n          Specify the machine models and the corresponding applicators, energies, and ssds within the    \r\n          <a routerLink="/specifications" routerLinkActive="active">\r\n            machine specification component.\r\n          </a>\r\n        </li>\r\n        <li> \r\n          Collate / measure your electron insert factor measuremens. These factors are to measured in accordance to TG 25.   \r\n        </li>\r\n        <li>\r\n          If the insert shapes are ellipses, you may directly input the ellipse widths and lengths as projected to the isocentre within the \r\n          <a routerLink="/model" routerLinkActive="active">\r\n            model component.\r\n          </a>\r\n        </li>\r\n        <li>\r\n          If the insert shape is a generic shape or you know the x and y coordinates of your insert then determine the equivalent ellipse widths and lengths by inputting x and y coordinates as defined at isocentre within the \r\n          <a routerLink="/parameterise" routerLinkActive="active">\r\n            parameterisation component.\r\n          </a>          \r\n        </li>\r\n        <li>\r\n          If the insert shape is defined within your planning system, export the patient plan to dicom and then read the insert coordinates from the dicom file using the\r\n          <a routerLink="/dicom" routerLinkActive="active">\r\n            dicom component.\r\n          </a>          \r\n        </li>\r\n        <li>\r\n          Once you have the corresponding equivalent ellipse widths and lengths for your measured factors these may be appended to the relevant machine configuration within the \r\n          <a routerLink="/model" routerLinkActive="active">\r\n            model component\r\n          </a>\r\n        </li>\r\n        <li>\r\n          Whenever a machine configuration gets at least 8 data points you may press the "Run Spline Model" on the \r\n          <a routerLink="/model" routerLinkActive="active">\r\n            model component\r\n          </a>\r\n          which will allow the prediction of insert factors for other widths and lengths.\r\n        </li>\r\n      </ul>\r\n\r\n      <h5>To use the web app after it has been implemented</h5>\r\n      <ul>\r\n        <li>\r\n          Export the patient plan to dicom and then read the insert coordinates from the dicom file using the\r\n          <a routerLink="/dicom" routerLinkActive="active">\r\n            dicom component.\r\n          </a>          \r\n        </li>\r\n        <li>\r\n          Press the "Parameterise Insert" button to determine the equivalent ellipse width and length\r\n        </li>\r\n        <li>\r\n          Press the "Predict Factor with Model" button to automatically change the machine configuration to that which matches your loaded insert\r\n        </li>\r\n        <li>\r\n          Hover your mouse over the relevant width and length within the model to predict your insert factor\r\n        </li>\r\n      </ul>\r\n\r\n  </div>\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n\r\n    <h4>Publications</h4>\r\n    <!--<h6>Original paper</h6>-->\r\n    <p>The paper detailing the algorithim and its validation:</p>\r\n    <p>\r\n      S. Biggs, M. Sobolewski, R. Murry, J. Kenny, Spline modelling electron insert factors using routine measurements. Physica Medica (2015), <a href="http://dx.doi.org/10.1016/j.ejmp.2015.11.002">doi:10.1016/j.ejmp.2015.11.002</a>.\r\n    </p>\r\n\r\n    <!--<h6>EPSM2016 Poster</h6>\r\n    <ul>\r\n      <li><a href="https://www.dropbox.com/s/09ij94rqc012ad8/ElectronInsertsWebAppPoster.jpg?dl=1">Low resolution</a></li>\r\n      <li><a href="https://www.dropbox.com/s/ga5e64echv255b8/ElectronsPoster.svg?dl=1">Original SVG file</a></li>\r\n    </ul>-->\r\n\r\n    <h4>Disclaimer</h4>\r\n    <p>\r\n      Any use of this web app or any of its code has you accepting the AGPL3+ license which includes no warranty that this code is fit for a particular purpose. Attempts have been made to make the code transparent and it is recommended that an experienced python programmer and physicist who understands the procedure outlined in the paper and the requirements of your centre identifies whether or not this method and code is fit for your use.</p>\r\n\r\n    <h4>Use of Google Analytics</h4>\r\n    <p>\r\n      To aid in quickly identifying bugs, user experience issues, and documenting app usage the Google Analytics service is employed. \r\n      This collates and reports page views, button clicks, and demographic information based upon your IP address.\r\n      For more information on privacy regarding Google Analytics <a href="https://support.google.com/analytics/answer/6004245">click here.</a>\r\n      If you wish to opt-out of Google Analytics data collection please <a href="https://tools.google.com/dlpage/gaoptout">click here.</a>\r\n    </p>   \r\n\r\n\r\n    <h4>Steps required to freeze your own version of this web app</h4>\r\n      As I make improvements to this web app I will be updating this online version. \r\n      You may desire to not have the web app you are using day to day change on you.\r\n      To achieve this you can create your own version of the server and your own version of the web app.\r\n      \r\n      For now this will require a bit of your own working out until I provide further instructions.\r\n\r\n\r\n\r\n    <h4>Source code</h4>\r\n    <p>\r\n      For the purpose of coding transparency and to enable the user to take responsibility for the code themselves any redistribution\r\n      or derivative works of this web app need to include the source code of any additions made and need to include a way\r\n      for users to easily access the source code of each of the components used or linked to.\r\n    </p>\r\n\r\n    <h5>Server Code</h5>\r\n\r\n    <h6>Base Electron Insert Factor Source Code</h6>\r\n    <p>\r\n      The python file which does the shape parameterisation and insert factor modelling which is used by the server is found here:\r\n      <a href="https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py">\r\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py</a>\r\n    </p>\r\n\r\n    <h6>Tornado REST API</h6>\r\n    <p>\r\n      The Tornado REST API is found here:\r\n      <a href="https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py">\r\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py</a>\r\n    </p>\r\n\r\n    <h6>Heroku App code</h6>\r\n    <p>\r\n      The code to make the heroku app is found here:\r\n      <a href="https://github.com/SimonBiggs/electronfactor-server">\r\n              https://github.com/SimonBiggs/electronfactor-server</a>\r\n    </p>\r\n\r\n    <h5>Web App Code</h5>\r\n    <p>\r\n      The source code for this web app is found here:\r\n      <a itemprop="downloadUrl" href="https://github.com/SimonBiggs/electroninserts-webapp">\r\n            https://github.com/SimonBiggs/electroninserts-webapp</a>\r\n    </p>\r\n\r\n    <h5>Libraries used</h5>\r\n    <h6>Bokehjs</h6>\r\n    <p>\r\n      The bokehjs library is used for plots. Documentation can be found here:\r\n      <a href="http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs">\r\n              http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs</a>\r\n    </p>\r\n    <p>\r\n      Source code can be found here:\r\n      <a href="https://github.com/bokeh/bokeh/tree/master/bokehjs">\r\n              https://github.com/bokeh/bokeh/tree/master/bokehjs</a>\r\n    </p>\r\n\r\n    <h6>dcmjs</h6>\r\n    <p>\r\n      The dcmjs library is used for reading dicom files within javascript. Website can be found here:\r\n      <a href="http://dcmjs.org/">\r\n              http://dcmjs.org/</a>\r\n    </p>\r\n    <p>\r\n      Source code can be found here:\r\n      <a href="https://github.com/commontk/dcmjs">\r\n              https://github.com/commontk/dcmjs</a>\r\n    </p>\r\n\r\n    <h6>Angular2</h6>\r\n    <p>\r\n      This interface was built using Angular2. Documentation can be found here:\r\n      <a href="https://angular.io/docs/ts/latest/">\r\n              https://angular.io/docs/ts/latest/</a>\r\n    </p>\r\n    <p>\r\n      Source code can be found here:\r\n      <a href="https://github.com/angular/angular">\r\n              https://github.com/angular/angular</a>\r\n    </p>\r\n    <h6>Remaining libraries</h6>\r\n    <p>\r\n      For all remaining libraries used please see the npm package.json file:\r\n      <a href="https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json">\r\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json</a>\r\n    </p>\r\n    <p>\r\n      And the index file for various imports:\r\n      <a href="https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html">\r\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html</a>\r\n    </p>\r\n  </div>\r\n\r\n\r\n</div>';
},function(module,exports,__webpack_require__){"use strict";var __decorate=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=__webpack_require__(3),title_service_1=__webpack_require__(63),electron_api_service_1=__webpack_require__(59),model_data_1=__webpack_require__(64),CreateModelComponent=function(){function CreateModelComponent(e,t,n,i){var r=this;this.modelData=e,this.myTitleService=t,this.electronApiService=n,this.textboxInput={width:null,length:null,measuredFactor:null},this.textboxLabels={width:"Equivalent ellipse widths (cm @iso)",length:"Equivalent ellipse lengths (cm @iso)",measuredFactor:"Measured insert factor (as per TG 25)"},this.textboxValid={width:!0,length:!0,measuredFactor:!0},this.currentSettings={machine:null,energy:null,applicator:null,ssd:null},this.lengthSmallerThanWidth=!1,this.plot_width=600,this.dataInFlight=!1,window.onresize=function(e){i.run(function(){r.updatePlotWidth()})}}return CreateModelComponent.prototype.ngOnInit=function(){this.myTitleService.setTitle("Create Model"),this.modelURL=localStorage.getItem("modelURL"),null==this.modelURL&&(this.modelURL="http://electronapi.simonbiggs.net/model"),this.updatePlotWidth()},CreateModelComponent.prototype.updatePlotWidth=function(){this.plot_width=this.plotContainer.nativeElement.clientWidth},CreateModelComponent.prototype.currentMachineSettingsUpdated=function(e){for(var t=0,n=["machine","energy","applicator","ssd"];t<n.length;t++){var i=n[t];this.currentSettings[i]=e[i]}this.loadMeasuredData(),this.checkLengthSmallerThanWidth()},CreateModelComponent.prototype.createKey=function(){var e='{"machine":'+JSON.stringify(String(this.currentSettings.machine))+',"energy":'+JSON.stringify(Number(this.currentSettings.energy))+',"applicator":'+JSON.stringify(String(this.currentSettings.applicator))+',"ssd":'+JSON.stringify(Number(this.currentSettings.ssd))+"}";return e},CreateModelComponent.prototype.loadMeasuredData=function(){var e=this.createKey(),t=JSON.parse(localStorage.getItem(e));this.modelData.fillFromObject(t),this.updateTextboxInput()},CreateModelComponent.prototype.saveModel=function(){var e=this.createKey();localStorage.setItem(e,JSON.stringify(this.modelData))},CreateModelComponent.prototype.updateTextboxInput=function(){for(var e=0,t=["width","length","measuredFactor"];e<t.length;e++){var n=t[e];this.textboxInput[n]=String(this.modelData.measurement[n]).replace(/,/g,", ")}},CreateModelComponent.prototype.checkLengthSmallerThanWidth=function(){this.lengthSmallerThanWidth=!1;for(var e=0;e<this.modelData.measurement.width.length;e++)if(this.modelData.measurement.width[e]>this.modelData.measurement.length[e])return void(this.lengthSmallerThanWidth=!0)},CreateModelComponent.prototype.validateInput=function(e){return!0},CreateModelComponent.prototype.onTextboxChange=function(key,newInput){this.textboxValid[key]=!1,this.modelData.model.reset();try{this.validateInput(newInput)&&(this.modelData.measurement[key]=eval("["+newInput.replace(/[,;\n\t]\s*/g,", ")+"]"),this.saveModel(),this.textboxValid[key]=!0,this.checkLengthSmallerThanWidth())}catch(err){console.log(err)}},CreateModelComponent.prototype.basicServerSubmit=function(){var e=this;this.dataInFlight=!0,this.electronApiService.sendToServer(this.modelURL,JSON.stringify(this.modelData.measurement)).then(function(t){e.modelData.model.width=t.model_width,e.modelData.model.length=t.model_length,e.modelData.model.predictedFactor=t.model_factor,e.dataInFlight=!1,e.saveModel()})},CreateModelComponent.prototype.modelServerChange=function(e){localStorage.setItem("modelURL",e)},CreateModelComponent.prototype.defaultServer=function(){this.modelURL="http://electronapi.simonbiggs.net/model",localStorage.setItem("modelURL",this.modelURL)},CreateModelComponent.prototype.loadDemoData=function(){for(var e=0,t=["machine","energy","applicator","ssd"];e<t.length;e++){var n=t[e];this.currentSettings[n]=null}this.settingsPicker.currentSettings=this.currentSettings,this.modelData.model.reset(),this.modelData.measurement.width=[3.71,6.78,6.3,7.56,5.26,6.53,7.08,4.38,3.66,4.21,4.21,6.54,5.86,3.17,6,8.06,6.31,5.26,4.21,5.21,4.59,5.34,6.41,5.26,5.25,7.82,4.2,3.16,7.18,5.72,6.08,6.64,8.4,4.59,3.15,4.67,4.21,9.45,7.64,3.17,3.17,7.36],this.modelData.measurement.length=[4.36,10.97,6.33,10.05,13.66,10.99,10.77,5.47,5.04,8.41,13.65,8.41,8.62,9.43,7.97,11.85,8.24,10.52,6.82,11.4,5.67,9.64,8.69,8.41,5.26,10.85,4.21,5.25,11.27,11.6,6.64,9.81,8.42,6.54,3.16,6.28,10.51,9.47,8.99,13.64,6.83,7.37],this.modelData.measurement.measuredFactor=[.9489,1.0067,.9858,1.0045,.9868,1.0004,1.0052,.9634,.9437,.9708,.9757,.9931,.9896,.9492,.9911,1.0067,.9923,.9879,.9609,.9884,.9587,.9934,.9991,.9831,.9705,1.0019,.9562,.9348,.9987,.9989,.9933,.9991,1.0067,.9683,.9296,.9735,.9709,1.0084,1.0028,.953,.9484,1.0032],this.checkLengthSmallerThanWidth(),this.updateTextboxInput()},__decorate([core_1.ViewChild("plotContainer"),__metadata("design:type",Object)],CreateModelComponent.prototype,"plotContainer",void 0),__decorate([core_1.ViewChild("settingsPicker"),__metadata("design:type",Object)],CreateModelComponent.prototype,"settingsPicker",void 0),CreateModelComponent=__decorate([core_1.Component({selector:"my-create-model",template:__webpack_require__(71)}),__metadata("design:paramtypes",[model_data_1.ModelData,title_service_1.TitleService,electron_api_service_1.ElectronApiService,core_1.NgZone])],CreateModelComponent)}();exports.CreateModelComponent=CreateModelComponent},function(e,t){e.exports='<div class="mdl-grid">\r\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h5>Description</h5>\r\n    <p>\r\n      Use this component to turn a set of at least 8 measured factors with corresponding equivalent widths and lengths into a spline model.\r\n      These widths and lengths need to be determined using the parameterisation method employed within the \r\n      <a routerLink="/parameterise" routerLinkActive="active">\r\n        parameterisation component.\r\n      </a>\r\n    </p>\r\n    <p>\r\n      You are free to edit the widths, lengths, and factors manually below, or have the       \r\n      <a routerLink="/parameterise" routerLinkActive="active">\r\n        parameterisation component\r\n      </a>\r\n      automatically add the measured factors to the correct model. Both work interchangably.\r\n      You may only add shapes via the \r\n      <a routerLink="/parameterise" routerLinkActive="active">\r\n        parameterisation component\r\n      </a>\r\n      if machine ID, applicator, energy, ssd, and measured factor are filled in and they match a machine configuration defined within the \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        specifications component.\r\n      </a> \r\n    </p>\r\n    <p>\r\n      A spline model is only valid for a single machine configuration. \r\n      Therefore each machine, applicator, energy, ssd has its own model. \r\n      Using the machine configuration section below you can change between the configurations.\r\n      This will only work if you have already\r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        defined your machine configurations.\r\n      </a> \r\n    </p>\r\n\r\n  </div>\r\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h5>Choose machine configuration</h5>\r\n    <p>\r\n      Here is where you select the machine specifications for the model you with to edit. \r\n      You will only see options here if you have actually       \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        defined your machine configurations.\r\n      </a> \r\n    </p>\r\n  </div>\r\n\r\n  <div [style.width]="\'100%\'">\r\n    <my-choose-specifications #settingsPicker\r\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\r\n    </my-choose-specifications>\r\n  </div>\r\n  \r\n\r\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <div [style.width]="\'100%\'" [style.height]="\'30px\'"></div>\r\n    <h5>\r\n      The model\r\n      <span *ngIf="currentSettings.machine != null && currentSettings.energy != null && currentSettings.energy != 0 && currentSettings.applicator != null && currentSettings.applicator != \'\' && currentSettings.ssd != null && currentSettings.ssd != 0">\r\n        for machine ID {{currentSettings.machine}}, at an energy of {{currentSettings.energy}} MeV, on the {{currentSettings.applicator}} applicator at {{currentSettings.ssd}} cm SSD\r\n      </span>\r\n      </h5>    \r\n  </div>\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n\r\n    <h6>Input widths, lengths, and factors</h6>\r\n    <p>\r\n      Use the following text boxes to directly edit the measured data used by the spline model.\r\n    </p>\r\n    <p>\r\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\r\n      This web app should handle copying and pasting from a range of sources (including excel).\r\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\r\n    </p>\r\n\r\n    <div *ngFor="let key of [\'width\', \'length\', \'measuredFactor\']">\r\n      <mdl-textfield \r\n        type="text"\r\n        [label]="textboxLabels[key]"\r\n        [(ngModel)]="this.textboxInput[key]"\r\n        (input)="onTextboxChange(key, $event.target.value)"\r\n        rows=4\r\n        floating-label\r\n        [disabled]="dataInFlight"\r\n        [style.width]="\'100%\'"></mdl-textfield>\r\n      <p *ngIf="!textboxValid[key]">\r\n        The {{key}} input is invalid\r\n      </p>\r\n      <span *ngIf="key==\'length\'">\r\n        <p *ngIf="lengthSmallerThanWidth">\r\n          There exists a length value that is smaller than its corresponding width. Spline modelling is disabled as a result.\r\n        </p>\r\n      </span>\r\n    </div>\r\n    <p *ngIf="modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length">\r\n      The lengths of the inputs are not equal. Spline modelling is disabled as a result.\r\n    </p>\r\n    <p *ngIf="modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8">\r\n      There are currently less than 8 data points. Spline modelling is disabled as a result.\r\n    </p>\r\n  </div>\r\n\r\n<div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone" #plotContainer>\r\n    <h6>The spline model</h6>\r\n    <button\r\n      mdl-button mdl-button-type="raised" \r\n      mdl-colored="primary" \r\n      mdl-ripple\r\n      angulartics2On="click" angularticsEvent="Model | Load demo data"\r\n      [disabled]="dataInFlight"\r\n      (click)="loadDemoData()">Load demo data         \r\n    </button>\r\n      \r\n    <button\r\n      mdl-button mdl-button-type="raised" \r\n      mdl-colored="primary" \r\n      mdl-ripple\r\n      angulartics2On="click" angularticsEvent="Model | Calculate spline model"\r\n      [disabled]="modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8 || dataInFlight || modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length || !textboxValid[\'width\'] || !textboxValid[\'length\'] || !textboxValid[\'measuredFactor\'] || lengthSmallerThanWidth"\r\n      (click)="basicServerSubmit()">Calculate Spline Model\r\n    </button>\r\n    \r\n\r\n    <div *ngIf="modelData.measurement.width.length > 0 && modelData.measurement.length.length > 0 && modelData.measurement.measuredFactor.length > 0">\r\n      <my-bokeh-create-model\r\n        [title]="\'Model Plot\'"\r\n        [scatter_x]="modelData.measurement.width"\r\n        [scatter_y]="modelData.measurement.length"\r\n        [scatter_z]="modelData.measurement.measuredFactor"\r\n        [pcolour_x]="modelData.model.width"\r\n        [pcolour_y]="modelData.model.length"\r\n        [pcolour_z]="modelData.model.predictedFactor"\r\n        [plot_width]="plot_width"\r\n        [plot_height]="380">\r\n      </my-bokeh-create-model>\r\n    </div>\r\n    <div *ngIf="modelData.measurement.width.length == 0 || modelData.measurement.length.length == 0|| modelData.measurement.measuredFactor.length == 0">\r\n      <p>\r\n        <font color="red">There is currently no data for this combination.</font> If you wish to load some demo data to see the model in action press the "load demo data" button below.\r\n        To set this model up with your own data follow the instructions in the description at the top of this page.\r\n      </p>\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet">\r\n    <h5>Change modelling server url (optional)</h5>\r\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default is: <br>\r\n      <a (click)="defaultServer()">http://electronapi.simonbiggs.net/model</a>        \r\n    </p>\r\n    <mdl-textfield\r\n      type="text"\r\n      label="Spline model server address"\r\n      (input)="modelServerChange($event.target.value)"\r\n      floating-label\r\n      [(ngModel)]="modelURL"\r\n      style="width:100%"></mdl-textfield>\r\n  </div>\r\n\r\n\r\n</div>'},function(module,exports,__webpack_require__){"use strict";var __decorate=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},core_1=__webpack_require__(3),title_service_1=__webpack_require__(63),model_data_1=__webpack_require__(64),sanitise_validation_1=__webpack_require__(73),UseModelComponent=function(){function UseModelComponent(e,t,n){var i=this;this.modelData=e,this.myTitleService=t,this.textboxInput={width:null,length:null,area:null,measuredFactor:null},this.textboxLabels={width:"Width of ellipse given by diameter of largest encompassed circle (cm @iso)",length:"Length of ellipse that matches insert shape area (cm @iso)",area:"[Optional] Area of insert shape (cm^2 @iso)",measuredFactor:"[Optional] Measured insert factor (as per TG 25)"},this.textboxValid={width:!0,length:!0,area:!0,measuredFactor:!0},this.currentSettings={machine:null,energy:null,applicator:null,ssd:null},this.modelLookup={},this.predictionDifference=[],this.lengthSmallerThanWidth=!1,this.plot_width=600,this.lastEdit="length",window.onresize=function(e){n.run(function(){i.updatePlotWidth()})}}return UseModelComponent.prototype.ngOnInit=function(){this.myTitleService.setTitle("Use Model"),this.updatePlotWidth(),this.updateModelLookup(),this.loadMeasuredData(),this.updatePredictedFactors()},UseModelComponent.prototype.lookupFactor=function(e,t){e=Math.round(10*e)/10,t=Math.round(10*t)/10;var n;return n=String(e)+","+String(t),Math.round(1e3*this.modelLookup[n])/1e3},UseModelComponent.prototype.updatePredictedFactors=function(){this.modelData.predictions.predictedFactor=[];for(var e,t,n,i=Math.min(this.modelData.predictions.width.length,this.modelData.predictions.length.length),r=0;r<i;r++)t=this.modelData.predictions.width[r],n=this.modelData.predictions.length[r],e=this.lookupFactor(t,n),this.modelData.predictions.predictedFactor.push(e);this.updatePredictionDifference()},UseModelComponent.prototype.updatePredictionDifference=function(){this.predictionDifference=[];var e,t,n;for(var i in this.modelData.predictions.measuredFactor)e=this.modelData.predictions.measuredFactor[i],t=this.modelData.predictions.predictedFactor[i],n=t-e,n=Math.round(1e3*n)/1e3,this.predictionDifference.push(n)},UseModelComponent.prototype.updateModelLookup=function(){this.modelLookup={};var e;for(var t in this.modelData.model.width)e=String(this.modelData.model.width[t])+","+String(this.modelData.model.length[t]),this.modelLookup[e]=this.modelData.model.predictedFactor[t]},UseModelComponent.prototype.convertLengthToArea=function(e,t){var n=Math.PI*e*t/4;return Math.round(10*n)/10},UseModelComponent.prototype.convertAreaToLength=function(e,t){var n=4*t/(Math.PI*e);return Math.round(10*n)/10},UseModelComponent.prototype.updateAreaFromLength=function(){var e,t,n;this.modelData.predictions.area=[];for(var i in this.modelData.predictions.length)e=this.modelData.predictions.width[i],t=this.modelData.predictions.length[i],n=this.convertLengthToArea(e,t),this.modelData.predictions.area.push(n)},UseModelComponent.prototype.updateLengthFromArea=function(){var e,t,n;this.modelData.predictions.length=[];for(var i in this.modelData.predictions.area)e=this.modelData.predictions.width[i],n=this.modelData.predictions.area[i],t=this.convertAreaToLength(e,n),this.modelData.predictions.length.push(t)},UseModelComponent.prototype.updatePlotWidth=function(){this.plot_width=this.plotContainer.nativeElement.clientWidth},UseModelComponent.prototype.currentMachineSettingsUpdated=function(e){for(var t=0,n=["machine","energy","applicator","ssd"];t<n.length;t++){var i=n[t];this.currentSettings[i]=e[i]}this.loadMeasuredData()},UseModelComponent.prototype.loadMeasuredData=function(){this.modelData.loadModelData(this.currentSettings),this.modelData.predictions.length.length<this.modelData.predictions.area.length?this.updateLengthFromArea():this.updateAreaFromLength(),this.updateModelLookup(),this.updatePredictedFactors(),this.updateAllTextboxInputs()},UseModelComponent.prototype.saveModel=function(){this.modelData.saveModelData(this.currentSettings)},UseModelComponent.prototype.updateAllTextboxInputs=function(){for(var e=0,t=["width","length","area","measuredFactor"];e<t.length;e++){var n=t[e];this.updateTextboxInput(n)}},UseModelComponent.prototype.updateTextboxInput=function(e){this.textboxInput[e]=String(this.modelData.predictions[e]).replace(/,/g,", ")},UseModelComponent.prototype.onTextboxChange=function(key,newInput){this.textboxValid[key]=!1;try{sanitise_validation_1.validateInput(newInput)&&(this.modelData.predictions[key]=eval("["+newInput.replace(/[,;\n\t]\s*/g,", ")+"]"),this.textboxValid[key]=!0,("length"==key||"width"==key&&"length"==this.lastEdit)&&(this.updateAreaFromLength(),this.updateTextboxInput("area"),this.lastEdit="length"),("area"==key||"width"==key&&"area"==this.lastEdit)&&(this.updateLengthFromArea(),this.updateTextboxInput("length"),this.lastEdit="area"),this.updatePredictedFactors(),this.saveModel())}catch(err){console.log(err)}},__decorate([core_1.ViewChild("plotContainer"),__metadata("design:type",Object)],UseModelComponent.prototype,"plotContainer",void 0),__decorate([core_1.ViewChild("settingsPicker"),__metadata("design:type",Object)],UseModelComponent.prototype,"settingsPicker",void 0),UseModelComponent=__decorate([core_1.Component({selector:"my-use-model",template:__webpack_require__(74)}),__metadata("design:paramtypes",[model_data_1.ModelData,title_service_1.TitleService,core_1.NgZone])],UseModelComponent)}();exports.UseModelComponent=UseModelComponent},function(e,t){"use strict";function validateInput(e){return/^[-\d\.,;\sNa]*$/.test(e)}t.validateInput=validateInput},function(e,t){e.exports='<div class="mdl-grid">\r\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h5>Use models</h5>\r\n    <p>\r\n      This component is where created models are used. \r\n      Factors for prediction will be able to be inputted using width, and then either length or area, and optionally\r\n      a measured factor can be included for the purpose of comparing model results with measurement.\r\n    </p>\r\n    <p>\r\n      You can either use the parameterisation component to parameterise your shapes, or if you have a large data set of \r\n      generic shapes you need only determine the diameter of the largest encompassed circle to define width, and then\r\n      you may input shape area instead of length.\r\n      This allows you to quickly check large data sets of previous measurements on generic shapes.\r\n    </p>\r\n  </div>\r\n\r\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h5>Choose machine configuration</h5>\r\n    <my-choose-specifications #settingsPicker\r\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\r\n    </my-choose-specifications>\r\n  </div>\r\n\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h5>Inserts being predicted</h5>\r\n    <div *ngFor="let key of [\'width\', \'length\', \'area\', \'measuredFactor\']">\r\n      <mdl-textfield \r\n        type="text"\r\n        [label]="textboxLabels[key]"\r\n        [(ngModel)]="this.textboxInput[key]"\r\n        (input)="onTextboxChange(key, $event.target.value)"\r\n        rows=2\r\n        floating-label\r\n        [style.width]="\'100%\'"></mdl-textfield>\r\n      <p *ngIf="!textboxValid[key]">\r\n        The {{key}} input is invalid\r\n      </p>\r\n    </div>\r\n    <p>Predicted factors: {{modelData.predictions.predictedFactor}}</p>\r\n    <p>Prediction minus measured: {{predictionDifference}}</p>\r\n  </div>\r\n\r\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone" #plotContainer>\r\n    <div *ngIf="modelData.model.width.length > 0 && modelData.model.length.length > 0 && modelData.model.predictedFactor.length > 0">\r\n      <my-bokeh-use-model\r\n        [title]="\'Model Plot\'"\r\n        [scatter_x]="modelData.predictions.width"\r\n        [scatter_y]="modelData.predictions.length"\r\n        [area]="modelData.predictions.area"\r\n        [scatter_z]="modelData.predictions.measuredFactor"\r\n        [predicted_factor]="modelData.predictions.predictedFactor"\r\n        [pcolour_x]="modelData.model.width"\r\n        [pcolour_y]="modelData.model.length"\r\n        [pcolour_z]="modelData.model.predictedFactor"\r\n        [plot_width]="plot_width"\r\n        [plot_height]="380">\r\n      </my-bokeh-use-model>\r\n    </div>\r\n    <div *ngIf="modelData.model.width.length == 0 || modelData.model.length.length == 0|| modelData.model.predictedFactor.length == 0">\r\n      <p>\r\n        A model has not been calculated for this machine specification.\r\n        If you do have at least 8 data points please calculate the spline model on the           \r\n        <a routerLink="/create-model" routerLinkActive="active">\r\n          create model component.\r\n        </a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(63),s=n(76),l=function(){function StorageManagementComponent(e,t){this.myTitleService=e,this.myLocalStorageService=t}return StorageManagementComponent.prototype.ngOnInit=function(){this.myTitleService.setTitle("Storage"),this.testLocalStorage=this.myLocalStorageService.isSupported,this.usedLocalStorageSpace=this.myLocalStorageService.getUsedSpace()},StorageManagementComponent.prototype.testRemainingStorage=function(){this.remainingLocalStorageSpace=this.myLocalStorageService.getRemainingSpace()},StorageManagementComponent=i([o.Component({selector:"my-storage-management",template:n(78)}),r("design:paramtypes",[a.TitleService,s.LocalStorageService])],StorageManagementComponent)}();t.StorageManagementComponent=l},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(77),s=function(){function LocalStorageService(){this.isSupported=a.LocalStorage.isSupported,this.hasItem=a.LocalStorage.hasItem,this.getRemainingSpace=a.LocalStorage.getRemainingSpace,this.getMaximumSpace=a.LocalStorage.getMaximumSpace,this.getUsedSpace=a.LocalStorage.getUsedSpace,this.getItemUsedSpace=a.LocalStorage.getItemUsedSpace,this.getBackup=a.LocalStorage.getBackup,this.applyBackup=a.LocalStorage.applyBackup,this.consoleInfo=a.LocalStorage.consoleInfo}return LocalStorageService=i([o.Injectable(),r("design:paramtypes",[])],LocalStorageService)}();t.LocalStorageService=s},function(e,t){"use strict";var n;!function(e){function hasItem(e){return null!==localStorage.getItem(e)}function getRemainingSpace(){for(var e=localStorage.getItem(""),t=!0,n="1",i="",r="";;)try{r=i+n,localStorage.setItem("",r),i=r,t&&(n+=n)}catch(o){if(n.length<2)break;t=!1,n=n.substr(n.length/2)}return null===e?localStorage.removeItem(""):localStorage.setItem("",e),i.length}function getMaximumSpace(){var e=getBackup();localStorage.clear();var t=getRemainingSpace();return applyBackup(e),t}function getUsedSpace(){for(var e=0,t=0;t<localStorage.length;++t){var n=localStorage.key(t),i=localStorage.getItem(n);e+=n.length+i.length}return e}function getItemUsedSpace(e){var t=localStorage.getItem(e);return null===t?NaN:e.length+t.length}function getBackup(){for(var e={},t=0;t<localStorage.length;++t){var n=localStorage.key(t),i=localStorage.getItem(n);e[n]=i}return e}function applyBackup(e,t,n){void 0===t&&(t=!0),void 0===n&&(n=!0),1==t&&localStorage.clear();for(var i in e)if(n!==!1||void 0===e[i]){var r=e[i];localStorage.setItem(i,r)}}function consoleInfo(e){void 0===e&&(e=!1);for(var t=0,n=0,i=0;i<localStorage.length;++i){var r=localStorage.key(i),o=localStorage.getItem(r);console.log(t,r,o),n+=r.length+o.length,t++}if(console.log("Total entries:",t),console.log("Total size:",n),e===!0){var a=getMaximumSpace();console.log("Total size:",a)}}e.isSupported=function(){try{var e=localStorage.getItem("");return localStorage.removeItem(""),localStorage.setItem("",e),null===e?localStorage.removeItem(""):localStorage.setItem("",e),!0}catch(t){return!1}}(),e.hasItem=hasItem,e.getRemainingSpace=getRemainingSpace,e.getMaximumSpace=getMaximumSpace,e.getUsedSpace=getUsedSpace,e.getItemUsedSpace=getItemUsedSpace,e.getBackup=getBackup,e.applyBackup=applyBackup,e.consoleInfo=consoleInfo}(n=t.LocalStorage||(t.LocalStorage={}))},function(e,t){e.exports='<div class="mdl-grid">\r\n  <div class="mdl-cell mdl-cell--6-col">\r\n    <h5>Storage management</h5>\r\n    <p>\r\n      Component still under construction\r\n    </p>\r\n    <p>\r\n      This component is for the management of the data stored within this browser.\r\n      In the future you will be able to come here to bulk export/import your data to a \'.json\' file for backup and transfer.\r\n      At this current point in time the only function of this component is to see how much browser storage this web app\r\n      has left for its use.\r\n    </p>\r\n\r\n    <p>\r\n      None of your measured data, or your model data is stored on a remote server. \r\n      Your measurements and models are only sent to the server in the form of x and y coordinates for parameterisation, and \r\n      in the form of widths, lengths, and measured factors for modelling. \r\n      The server does not save a copy to disk of any of that data.\r\n    </p>\r\n\r\n    <p>\r\n      In the future it is envisaged that an option will be provided for you to easily share your model with \r\n      the community under the AGPLv3+ license should you so choose, but this will not be automatic. \r\n      It will be opt-in only.\r\n    </p>\r\n  </div>\r\n\r\n  <div class="mdl-cell mdl-cell--6-col">\r\n    <h5>Local storage tests</h5>\r\n    <p></p>\r\n\r\n    <div *ngIf="testLocalStorage">\r\n      <p>Your browser supports local storage. You currently have {{usedLocalStorageSpace}} B of used space. Most browsers support\r\n        5 MiB.\r\n      </p>\r\n\r\n      <p>To check your remaining storage press the button below. Warning, this might be slow.</p>\r\n      <button mdl-button mdl-button-type="raised" mdl-colored="primary" mdl-ripple (click)="testRemainingStorage()">Test remaining local storage           \r\n      </button>\r\n      <div *ngIf="remainingLocalStorageSpace">\r\n        <p>You have {{remainingLocalStorageSpace}} B of local storage remaining which is available for use by this webapp.</p>\r\n      </div>\r\n    </div>\r\n    <div *ngIf="!testLocalStorage">\r\n      <p>\r\n        This webapp relies upon local storage working within your browser. Your browser does not support local storage. Please download\r\n        and use a modern standards compliant browser such as\r\n        <a href="https://www.google.com.au/chrome/browser/desktop/">Chrome</a> or\r\n        <a href="https://www.mozilla.org/en-GB/firefox/new/">Firefox</a> to use this webapp.\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(63),s=function(){function SpecificationsComponent(e){this.myTitleService=e,this.specifications={},this.newMachineIDValid=!1,this.newModelValid=!1,this.newMachineValid=!1,this.edittingMachine=null,this.newEnergyValid=!1,this.newR50Valid=!1,this.newEnergySetValid=!1,this.edittingEnergy=null,this.newApplicatorValid=!1,this.edittingApplicator=null,this.newSSDValid=!1,this.edittingSSD=null}return SpecificationsComponent.prototype.ngOnInit=function(){this.myTitleService.setTitle("Specifications"),this.changeSpecifications(JSON.parse(localStorage.getItem("specifications")))},SpecificationsComponent.prototype.changeSpecifications=function(e){this.specifications=e,null==this.specifications?(this.specifications={},this.machines=[]):(this.machines=Object.keys(this.specifications).sort(),this.currentMachine=JSON.parse(localStorage.getItem("current_machine")),null!=this.currentMachine&&void 0!==this.specifications[this.currentMachine]||(this.currentMachine=this.machines[0])),this.updateSpecifications()},SpecificationsComponent.prototype.updateSpecifications=function(){localStorage.setItem("specifications",JSON.stringify(this.specifications))},SpecificationsComponent.prototype.changeCurrentMachine=function(e){
this.currentMachine=e,this.updateCurrentMachine()},SpecificationsComponent.prototype.checkNewMachineIDInput=function(){null==this.specifications[this.newMachineID]&&null!=this.newMachineID&&""!=this.newMachineID?this.newMachineIDValid=!0:this.newMachineIDValid=!1,this.checkNewMachineValid()},SpecificationsComponent.prototype.checkNewModelInput=function(){null!=this.newModel&&""!=this.newModel?this.newModelValid=!0:this.newModelValid=!1,this.checkNewMachineValid()},SpecificationsComponent.prototype.checkNewMachineValid=function(){this.newMachineValid=this.newMachineIDValid&&this.newModelValid},SpecificationsComponent.prototype.addMachineID=function(){this.newMachineValid&&(this.machines.push(this.newMachineID),this.specifications[this.newMachineID]={},this.specifications[this.newMachineID].model=this.newModel,this.specifications[this.newMachineID].energy=[],this.specifications[this.newMachineID].R50={},this.specifications[this.newMachineID].applicator=[],this.specifications[this.newMachineID].ssd=[],this.changeCurrentMachine(this.newMachineID),this.newMachineID=null,this.newModel=null,this.newMachineIDValid=!1,this.newModelValid=!1,this.newMachineValid=!1,this.updateSpecifications())},SpecificationsComponent.prototype.checkNewEnergyInput=function(){this.specifications[this.currentMachine].energy.indexOf(Number(this.newEnergy))<0&&null!=this.newEnergy&&!isNaN(Number(this.newEnergy))?this.newEnergyValid=!0:this.newEnergyValid=!1,this.checkNewEnergySetValid()},SpecificationsComponent.prototype.checkNewR50Input=function(){null==this.newR50||isNaN(Number(this.newR50))?this.newR50Valid=!1:this.newR50Valid=!0,this.checkNewEnergySetValid()},SpecificationsComponent.prototype.checkNewEnergySetValid=function(){this.newEnergySetValid=this.newEnergyValid&&this.newR50Valid},SpecificationsComponent.prototype.addEnergy=function(){this.newEnergySetValid&&(this.specifications[this.currentMachine].energy.push(Number(this.newEnergy)),this.specifications[this.currentMachine].R50[this.newEnergy]=Number(this.newR50),this.newEnergy=null,this.newR50=null,this.newEnergyValid=!1,this.newR50Valid=!1,this.newEnergySetValid=!1,this.updateSpecifications())},SpecificationsComponent.prototype.checkNewApplicatorInput=function(){this.specifications[this.currentMachine].applicator.indexOf(this.newApplicator.toLowerCase())<0&&null!=this.newApplicator&&""!=this.newApplicator?this.newApplicatorValid=!0:this.newApplicatorValid=!1},SpecificationsComponent.prototype.addApplicator=function(){this.newApplicatorValid&&(this.specifications[this.currentMachine].applicator.push(this.newApplicator.toLowerCase()),this.newApplicator=null,this.newApplicatorValid=!1,this.updateSpecifications())},SpecificationsComponent.prototype.checkNewSSDInput=function(){this.specifications[this.currentMachine].ssd.indexOf(Number(this.newSSD))<0&&null!=this.newSSD&&!isNaN(Number(this.newSSD))?this.newSSDValid=!0:this.newSSDValid=!1},SpecificationsComponent.prototype.addSSD=function(){this.newSSDValid&&(this.specifications[this.currentMachine].ssd.push(Number(this.newSSD)),this.newSSD=null,this.newSSDValid=!1,this.updateSpecifications())},SpecificationsComponent.prototype.updateCurrentMachine=function(){localStorage.setItem("current_machine",JSON.stringify(this.currentMachine))},SpecificationsComponent.prototype.editMachine=function(e){this.currentMachine=null,this.edittingMachine=e},SpecificationsComponent.prototype.finishMachineEdit=function(e,t,n){t!=e&&(this.specifications[t]=this.specifications[e],delete this.specifications[e],this.machines=Object.keys(this.specifications).sort()),this.specifications[t].model=n,this.updateSpecifications(),this.currentMachine=this.edittingMachine,this.edittingMachine=null},SpecificationsComponent.prototype.deleteMachine=function(e){var t=this.machines.indexOf(e);this.machines.splice(t,1),delete this.specifications[e],this.edittingMachine=null,this.updateSpecifications()},SpecificationsComponent=i([o.Component({selector:"my-specifications",template:n(80)}),r("design:paramtypes",[a.TitleService])],SpecificationsComponent)}();t.SpecificationsComponent=s},function(e,t){e.exports='<div class="mdl-grid">\r\n\r\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h5>Machine specifications editing</h5>\r\n    <p>\r\n      Use this component to define your centre\'s machine specifications. \r\n      These will be used throughout this web app to silo each model into its own specific machine ID, applicator, energy, ssd combination.\r\n    </p>\r\n    <p>\r\n      <font color="#d3d3d3">\r\n        Currently the editing and deleting of energy, applicator, and SSD entries is not yet implimented.\r\n      </font>\r\n    </p>\r\n  </div>\r\n  <div class="mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\r\n    <mdl-card mdl-shadow="6" style="width:100%">\r\n      <mdl-card-title>\r\n        <h2 mdl-card-title-text>Machine IDs</h2>\r\n      </mdl-card-title>\r\n\r\n      <mdl-list>\r\n        \r\n        <div *ngFor="let machine of machines">\r\n        \r\n          <div *ngIf="machine!=edittingMachine">\r\n            <mdl-list-item lines="3">\r\n              <mdl-list-item-primary-content>\r\n                <!--<div (click)="editMachine(machine)">-->\r\n                <div>\r\n                  <span>{{machine}}</span>\r\n                  <mdl-list-item-text-body>{{specifications[machine].model}}</mdl-list-item-text-body>\r\n                </div>\r\n              </mdl-list-item-primary-content>\r\n              <mdl-list-item-secondary-action>\r\n                <button\r\n                  mdl-button\r\n                  mdl-button-type="icon"\r\n                  mdl-ripple\r\n                  [disabled]="machine==currentMachine || edittingMachine!=null"\r\n                  (click)="changeCurrentMachine(machine)"><mdl-icon>dashboard</mdl-icon>       \r\n                </button>\r\n                <button\r\n                  mdl-button *ngIf="machine!=edittingMachine"\r\n                  mdl-button-type="icon"\r\n                  mdl-ripple\r\n                  [disabled]="false"\r\n                  (click)="editMachine(machine)"><mdl-icon>edit</mdl-icon>       \r\n                </button>\r\n              </mdl-list-item-secondary-action>\r\n            </mdl-list-item>\r\n\r\n          </div>\r\n\r\n          <div *ngIf="machine==edittingMachine">\r\n            <mdl-list-item lines="3">\r\n              <mdl-list-item-primary-content>\r\n                <mdl-textfield #machineIDTextField\r\n                  type="text"\r\n                  label="Machine ID"\r\n                  [value]="machine"\r\n                  (keyup.enter)="finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)"\r\n                  floating-label\r\n                  style="display:inline;"></mdl-textfield>\r\n                <mdl-textfield #modelTextField\r\n                  type="text"\r\n                  label="Model"\r\n                  [value]="specifications[machine].model"\r\n                  (keyup.enter)="finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)"\r\n                  floating-label\r\n                  style="display:inline;"></mdl-textfield>\r\n              </mdl-list-item-primary-content>\r\n\r\n              <mdl-list-item-secondary-action>\r\n                <button\r\n                  mdl-button\r\n                  mdl-button-type="icon"\r\n                  mdl-ripple\r\n                  [disabled]="machine!=edittingMachine"\r\n                  (click)="deleteMachine(machine)"><mdl-icon>delete</mdl-icon>       \r\n                </button>\r\n                <button\r\n                  mdl-button\r\n                  mdl-button-type="icon"\r\n                  mdl-ripple\r\n                  mdl-colored="primary" \r\n                  [disabled]="machine==currentMachine || edittingMachine!=null"\r\n                  (click)="changeCurrentMachine(machine)"><mdl-icon>dashboard</mdl-icon>       \r\n                </button>\r\n                <button\r\n                  mdl-button\r\n                  mdl-button-type="icon"\r\n                  mdl-ripple\r\n                  [disabled]="false"\r\n                  (click)="finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)"><mdl-icon>done</mdl-icon>       \r\n                </button>\r\n              </mdl-list-item-secondary-action>\r\n            </mdl-list-item>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </mdl-list>\r\n      <mdl-card-actions mdl-card-border>\r\n        <mdl-textfield\r\n          type="text"\r\n          label="New Machine ID"\r\n          [(ngModel)]="newMachineID"\r\n          (input)="checkNewMachineIDInput()"\r\n          (keyup.enter)="addMachineID()"\r\n          floating-label\r\n          style="width:100%"></mdl-textfield>\r\n        <mdl-textfield\r\n          type="text"\r\n          label="Machine Make and Model"\r\n          [(ngModel)]="newModel"\r\n          (input)="checkNewModelInput()"\r\n          angulartics2On="keyup.enter" angularticsEvent="Specifications | Enter press | Add machine ID"\r\n          (keyup.enter)="addMachineID()"\r\n          floating-label\r\n          style="width:70%"></mdl-textfield>\r\n        <button \r\n          [disabled]="!newMachineValid"\r\n          mdl-button \r\n          mdl-button-type="mini-fab"\r\n          mdl-ripple\r\n          angulartics2On="click" angularticsEvent="Specifications | Button click | Add machine ID"\r\n          (click)="addMachineID()">\r\n          <mdl-icon>add</mdl-icon>\r\n        </button>\r\n      </mdl-card-actions>\r\n\r\n    </mdl-card>\r\n  </div>\r\n\r\n  <div *ngIf="currentMachine" class="mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\r\n    <mdl-card mdl-shadow="6"  style="width:100%">\r\n      <mdl-card-title>\r\n        <h2 mdl-card-title-text>Energies for {{currentMachine}}</h2>\r\n      </mdl-card-title>\r\n        <mdl-list>\r\n          <mdl-list-item *ngFor="let energy of specifications[currentMachine].energy" lines="3">\r\n            <mdl-list-item-primary-content>\r\n              <span>{{energy}} MeV</span>\r\n              <mdl-list-item-text-body>R50: {{specifications[currentMachine].R50[energy]}} cm</mdl-list-item-text-body>\r\n            </mdl-list-item-primary-content>\r\n            <mdl-list-item-secondary-action>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>done</mdl-icon>       \r\n              </button>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>edit</mdl-icon>       \r\n              </button>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>delete</mdl-icon>       \r\n              </button>\r\n            </mdl-list-item-secondary-action>\r\n          </mdl-list-item>\r\n        </mdl-list>\r\n\r\n      <mdl-card-actions mdl-card-border>\r\n        <mdl-textfield\r\n          type="text"\r\n          label="New Energy (MeV)"\r\n          [(ngModel)]="newEnergy"\r\n          (input)="checkNewEnergyInput()"\r\n          (keyup.enter)="addEnergy()"\r\n          floating-label\r\n          style="width:100%"></mdl-textfield>\r\n        <mdl-textfield\r\n          type="text"\r\n          label="R50 for New Energy (cm)"\r\n          [(ngModel)]="newR50"\r\n          (input)="checkNewR50Input()"\r\n          angulartics2On="keyup.enter" angularticsEvent="Specifications | Enter press | Add energy"\r\n          (keyup.enter)="addEnergy()"\r\n          floating-label\r\n          style="width:70%"></mdl-textfield>\r\n        <button \r\n          [disabled]="!newEnergySetValid" \r\n          mdl-button \r\n          angulartics2On="click" angularticsEvent="Specifications | Button click | Add energy"\r\n          mdl-button-type="mini-fab"\r\n          (click)="addEnergy()">\r\n          <mdl-icon>add</mdl-icon>\r\n        </button>\r\n      </mdl-card-actions>\r\n    </mdl-card>\r\n  </div>\r\n\r\n  <div *ngIf="currentMachine" class="mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\r\n    <mdl-card mdl-shadow="6"  style="width:100%">\r\n      <mdl-card-title>\r\n        <h2 mdl-card-title-text>Applicators for {{currentMachine}}</h2>\r\n      </mdl-card-title>\r\n        <mdl-list>\r\n          <mdl-list-item *ngFor="let applicator of specifications[currentMachine].applicator">\r\n            <mdl-list-item-primary-content>\r\n              <mdl-list-item-text-body>{{applicator}}</mdl-list-item-text-body>\r\n            </mdl-list-item-primary-content>\r\n            <mdl-list-item-secondary-action>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>done</mdl-icon>       \r\n              </button>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>edit</mdl-icon>       \r\n              </button>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>delete</mdl-icon>       \r\n              </button>\r\n            </mdl-list-item-secondary-action>\r\n          </mdl-list-item>\r\n        </mdl-list>\r\n\r\n      <mdl-card-actions mdl-card-border>\r\n        <mdl-textfield\r\n          type="text"\r\n          label="New Applicator"\r\n          [(ngModel)]="newApplicator"\r\n          (input)="checkNewApplicatorInput()"\r\n          angulartics2On="keyup.enter" angularticsEvent="Specifications | Enter press | Add applicator"\r\n          (keyup.enter)="addApplicator()"\r\n          floating-label\r\n          style="width:70%"></mdl-textfield>\r\n        <button \r\n          [disabled]="!newApplicatorValid" \r\n          mdl-button \r\n          angulartics2On="click" angularticsEvent="Specifications | Button click | Add applicator"\r\n          mdl-button-type="mini-fab"\r\n          (click)="addApplicator()">\r\n          <mdl-icon>add</mdl-icon>\r\n        </button>\r\n      </mdl-card-actions>\r\n    </mdl-card>\r\n  </div>\r\n\r\n  <div *ngIf="currentMachine" class="mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\r\n    <mdl-card mdl-shadow="6"  style="width:100%">\r\n      <mdl-card-title>\r\n        <h2 mdl-card-title-text>SSDs for {{currentMachine}}</h2>\r\n      </mdl-card-title>\r\n        <mdl-list>\r\n          <mdl-list-item *ngFor="let ssd of specifications[currentMachine].ssd">\r\n            <mdl-list-item-primary-content>\r\n              <mdl-list-item-text-body>{{ssd}} cm</mdl-list-item-text-body>\r\n            </mdl-list-item-primary-content>\r\n            <mdl-list-item-secondary-action>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>done</mdl-icon>       \r\n              </button>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>edit</mdl-icon>       \r\n              </button>\r\n              <button\r\n                mdl-button\r\n                mdl-button-type="icon"\r\n                mdl-ripple\r\n                [disabled]="true"\r\n                (click)="null"><mdl-icon>delete</mdl-icon>       \r\n              </button>\r\n            </mdl-list-item-secondary-action>\r\n          </mdl-list-item>\r\n        </mdl-list>\r\n\r\n      <mdl-card-actions mdl-card-border>\r\n        <mdl-textfield\r\n          type="text"\r\n          label="New SSD (cm)"\r\n          [(ngModel)]="newSSD"\r\n          (input)="checkNewSSDInput()"\r\n          (keyup.enter)="addSSD()"\r\n          angulartics2On="keyup.enter" angularticsEvent="Specifications | Enter press | Add ssd"\r\n          floating-label\r\n          style="width:70%"></mdl-textfield>\r\n        <button \r\n          [disabled]="!newSSDValid" \r\n          mdl-button \r\n          angulartics2On="click" angularticsEvent="Specifications | Button click | Add ssd"\r\n          mdl-button-type="mini-fab"\r\n          (click)="addSSD()">\r\n          <mdl-icon>add</mdl-icon>\r\n        </button>\r\n      </mdl-card-actions>\r\n    </mdl-card>\r\n  </div>\r\n\r\n\r\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\r\n    <h5>Raw specification data editing (optional)</h5>\r\n    <p>\r\n      If you desire you may edit the raw machine specifications in its raw format below. \r\n      Currently error checking on this raw input is not implemented.\r\n      Incorrectly editing the data below may cause the web app not to function.\r\n      Input data above to determine the data structure required.</p>\r\n    <my-json-edit\r\n      [input]="specifications"\r\n      (inputUpdated)="changeSpecifications($event)"\r\n      buttonText="Update Specifications">\r\n    </my-json-edit>\r\n  </div>\r\n\r\n</div>\r\n\r\n'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(30),s=n(63),l=n(82),c=function(){function DicomComponent(e,t){this.myTitleService=e,this.router=t,this.parameterisation={insert:{x:[0],y:[0]},width:null,length:null,circle:null,ellipse:null},this.insertData={machine:null,parameterisation:this.parameterisation,energy:null,applicator:null,ssd:null,factor:null},this.dicomExitCode=1,this.reader=new FileReader}return DicomComponent.prototype.ngOnInit=function(){var e=this;window.dicomData=" ",this.reader.onload=function(){return e.onceFileIsLoaded()};var t=localStorage.getItem("dicom_insertList");t?this.insertList=JSON.parse(t):this.insertList=[],Module.print=this.sendDicomDumpToGlobalVariable,this.myTitleService.setTitle("Dicom")},DicomComponent.prototype.sendDicomDumpToGlobalVariable=function(e){window.dicomData=window.dicomData+"\n"+e},DicomComponent.prototype.updateDicomWarning=function(){var e=Number(localStorage.getItem("dicomLoadStatus"));0==e?(this.getBlockDataButton.disabled=!1,this.dicomWarning=null):(this.getBlockDataButton.disabled=!0,this.dicomWarning="An error occured while trying to find the block data within the provided Dicom file.")},DicomComponent.prototype.onceFileIsLoaded=function(){var e=new Int8Array(this.reader.result);console.log(e.length);var t="dicomfile";FS.isFile(t)&&FS.unlink(t),FS.writeFile(t,e,{encoding:"binary"});var n=Module.exit;Module.exit=function(e){localStorage.setItem("dicomLoadStatus",e),n(e)},Module.callMain(["dcmdump",t,"--print-all"]),Module.exit=n,console.log(Module),this.updateDicomWarning(),FS.unlink(t)},DicomComponent.prototype.openFile=function(e){if("undefined"!=typeof e.target){console.log(e.target.files);var t=e.target.files[0];window.dicomData=" ",this.reader.readAsArrayBuffer(t)}else console.log(e)},DicomComponent.prototype.convertDicomDumpToDict=function(e){var t=e.replace(/\s*#[^#\n]*\n/g,"\n");return t=t.replace(/\s*#[^#\n]*$/g,""),t=t.replace(/^\n*/,""),t=t.replace(/(\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\))/g,"$1:"),t=t.replace(/(\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\):) SQ \(Sequence with undefined length #=\d+\)/g,"$1"),t=t.replace(/(\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\):) na \(Item with undefined length #=\d+\)/g,"$1"),t=t.replace(/ *\(fffe,e00d\): na \(ItemDelimitationItem\) *\n/g,""),t=t.replace(/ *\(fffe,e0dd\): na \(SequenceDelimitationItem\)\n/g,""),t=t.replace(/(\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\):) (.*)/g,'$1 "$2"'),t=t.replace(/\\/g,", "),t=t.replace(/\(fffe,e000\):/g," - "),t=l.safeLoad(t)},DicomComponent.prototype.convertBlockDataToCoords=function(e){for(var t=/\[[, \d\.-]*\]/.exec(e).toString(),n=JSON.parse('{ "data": '+t+"}"),i=[],r=[],o=0,a=0,s=n.data;a<s.length;a++){var l=s[a];o%2==0?i.push(parseFloat((l/10).toFixed(2))):r.push(parseFloat((l/10).toFixed(2))),o++}var c={x:i,y:r};return c},DicomComponent.prototype.dicomPullNumber=function(e){return Number(e.replace(/.*\[([\d\.-]*)\].*/,"$1"))},DicomComponent.prototype.dicomPullString=function(e){return e.replace(/.*\[(.*)\].*/,"$1")},DicomComponent.prototype.getBlockData=function(){var e=window.dicomData,t=this.convertDicomDumpToDict(e);this.insertList=[];for(var n=t["(300a,00b0)"],i=0,r=n;i<r.length;i++){var o=r[i],a=o["(300a,00f4)"];if(void 0!=a){var s=o["(300a,00f4)"][0]["(300a,0106)"],l=this.convertBlockDataToCoords(s),c=null;try{c=this.dicomPullString(o["(300a,0107)"][0]["(300a,0108)"])}catch(d){c=null,console.log(d)}var p=null;try{p=this.dicomPullNumber(o["(300a,0111)"][0]["(300a,0114)"])}catch(d){p=null,console.log(d)}var h=null;try{h=this.dicomPullNumber(o["(300a,0111)"][0]["(300a,0130)"])/10}catch(d){h=null,console.log(d)}var m=null;try{m=this.dicomPullString(o["(300a,00b2)"])}catch(d){m=null,console.log(d)}var u={machine:m,coordinates:l,applicator:c.toLowerCase(),energy:p,ssd:h};this.insertList.push(u)}}localStorage.setItem("dicom_insertList",JSON.stringify(this.insertList))},DicomComponent.prototype.sendToParameterisation=function(e){this.insertUpdated(e.coordinates),this.insertData.machine=e.machine,this.insertData.parameterisation=this.parameterisation,this.insertData.energy=e.energy,this.insertData.applicator=e.applicator,this.insertData.ssd=e.ssd,localStorage.setItem("last_insertData",JSON.stringify(this.insertData)),this.router.navigate(["/parameterise"])},DicomComponent.prototype.parameterisationFromLocalStorage=function(e){var t=JSON.parse(e);this.parameterisation.insert=t.insert,this.parameterisation.width=t.width,this.parameterisation.length=t.length,this.parameterisation.circle=t.circle,this.parameterisation.ellipse=t.ellipse},DicomComponent.prototype.insertUpdated=function(e){var t=localStorage.getItem(JSON.stringify(e));t?this.parameterisationFromLocalStorage(t):(this.parameterisation.insert=e,this.parameterisation.width=null,this.parameterisation.length=null,this.parameterisation.circle=null,this.parameterisation.ellipse=null)},i([o.ViewChild("dicomOutput"),r("design:type",Object)],DicomComponent.prototype,"dicomOutputDir",void 0),i([o.ViewChild("getBlockDataButton"),r("design:type",Object)],DicomComponent.prototype,"getBlockDataButton",void 0),DicomComponent=i([o.Component({selector:"my-dicom",template:n(117),styles:["./dicom.component.css"]}),r("design:paramtypes",[s.TitleService,a.Router])],DicomComponent)}();t.DicomComponent=c},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='<div class="mdl-grid">\r\n  <div class="mdl-cell mdl-cell--12-col">\r\n    <h5>Locally reading Dicom patient plan files</h5>\r\n    <p>\r\n      Use this component to read a dicom patient plan file and extract the electron insert shape. \r\n      Export a dicom patient plan file that containts an electron plan from your planning system then open it using the file input box below.\r\n    </p>\r\n    <p>\r\n      For testing purposes you can download a demo dicom file from <a href="/30x16x30_RandomElectronShapes.dcm">here</a>.\r\n    </p>\r\n  </div>\r\n\r\n  <div class="mdl-cell mdl-cell--6-col">\r\n    <input type=\'file\' (change)=\'openFile($event)\'>\r\n    <div *ngIf="dicomWarning">{{dicomWarning}}</div>\r\n  </div>\r\n\r\n  <div class="mdl-cell mdl-cell--6-col">\r\n    <button #getBlockDataButton\r\n      mdl-button mdl-button-type="raised" \r\n      mdl-colored="primary" \r\n      mdl-ripple\r\n      [disabled]="true"\r\n      (click)="getBlockData()">Get Dicom Insert Data\r\n    </button>\r\n\r\n    \r\n  </div>\r\n\r\n  <div *ngFor="let insert of insertList" class="mdl-cell mdl-cell--6-col">\r\n    <mdl-card mdl-shadow="6">\r\n\r\n\r\n      <my-send-to-parameterisation\r\n        [machine]=insert.machine\r\n        [coordinates]=insert.coordinates\r\n        [applicator]=insert.applicator\r\n        [ssd]=insert.ssd\r\n        [energy]=insert.energy>\r\n      </my-send-to-parameterisation>\r\n\r\n      <mdl-card-actions mdl-card-border>\r\n        <button\r\n          mdl-button \r\n          mdl-ripple\r\n          (click)="sendToParameterisation(insert)">Send to parameterisation           \r\n        </button>\r\n      </mdl-card-actions>\r\n    </mdl-card>\r\n    \r\n\r\n\r\n    <!--<p>{{insert | json}}</p>-->\r\n  </div>\r\n\r\n  <div class="mdl-cell mdl-cell--12-col">\r\n    <h5>Further information</h5>\r\n    <p>This Dicom loader does not send the Dicom file off to a server. The entire reading of the dicom file is done within javascript.\r\n    You can confirm this yourself by using the chrome web browser, pressing \'Ctrl + Shift + I\'\r\n    and then clicking on the network tab. When the file is chosen, then the block data is pulled and sent to parameterisation,\r\n    at no point in this interaction is there network traffic.</p>\r\n\r\n    <p>The only data that will be sent to the server will be on either the paremeterisation tab or the model tab, and this data will\r\n      just consist of x and y coordinates or widths, lengths, and factors.\r\n    </p>\r\n  </div>\r\n</div>'},function(e,t,n){"use strict";var i=n(3),r=n(119),o=function(){function Angulartics2GoogleAnalytics(e){var t=this;this.angulartics2=e,this.angulartics2.settings.pageTracking.trackRelativePath=!0,this.angulartics2.settings.ga={additionalAccountNames:[],userId:null},this.angulartics2.pageTrack.subscribe(function(e){return t.pageTrack(e.path)}),this.angulartics2.eventTrack.subscribe(function(e){return t.eventTrack(e.action,e.properties)}),this.angulartics2.exceptionTrack.subscribe(function(e){return t.exceptionTrack(e)}),this.angulartics2.setUsername.subscribe(function(e){return t.setUsername(e)}),this.angulartics2.setUserProperties.subscribe(function(e){return t.setUserProperties(e)}),this.angulartics2.userTimings.subscribe(function(e){return t.userTimings(e)})}return Angulartics2GoogleAnalytics.prototype.pageTrack=function(e){if("undefined"!=typeof _gaq&&_gaq){_gaq.push(["_trackPageview",e]);for(var t=0,n=this.angulartics2.settings.ga.additionalAccountNames;t<n.length;t++){var i=n[t];_gaq.push([i+"._trackPageview",e])}}if("undefined"!=typeof ga&&ga){this.angulartics2.settings.ga.userId&&ga("set","&uid",this.angulartics2.settings.ga.userId),ga("send","pageview",e);for(var r=0,o=this.angulartics2.settings.ga.additionalAccountNames;r<o.length;r++){var i=o[r];ga(i+".send","pageview",e)}}},Angulartics2GoogleAnalytics.prototype.eventTrack=function(e,t){if(t&&t.category||(t=t||{},t.category="Event"),t.value){var n=parseInt(t.value,10);t.value=isNaN(n)?0:n}if(ga){var i={eventCategory:t.category,eventAction:e,eventLabel:t.label,eventValue:t.value,nonInteraction:t.noninteraction,page:t.page||location.hash.substring(1)||location.pathname,userId:this.angulartics2.settings.ga.userId};this.setDimensionsAndMetrics(t),this.angulartics2.settings.ga.transport?ga("send","event",i,{transport:this.angulartics2.settings.ga.transport}):ga("send","event",i);for(var r=0,o=this.angulartics2.settings.ga.additionalAccountNames;r<o.length;r++){var a=o[r];ga(a+".send","event",i)}}else _gaq&&_gaq.push(["_trackEvent",t.category,e,t.label,t.value,t.noninteraction])},Angulartics2GoogleAnalytics.prototype.exceptionTrack=function(e){return e&&e.appId&&e.appName&&e.appVersion?(void 0===e.fatal&&(console.log('No "fatal" provided, sending with fatal=true'),e.exFatal=!0),e.exDescription=e.description,void ga("send","exception",e)):void console.error("Must be setted appId, appName and appVersion.")},Angulartics2GoogleAnalytics.prototype.setUsername=function(e){this.angulartics2.settings.ga.userId=e},Angulartics2GoogleAnalytics.prototype.setUserProperties=function(e){this.setDimensionsAndMetrics(e)},Angulartics2GoogleAnalytics.prototype.userTimings=function(e){return e&&e.timingCategory&&e.timingVar&&e.timingValue?void(ga&&ga("send","timing",e)):void console.error("Properties timingCategory, timingVar, and timingValue are required to be set.")},Angulartics2GoogleAnalytics.prototype.setDimensionsAndMetrics=function(e){if(ga)for(var t=1;t<=200;t++)e["dimension"+t.toString()]&&ga("set","dimension"+t.toString(),e["dimension"+t.toString()]),e["metric"+t.toString()]&&ga("set","metric"+t.toString(),e["metric"+t.toString()])},Angulartics2GoogleAnalytics.decorators=[{type:i.Injectable}],Angulartics2GoogleAnalytics.ctorParameters=[{type:r.Angulartics2}],Angulartics2GoogleAnalytics}();t.Angulartics2GoogleAnalytics=o},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(30),s=n(21),l=n(130),c=n(118),d=n(59),p=n(63),h=function(){function AppComponent(e,t,n,i,r,o){var s=this;this.electronApiService=e,this.myTitleService=t,this.router=n,this.title=i,n.events.filter(function(e){return e instanceof a.NavigationEnd}).subscribe(function(){s.pageTitle=s.myTitleService.getTitle(),s.title.setTitle(s.myTitleService.getTitle()+" | Electron Insert Factor Modelling")})}return AppComponent.prototype.ngOnInit=function(){var e=sessionStorage.redirect;delete sessionStorage.redirect,e&&e!=location.href&&(history.replaceState(null,null,e),this.router.navigate([e])),this.electronApiService.wakeUpServer(),this.pageTitle=this.myTitleService.getTitle(),this.title.setTitle(this.myTitleService.getTitle()+" | Electron Insert Factor Modelling")},AppComponent=i([o.Component({selector:"my-app",template:n(184)}),r("design:paramtypes",[d.ElectronApiService,p.TitleService,a.Router,s.Title,l.Angulartics2,c.Angulartics2GoogleAnalytics])],AppComponent)}();t.AppComponent=h},function(e,t){e.exports='\r\n<!--<md-sidenav-layout>\r\n\r\n  <md-sidenav #sidenav mode="side" class="app-sidenav">\r\n    <nav class="mdl-navigation">\r\n      <a class="mdl-navigation__link" routerLink="/home" routerLinkActive="active" href>Home</a>\r\n      <a class="mdl-navigation__link" routerLink="/export-import" routerLinkActive="active" href>Export / Import</a>\r\n      <a class="mdl-navigation__link" routerLink="/specifications" routerLinkActive="active" href>Machine specifications</a>\r\n      <a class="mdl-navigation__link" routerLink="/dicom" routerLinkActive="active" href>Dicom shape extraction</a>\r\n      <a class="mdl-navigation__link" routerLink="/parameterise" routerLinkActive="active" href>Parameterise inserts</a>\r\n      <a class="mdl-navigation__link" routerLink="/model" routerLinkActive="active" href>Model insert factors</a>\r\n    </nav>\r\n  </md-sidenav>\r\n\r\n  <md-toolbar color="primary">\r\n    <button class="app-icon-button" (click)="sidenav.toggle()">\r\n      <i class="material-icons app-toolbar-menu">menu</i>\r\n    </button>\r\n\r\n    {{pageTitle}}\r\n\r\n    <span class="app-toolbar-filler"></span>\r\n    <button md-button (click)="isDarkTheme = !isDarkTheme">TOGGLE DARK THEME</button>\r\n  </md-toolbar>\r\n\r\n  <div class="app-content">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n\r\n\r\n</md-sidenav-layout>-->\r\n\r\n\r\n<mdl-layout mdl-layout-fixed-drawer mdl-layout-fixed-header>\r\n  <mdl-layout-header>\r\n    <mdl-layout-header-row>\r\n      <mdl-layout-title>{{pageTitle}}</mdl-layout-title>\r\n    </mdl-layout-header-row>\r\n  </mdl-layout-header>\r\n  <mdl-layout-drawer>\r\n    <mdl-layout-title>Electron Factors</mdl-layout-title>\r\n    <nav class="mdl-navigation">\r\n      <a class="mdl-navigation__link" routerLink="/home" routerLinkActive="active" href>Home</a>\r\n      <a class="mdl-navigation__link" routerLink="/specifications" routerLinkActive="active" href>Machine specifications</a>\r\n      <a class="mdl-navigation__link" routerLink="/dicom" routerLinkActive="active" href>Dicom shape extraction</a>\r\n      <a class="mdl-navigation__link" routerLink="/parameterise" routerLinkActive="active" href>Parameterise inserts</a>\r\n      <a class="mdl-navigation__link" routerLink="/create-model" routerLinkActive="active" href>Create electron model</a>\r\n      <a class="mdl-navigation__link" routerLink="/use-model" routerLinkActive="active" href>Use electron model</a>\r\n      <a class="mdl-navigation__link" routerLink="/storage" routerLinkActive="active" href>Storage management</a>\r\n    </nav>\r\n  </mdl-layout-drawer>\r\n  <mdl-layout-content>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n  </mdl-layout-content>\r\n</mdl-layout>';
},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(186),s=function(){function PlotComponent(){this.insert_x=null,this.insert_y=null,this.circle=null,this.ellipse=null,this.enabled=!0,this.plot_width=300,this.plot_height=300,this.jsonValid=!0,this.plt=Bokeh.Plotting,this.tools="pan,crosshair,wheel_zoom,box_zoom,reset,save",this.xrange=Bokeh.Range1d(-6,6),this.yrange=Bokeh.Range1d(-6,6),this.fig=this.plt.figure({title:"Electron Insert Plot",tools:this.tools,x_range:this.xrange,y_range:this.yrange,plot_width:300,plot_height:300}),this.source=new Bokeh.ColumnDataSource,this.doc=new Bokeh.Document}return PlotComponent.prototype.ngOnChanges=function(){this.jsonValid=!1,this.tempSource={xs:[[0],[0],[0]],ys:[[0],[0],[0]],colour:["navy","firebrick","green"]};var e=[],t=[];this.enabled&&(null!=this.insert_x&&null!=this.insert_y&&(this.tempSource.xs[0]=this.insert_x.concat(this.insert_x[0]),this.tempSource.ys[0]=this.insert_y.concat(this.insert_y[0]),e=e.concat(this.tempSource.xs[0]),t=t.concat(this.tempSource.ys[0])),this.circle&&"x"in this.circle&&"y"in this.circle&&(this.tempSource.xs[1]=this.circle.x,this.tempSource.ys[1]=this.circle.y,e=e.concat(this.tempSource.xs[1]),t=t.concat(this.tempSource.ys[1])),this.ellipse&&"x"in this.ellipse&&"y"in this.ellipse&&(this.tempSource.xs[2]=this.ellipse.x,this.tempSource.ys[2]=this.ellipse.y,e=e.concat(this.tempSource.xs[2]),t=t.concat(this.tempSource.ys[2])));var n=Math.max.apply(Math,e),i=Math.min.apply(Math,e),r=Math.max.apply(Math,t),o=Math.min.apply(Math,t),a=1.1*Math.max(n-i,r-o),s=(n+i)/2+a/2,l=(n+i)/2-a/2,c=(r+o)/2+a/2,d=(r+o)/2-a/2;this.fig.attributes.x_range.start=l,this.fig.attributes.x_range.end=s,this.fig.attributes.y_range.start=d,this.fig.attributes.y_range.end=c,this.source.data=this.tempSource},PlotComponent.prototype.ngAfterViewInit=function(){this.fig.multi_line({field:"xs"},{field:"ys"},{source:this.source,line_width:2,color:{field:"colour"}}),this.doc.add_root(this.fig),Bokeh.embed.add_document_standalone(this.doc,this.bokehplot.nativeElement)},i([o.Input(),r("design:type",Array)],PlotComponent.prototype,"insert_x",void 0),i([o.Input(),r("design:type",Array)],PlotComponent.prototype,"insert_y",void 0),i([o.Input(),r("design:type",a.Coordinates)],PlotComponent.prototype,"circle",void 0),i([o.Input(),r("design:type",a.Coordinates)],PlotComponent.prototype,"ellipse",void 0),i([o.Input(),r("design:type",Boolean)],PlotComponent.prototype,"enabled",void 0),i([o.Input(),r("design:type",Number)],PlotComponent.prototype,"plot_width",void 0),i([o.Input(),r("design:type",Number)],PlotComponent.prototype,"plot_height",void 0),i([o.ViewChild("bokehplot"),r("design:type",Object)],PlotComponent.prototype,"bokehplot",void 0),PlotComponent=i([o.Component({selector:"my-plot",template:n(187)}),r("design:paramtypes",[])],PlotComponent)}();t.PlotComponent=s},function(e,t){"use strict";var n=function(){function Coordinates(e,t){this.x=e,this.y=t}return Coordinates}();t.Coordinates=n},function(e,t){e.exports='<div \r\n    class="bk-root" \r\n    [style.width]="plot_width + \'px\'" \r\n    [style.height]="plot_height + \'px\'">\r\n  <div #bokehplot></div>\r\n</div>\r\n'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(132),s=function(){function WidthLengthTableComponent(){this.tableData=[{width:null,length:null}],this.tableModel=new a.MdlDefaultTableModel([{key:"width",name:"Width",sortable:!0,numeric:!0},{key:"length",name:"Length",sortable:!0,numeric:!0}])}return WidthLengthTableComponent.prototype.ngOnChanges=function(){this.enabled?(this.tableData[0].width=this.width,this.tableData[0].length=this.length):(this.tableData[0].width=null,this.tableData[0].length=null)},WidthLengthTableComponent.prototype.ngOnInit=function(){this.tableModel.addAll(this.tableData)},i([o.Input(),r("design:type",Number)],WidthLengthTableComponent.prototype,"width",void 0),i([o.Input(),r("design:type",Number)],WidthLengthTableComponent.prototype,"length",void 0),i([o.Input(),r("design:type",Boolean)],WidthLengthTableComponent.prototype,"enabled",void 0),WidthLengthTableComponent=i([o.Component({selector:"my-width-length-table",template:n(189)}),r("design:paramtypes",[])],WidthLengthTableComponent)}();t.WidthLengthTableComponent=s},function(e,t){e.exports='<mdl-table mdl-shadow="2"\r\n  [table-model]="tableModel">\r\n</mdl-table>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(191),s=n(186),l=function(){function JsonInputComponent(){this.insertUpdated=new o.EventEmitter,this.jsonStatus=new o.EventEmitter,this.jsonValid=!0}return JsonInputComponent.prototype.onInput=function(e){this.parseAndCheckJSON(e),this.insertUpdated.emit(this.insert)},JsonInputComponent.prototype.ngOnChanges=function(){this.refresh&&(this.jsonInputDir.value=(new a.MyJsonPipe).transform(this.insert),this.parseAndCheckJSON(this.jsonInputDir.value),this.refresh=!1)},JsonInputComponent.prototype.parseAndCheckJSON=function(e){var t=this.jsonValid;this.jsonValid=!1;try{var n=JSON.parse(e);if("x"in n&&"y"in n)if(n.x.length===n.y.length){var i=n.x,r=n.y,o={x:i,y:r};this.insert=o,this.jsonValid=!0}else this.jsonErrorMessage="The length of x doesn't match the length of y.";else this.jsonErrorMessage="Either x or y is missing."}catch(a){this.jsonErrorMessage="Error in JSON input. "+a}finally{this.jsonValid!=t&&this.jsonStatus.emit(this.jsonValid)}},i([o.Input(),r("design:type",s.Coordinates)],JsonInputComponent.prototype,"insert",void 0),i([o.Input(),r("design:type",Boolean)],JsonInputComponent.prototype,"jsonDisabled",void 0),i([o.Input(),r("design:type",Boolean)],JsonInputComponent.prototype,"refresh",void 0),i([o.Output(),r("design:type",Object)],JsonInputComponent.prototype,"insertUpdated",void 0),i([o.Output(),r("design:type",Object)],JsonInputComponent.prototype,"jsonStatus",void 0),i([o.ViewChild("jsonInput"),r("design:type",Object)],JsonInputComponent.prototype,"jsonInputDir",void 0),JsonInputComponent=i([o.Component({selector:"my-json-input",template:n(192)}),r("design:paramtypes",[])],JsonInputComponent)}();t.JsonInputComponent=l},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=function(){function MyJsonPipe(){}return MyJsonPipe.prototype.transform=function(e){var t=JSON.stringify(e,null,4);return t=t.replace(/(-?\d+(\.\d+)?),\n\s*/g,"$1, "),t=t.replace(/null,\n\s*/g,"null, ")},MyJsonPipe=i([o.Pipe({name:"myJson",pure:!1}),r("design:paramtypes",[])],MyJsonPipe)}();t.MyJsonPipe=a},function(e,t){e.exports='<mdl-textfield #jsonInput\r\n  [value]="insert | myJson"\r\n  (input)="onInput($event.target.value)"\r\n  rows="12" \r\n  style="width:100%"\r\n  [disabled]=jsonDisabled>\r\n</mdl-textfield>\r\n<div *ngIf="!jsonValid">\r\n  {{jsonErrorMessage}}\r\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(191),s=n(22),l=function(){function JsonEditComponent(){this.buttonText="Button",this.inputUpdated=new o.EventEmitter,this.validationCheck=function(e){},this.useMyJsonPipe=!1,this.lines=10,this.jsonValid=!0}return JsonEditComponent.prototype.onInput=function(e){this.parseAndCheckJSON(e)},JsonEditComponent.prototype.ngOnInit=function(){var e="";e=this.useMyJsonPipe?(new a.MyJsonPipe).transform(this.input):(new s.JsonPipe).transform(this.input),this.lines=e.split(/\r\n|\r|\n/).length,this.editedInput=this.input},JsonEditComponent.prototype.updateInput=function(){this.input=this.editedInput,this.inputUpdated.emit(this.input)},JsonEditComponent.prototype.parseAndCheckJSON=function(e){this.jsonValid;this.jsonValid=!1;try{var t=JSON.parse(e);this.validationCheck(t),this.editedInput=t,this.jsonValid=!0}catch(n){this.jsonErrorMessage="Error in JSON input. "+n}},i([o.Input(),r("design:type",Object)],JsonEditComponent.prototype,"input",void 0),i([o.Input(),r("design:type",String)],JsonEditComponent.prototype,"buttonText",void 0),i([o.Output(),r("design:type",Object)],JsonEditComponent.prototype,"inputUpdated",void 0),i([o.Input(),r("design:type",Function)],JsonEditComponent.prototype,"validationCheck",void 0),i([o.Input(),r("design:type",Boolean)],JsonEditComponent.prototype,"useMyJsonPipe",void 0),i([o.ViewChild("jsonInput"),r("design:type",Object)],JsonEditComponent.prototype,"jsonInputDir",void 0),JsonEditComponent=i([o.Component({selector:"my-json-edit",template:n(194)}),r("design:paramtypes",[])],JsonEditComponent)}();t.JsonEditComponent=l},function(e,t){e.exports='<button\r\n  mdl-button mdl-button-type="raised" \r\n  mdl-colored="primary" \r\n  mdl-ripple\r\n  [disabled]="!jsonValid || input==editedInput"\r\n  (click)="updateInput()">{{buttonText}} \r\n</button>\r\n<div *ngIf="!jsonValid">\r\n  {{jsonErrorMessage}}\r\n</div>\r\n<mdl-textfield *ngIf="!useMyJsonPipe" #jsonInput\r\n  [value]="input | json"\r\n  (input)="onInput($event.target.value)"\r\n  [rows]="20" \r\n  style="width:100%">\r\n</mdl-textfield>\r\n<mdl-textfield *ngIf="useMyJsonPipe" #jsonInput\r\n  [value]="input | myJson"\r\n  (input)="onInput($event.target.value)"\r\n  [rows]="20" \r\n  style="width:100%">\r\n</mdl-textfield>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=n(186),s=n(132),l=function(){function SendToParameterisationComponent(){this.tableData=[{machine:null,applicator:null,energy:null,ssd:null}],this.tableModel=new s.MdlDefaultTableModel([{key:"machine",name:"Machine",sortable:!0,numeric:!1},{key:"applicator",name:"App",sortable:!0,numeric:!1},{key:"energy",name:"Eng",sortable:!0,numeric:!0},{key:"ssd",name:"SSD",sortable:!0,numeric:!0}])}return SendToParameterisationComponent.prototype.ngOnInit=function(){this.tableData[0].machine=this.machine,this.tableData[0].applicator=this.applicator,this.tableData[0].energy=this.energy,this.tableData[0].ssd=this.ssd,this.tableModel.addAll(this.tableData)},i([o.Input(),r("design:type",String)],SendToParameterisationComponent.prototype,"applicator",void 0),i([o.Input(),r("design:type",String)],SendToParameterisationComponent.prototype,"machine",void 0),i([o.Input(),r("design:type",Number)],SendToParameterisationComponent.prototype,"energy",void 0),i([o.Input(),r("design:type",Number)],SendToParameterisationComponent.prototype,"ssd",void 0),i([o.Input(),r("design:type",a.Coordinates)],SendToParameterisationComponent.prototype,"coordinates",void 0),SendToParameterisationComponent=i([o.Component({selector:"my-send-to-parameterisation",template:n(196)}),r("design:paramtypes",[])],SendToParameterisationComponent)}();t.SendToParameterisationComponent=l},function(e,t){e.exports='<div class="mdl-grid">\r\n  <div class="mdl-cell mdl-cell--12-col">\r\n    <my-plot \r\n      [insert_x]="coordinates.x"\r\n      [insert_y]="coordinates.y">\r\n    </my-plot>\r\n  </div>\r\n  <div class="mdl-cell mdl-cell--12-col">\r\n    <mdl-table mdl-shadow="2"\r\n      [table-model]="tableModel">\r\n    </mdl-table>\r\n  </div>\r\n</div>\r\n\r\n'},function(e,t,n){"use strict";var i=this&&this.__extends||function(e,t){function __(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)},r=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),s=n(198),l=function(e){function BokehCreateModelComponent(){e.apply(this,arguments),this.title="Figure Title",this.plot_width=300,this.plot_height=300,this.scatter_z=[.5],this.enabled=!0}return i(BokehCreateModelComponent,e),BokehCreateModelComponent.prototype.ngOnChanges=function(){this.updateHoverData(),this.runAllUpdates()},BokehCreateModelComponent.prototype.updateHoverData=function(){if(this.pcolour_data.x!=this.pcolour_x){this.pcolour_hover_width=[];for(var e=0,t=this.pcolour_x;e<t.length;e++){var n=t[e];this.pcolour_hover_width.push(n.toFixed(1))}}if(this.pcolour_data.y!=this.pcolour_y){this.pcolour_hover_length=[];for(var i=0,r=this.pcolour_y;i<r.length;i++){var o=r[i];this.pcolour_hover_length.push(o.toFixed(1))}}if(this.pcolour_data.z!=this.pcolour_z){this.pcolour_hover_predicted_factor=[];for(var a=0,s=this.pcolour_z;a<s.length;a++){var l=s[a];this.pcolour_hover_predicted_factor.push((Math.round(1e3*l)/1e3).toFixed(3))}}},BokehCreateModelComponent.prototype.ngAfterViewInit=function(){var e=new Bokeh.HoverTool({tooltips:[["Width"," @hover_width cm"],["Length"," @hover_length cm"],["Predicted Factor"," @hover_predicted_factor"]],renderers:[this.pcolour_renderer]});this.fig.add_tools(e),this.doc.add_root(this.fig),Bokeh.embed.add_document_standalone(this.doc,this.bokehplot.nativeElement)},r([a.Input(),o("design:type",String)],BokehCreateModelComponent.prototype,"title",void 0),r([a.Input(),o("design:type",Number)],BokehCreateModelComponent.prototype,"plot_width",void 0),r([a.Input(),o("design:type",Number)],BokehCreateModelComponent.prototype,"plot_height",void 0),r([a.Input(),o("design:type",Array)],BokehCreateModelComponent.prototype,"scatter_x",void 0),r([a.Input(),o("design:type",Array)],BokehCreateModelComponent.prototype,"scatter_y",void 0),r([a.Input(),o("design:type",Array)],BokehCreateModelComponent.prototype,"scatter_z",void 0),r([a.Input(),o("design:type",Array)],BokehCreateModelComponent.prototype,"pcolour_x",void 0),r([a.Input(),o("design:type",Array)],BokehCreateModelComponent.prototype,"pcolour_y",void 0),r([a.Input(),o("design:type",Array)],BokehCreateModelComponent.prototype,"pcolour_z",void 0),r([a.Input(),o("design:type",Boolean)],BokehCreateModelComponent.prototype,"enabled",void 0),r([a.ViewChild("bokehplot"),o("design:type",Object)],BokehCreateModelComponent.prototype,"bokehplot",void 0),BokehCreateModelComponent=r([a.Component({selector:"my-bokeh-create-model",template:n(187)}),o("design:paramtypes",[])],BokehCreateModelComponent)}(s.BokehPcolour);t.BokehCreateModelComponent=l},function(e,t){"use strict";var n=function(){function BokehPcolour(){this.title="Figure Title",this.plot_width=300,this.plot_height=300,this.scatter_z=[.5],this.enabled=!0,this.pcolour_hover_width=[],this.pcolour_hover_length=[],this.pcolour_hover_predicted_factor=[],this.scatter_hover_width=[],this.scatter_hover_length=[],this.scatter_hover_area=[],this.scatter_hover_measured_factor=[],this.scatter_hover_predicted_factor=[],this.plt=Bokeh.Plotting,this.tools="pan,crosshair,wheel_zoom,box_zoom,reset,save",this.old_scatter_z=[],this.old_pcolour_z=[],this.scatter_c=[],this.pcolour_c=[],this.scatter_data={x:[],y:[],z:[],hover_width:[],hover_length:[],hover_area:[],hover_measured_factor:[],hover_predicted_factor:[],c:[]},this.scatter_source=new Bokeh.ColumnDataSource({data:this.scatter_data}),this.pcolour_data={x:[],y:[],z:[],hover_width:[],hover_length:[],hover_predicted_factor:[],c:[]},this.pcolour_source=new Bokeh.ColumnDataSource({data:this.pcolour_data}),this.doc=new Bokeh.Document,this.viridis_hex=["#440154","#440256","#450457","#450559","#46075a","#46085c","#460a5d","#460b5e","#470d60","#470e61","#471063","#471164","#471365","#481467","#481668","#481769","#48186a","#481a6c","#481b6d","#481c6e","#481d6f","#481f70","#482071","#482173","#482374","#482475","#482576","#482677","#482878","#482979","#472a7a","#472c7a","#472d7b","#472e7c","#472f7d","#46307e","#46327e","#46337f","#463480","#453581","#453781","#453882","#443983","#443a83","#443b84","#433d84","#433e85","#423f85","#424086","#424186","#414287","#414487","#404588","#404688","#3f4788","#3f4889","#3e4989","#3e4a89","#3e4c8a","#3d4d8a","#3d4e8a","#3c4f8a","#3c508b","#3b518b","#3b528b","#3a538b","#3a548c","#39558c","#39568c","#38588c","#38598c","#375a8c","#375b8d","#365c8d","#365d8d","#355e8d","#355f8d","#34608d","#34618d","#33628d","#33638d","#32648e","#32658e","#31668e","#31678e","#31688e","#30698e","#306a8e","#2f6b8e","#2f6c8e","#2e6d8e","#2e6e8e","#2e6f8e","#2d708e","#2d718e","#2c718e","#2c728e","#2c738e","#2b748e","#2b758e","#2a768e","#2a778e","#2a788e","#29798e","#297a8e","#297b8e","#287c8e","#287d8e","#277e8e","#277f8e","#27808e","#26818e","#26828e","#26828e","#25838e","#25848e","#25858e","#24868e","#24878e","#23888e","#23898e","#238a8d","#228b8d","#228c8d","#228d8d","#218e8d","#218f8d","#21908d","#21918c","#20928c","#20928c","#20938c","#1f948c","#1f958b","#1f968b","#1f978b","#1f988b","#1f998a","#1f9a8a","#1e9b8a","#1e9c89","#1e9d89","#1f9e89","#1f9f88","#1fa088","#1fa188","#1fa187","#1fa287","#20a386","#20a486","#21a585","#21a685","#22a785","#22a884","#23a983","#24aa83","#25ab82","#25ac82","#26ad81","#27ad81","#28ae80","#29af7f","#2ab07f","#2cb17e","#2db27d","#2eb37c","#2fb47c","#31b57b","#32b67a","#34b679","#35b779","#37b878","#38b977","#3aba76","#3bbb75","#3dbc74","#3fbc73","#40bd72","#42be71","#44bf70","#46c06f","#48c16e","#4ac16d","#4cc26c","#4ec36b","#50c46a","#52c569","#54c568","#56c667","#58c765","#5ac864","#5cc863","#5ec962","#60ca60","#63cb5f","#65cb5e","#67cc5c","#69cd5b","#6ccd5a","#6ece58","#70cf57","#73d056","#75d054","#77d153","#7ad151","#7cd250","#7fd34e","#81d34d","#84d44b","#86d549","#89d548","#8bd646","#8ed645","#90d743","#93d741","#95d840","#98d83e","#9bd93c","#9dd93b","#a0da39","#a2da37","#a5db36","#a8db34","#aadc32","#addc30","#b0dd2f","#b2dd2d","#b5de2b","#b8de29","#bade28","#bddf26","#c0df25","#c2df23","#c5e021","#c8e020","#cae11f","#cde11d","#d0e11c","#d2e21b","#d5e21a","#d8e219","#dae319","#dde318","#dfe318","#e2e418","#e5e419","#e7e419","#eae51a","#ece51b","#efe51c","#f1e51d","#f4e61e","#f6e620","#f8e621","#fbe723","#fde725"],this.colour_mapper=new Bokeh.LinearColorMapper({palette:this.viridis_hex}),this.ticker=new Bokeh.BasicTicker,this.colour_bar=new Bokeh.ColorBar({ticker:this.ticker,label_standoff:7,location:[-6,0]})}return BokehPcolour.prototype.ngOnInit=function(){this.figureInitialise()},BokehPcolour.prototype.figureInitialise=function(){this.fig=this.plt.figure({title:this.title,tools:this.tools,plot_width:this.plot_width,plot_height:this.plot_height}),this.pcolour_renderer=this.fig.rect({field:"x"},{field:"y"},.1,.1,{source:this.pcolour_source,color:{field:"c"}}),this.scatter_renderer=this.fig.circle({field:"x"},{field:"y"},{source:this.scatter_source,size:15,line_color:"black",fill_color:{field:"c"},line_width:2}),this.fig.add_layout(this.colour_bar,"left")},BokehPcolour.prototype.runAllUpdates=function(){this.updateScatterData(),this.updatePcolourData(),this.updateScatterColour(),this.updateSourceData(),this.updateFigureDimensions()},BokehPcolour.prototype.updateScatterData=function(){this.scatter_data={x:this.scatter_x,y:this.scatter_y,z:this.scatter_z,hover_width:this.scatter_hover_width,hover_length:this.scatter_hover_length,hover_area:this.scatter_hover_area,hover_measured_factor:this.scatter_hover_measured_factor,hover_predicted_factor:this.scatter_hover_predicted_factor,c:this.scatter_c}},BokehPcolour.prototype.updatePcolourData=function(){this.pcolour_data={x:this.pcolour_x,y:this.pcolour_y,z:this.pcolour_z,hover_width:this.pcolour_hover_width,hover_length:this.pcolour_hover_length,hover_predicted_factor:this.pcolour_hover_predicted_factor,c:this.pcolour_c}},BokehPcolour.prototype.updateScatterColour=function(){if(this.old_scatter_z!=this.scatter_z||this.old_pcolour_z!=this.pcolour_z){var e=this.scatter_z.concat(this.pcolour_z);if(this.vmin=Math.min.apply(Math,e),this.vmax=Math.max.apply(Math,e),this.colour_mapper.low=this.vmin,this.colour_mapper.high=this.vmax,this.colour_bar.color_mapper=this.colour_mapper,this.scatter_c=this.colour_mapper.v_compute(this.scatter_z),this.pcolour_c=this.colour_mapper.v_compute(this.pcolour_z),this.scatter_data.c=this.scatter_c,this.pcolour_data.c=this.pcolour_c,this.old_scatter_z=this.scatter_z,this.old_pcolour_z=this.pcolour_z,this.scatter_data.c.length<this.scatter_data.x.length)for(var t=this.scatter_data.x.length-this.scatter_data.c.length,n=0;n<t;n++)this.scatter_data.c.push("#ffffff")}},BokehPcolour.prototype.updateSourceData=function(){this.scatter_source.data!=this.scatter_data&&(this.scatter_source.data=this.scatter_data),this.pcolour_source.data!=this.pcolour_data&&(this.pcolour_source.data=this.pcolour_data)},BokehPcolour.prototype.updateFigureDimensions=function(){null!=this.fig&&(this.fig.width!=this.plot_width&&(this.plot_width<200?this.fig.width=200:this.fig.width=this.plot_width),this.fig.height!=this.plot_height&&(this.fig.height=this.plot_height))},BokehPcolour}();t.BokehPcolour=n},function(e,t,n){"use strict";var i=this&&this.__extends||function(e,t){function __(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)},r=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),s=n(198),l=function(e){function BokehUseModelComponent(){e.apply(this,arguments),this.title="Figure Title",this.plot_width=300,this.plot_height=300,this.scatter_z=[.5],this.enabled=!0,this.predicted_factor=[],this.area=[],this.old_area=[],this.old_predicted_factor=[]}return i(BokehUseModelComponent,e),BokehUseModelComponent.prototype.ngOnChanges=function(){this.updateHoverData(),this.runAllUpdates()},BokehUseModelComponent.prototype.updateHoverData=function(){if(this.scatter_data.x!=this.scatter_x){this.scatter_hover_width=[];for(var e=0,t=this.scatter_x;e<t.length;e++){var n=t[e];this.scatter_hover_width.push((Math.round(10*n)/10).toFixed(1))}}if(this.scatter_data.y!=this.scatter_y){this.scatter_hover_length=[];for(var i=0,r=this.scatter_y;i<r.length;i++){var o=r[i];this.scatter_hover_length.push((Math.round(10*o)/10).toFixed(1))}}if(this.scatter_data.z!=this.scatter_z){this.scatter_hover_measured_factor=[];for(var a=0,s=this.scatter_z;a<s.length;a++){var l=s[a];this.scatter_hover_measured_factor.push((Math.round(1e3*l)/1e3).toFixed(3))}if(this.scatter_hover_measured_factor.length<this.scatter_x.length)for(var c=this.scatter_x.length-this.scatter_hover_measured_factor.length,d=0;d<c;d++)this.scatter_hover_measured_factor.push("Not given")}if(this.old_predicted_factor!=this.predicted_factor){this.scatter_hover_predicted_factor=[];for(var p=0,h=this.predicted_factor;p<h.length;p++){var l=h[p];this.scatter_hover_predicted_factor.push((Math.round(1e3*l)/1e3).toFixed(3))}this.old_predicted_factor=this.predicted_factor}if(this.old_area!=this.area){this.scatter_hover_area=[];for(var m=0,u=this.area;m<u.length;m++){var f=u[m];this.scatter_hover_area.push((Math.round(10*f)/10).toFixed(1))}this.old_area=this.area}},BokehUseModelComponent.prototype.ngAfterViewInit=function(){var e=new Bokeh.HoverTool({tooltips:[["Width"," @hover_width cm"],["Length"," @hover_length cm"],["Area"," @hover_area cm^2"],["Measured factor"," @hover_measured_factor"],["Predicted factor"," @hover_predicted_factor"]],renderers:[this.scatter_renderer]});this.fig.add_tools(e),this.doc.add_root(this.fig),Bokeh.embed.add_document_standalone(this.doc,this.bokehplot.nativeElement)},r([a.Input(),o("design:type",String)],BokehUseModelComponent.prototype,"title",void 0),r([a.Input(),o("design:type",Number)],BokehUseModelComponent.prototype,"plot_width",void 0),r([a.Input(),o("design:type",Number)],BokehUseModelComponent.prototype,"plot_height",void 0),r([a.Input(),o("design:type",Array)],BokehUseModelComponent.prototype,"scatter_x",void 0),r([a.Input(),o("design:type",Array)],BokehUseModelComponent.prototype,"scatter_y",void 0),r([a.Input(),o("design:type",Array)],BokehUseModelComponent.prototype,"scatter_z",void 0),r([a.Input(),o("design:type",Array)],BokehUseModelComponent.prototype,"pcolour_x",void 0),r([a.Input(),o("design:type",Array)],BokehUseModelComponent.prototype,"pcolour_y",void 0),r([a.Input(),o("design:type",Array)],BokehUseModelComponent.prototype,"pcolour_z",void 0),r([a.Input(),o("design:type",Boolean)],BokehUseModelComponent.prototype,"enabled",void 0),r([a.Input(),o("design:type",Array)],BokehUseModelComponent.prototype,"predicted_factor",void 0),r([a.Input(),o("design:type",Array)],BokehUseModelComponent.prototype,"area",void 0),r([a.ViewChild("bokehplot"),o("design:type",Object)],BokehUseModelComponent.prototype,"bokehplot",void 0),BokehUseModelComponent=r([a.Component({selector:"my-bokeh-use-model",template:n(187)}),o("design:paramtypes",[])],BokehUseModelComponent)}(s.BokehPcolour);t.BokehUseModelComponent=l},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var r,o=arguments.length,a=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(a=(o<3?r(a):o>3?r(t,n,a):r(t,n))||a);return o>3&&a&&Object.defineProperty(t,n,a),a},r=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},o=n(3),a=function(){function ChooseSpecificationsComponent(){this.currentSettings={machine:null,energy:null,applicator:null,ssd:null},this.settingsUpdated=new o.EventEmitter}return ChooseSpecificationsComponent.prototype.ngOnInit=function(){this.currentSettings.energy=JSON.parse(localStorage.getItem("currentEnergy")),this.currentSettings.applicator=JSON.parse(localStorage.getItem("currentApplicator")),this.currentSettings.ssd=JSON.parse(localStorage.getItem("currentSSD")),this.allMachineSpecifications=JSON.parse(localStorage.getItem("specifications")),null==this.allMachineSpecifications?(this.allMachineSpecifications={},this.machineList=[]):(this.machineList=Object.keys(this.allMachineSpecifications).sort(),this.currentSettings.machine=String(JSON.parse(localStorage.getItem("current_machine"))),null!=this.currentSettings.machine&&void 0!==this.allMachineSpecifications[this.currentSettings.machine]||(this.currentSettings.machine=this.machineList[0]),this.currentMachineSpecifications=this.allMachineSpecifications[this.currentSettings.machine]),this.settingsUpdated.emit(this.currentSettings)},ChooseSpecificationsComponent.prototype.updateMachineID=function(e){if(this.currentSettings.machine=e,localStorage.setItem("current_machine",JSON.stringify(e)),this.currentMachineSpecifications=this.allMachineSpecifications[this.currentSettings.machine],null!=this.currentMachineSpecifications)for(var t=0,n=["energy","applicator","ssd"];t<n.length;t++){var i=n[t];this.currentMachineSpecifications[i].length>0?this.currentSettings[i]=this.currentMachineSpecifications[i][0]:this.currentSettings[i]=null}else for(var r=0,o=["energy","applicator","ssd"];r<o.length;r++){var i=o[r];this.currentSettings[i]=null}localStorage.setItem("currentEnergy",JSON.stringify(Number(this.currentSettings.energy))),localStorage.setItem("currentApplicator",JSON.stringify(this.currentSettings.applicator)),localStorage.setItem("currentSSD",JSON.stringify(Number(this.currentSettings.ssd))),this.settingsUpdated.emit(this.currentSettings)},ChooseSpecificationsComponent.prototype.updateEnergy=function(e){this.currentSettings.energy=Number(e),localStorage.setItem("currentEnergy",JSON.stringify(Number(e))),this.settingsUpdated.emit(this.currentSettings)},ChooseSpecificationsComponent.prototype.updateApplicator=function(e){this.currentSettings.applicator=e,localStorage.setItem("currentApplicator",JSON.stringify(e)),this.settingsUpdated.emit(this.currentSettings)},ChooseSpecificationsComponent.prototype.updateSSD=function(e){this.currentSettings.ssd=Number(e),localStorage.setItem("currentSSD",JSON.stringify(Number(e))),this.settingsUpdated.emit(this.currentSettings)},i([o.Input(),r("design:type",Object)],ChooseSpecificationsComponent.prototype,"currentSettings",void 0),i([o.Output(),r("design:type",Object)],ChooseSpecificationsComponent.prototype,"settingsUpdated",void 0),ChooseSpecificationsComponent=i([o.Component({selector:"my-choose-specifications",template:n(201)}),r("design:paramtypes",[])],ChooseSpecificationsComponent)}();t.ChooseSpecificationsComponent=a},function(e,t){e.exports='<div class="mdl-grid">\r\n  <div \r\n      *ngIf="this.machineList.length > 0" \r\n      class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\r\n    <h6>Machine ID</h6>\r\n    <select\r\n        [(ngModel)]="currentSettings.machine"\r\n        (input)="updateMachineID($event.target.value)">\r\n      <option *ngFor="let machine of machineList">{{machine}}</option>\r\n    </select>\r\n  </div>\r\n\r\n  <div \r\n      *ngIf="this.machineList.length > 0 && currentSettings.machine != null" \r\n      class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\r\n    <h6>Energy</h6>\r\n    <select\r\n        [(ngModel)]="currentSettings.energy"\r\n        (input)="updateEnergy($event.target.value)"\r\n        *ngIf="currentMachineSpecifications.energy.length > 0">\r\n      <option *ngFor="let energy of currentMachineSpecifications.energy" value="{{energy}}">{{energy}} MeV</option>\r\n    </select>\r\n    <p *ngIf="currentMachineSpecifications.energy == 0">\r\n      This machine doesn\'t have any energies defined. Please \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        define energies.\r\n      </a>\r\n    </p>\r\n  </div>\r\n\r\n  <div \r\n      *ngIf="this.machineList.length > 0 && currentSettings.machine != null" \r\n      class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\r\n    <h6>Applicator</h6>\r\n    <select \r\n        [(ngModel)]="currentSettings.applicator"\r\n        (input)="updateApplicator($event.target.value)"\r\n        *ngIf="currentMachineSpecifications.applicator.length > 0">\r\n      <option *ngFor="let applicator of currentMachineSpecifications.applicator">{{applicator}}</option>\r\n    </select>\r\n    <p *ngIf="currentMachineSpecifications.applicator == 0">\r\n      This machine doesn\'t have any applicators defined. Please \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        define applicators.\r\n      </a>\r\n    </p>\r\n  </div>\r\n\r\n  <div \r\n      *ngIf="this.machineList.length > 0 && currentSettings.machine != null" \r\n      class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\r\n    <h6>SSD</h6>\r\n    <select  \r\n        [(ngModel)]="currentSettings.ssd"\r\n        (input)="updateSSD($event.target.value)"\r\n        *ngIf="currentMachineSpecifications.ssd.length > 0">\r\n      <option *ngFor="let ssd of currentMachineSpecifications.ssd">{{ssd}}</option>\r\n    </select>\r\n    <p *ngIf="currentMachineSpecifications.ssd == 0">\r\n      This machine doesn\'t have an ssd defined. Please \r\n      <a routerLink="/specifications" routerLinkActive="active">\r\n        define at least one ssd.\r\n      </a>\r\n    </p>\r\n  </div>\r\n</div>\r\n  \r\n';
}]);
//# sourceMappingURL=app.859199ba7a2003296388.js.map