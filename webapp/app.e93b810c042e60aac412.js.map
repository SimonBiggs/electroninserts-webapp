{"version":3,"sources":["webpack:///webapp/app.e93b810c042e60aac412.js","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./~/angulartics2/src/providers/angulartics2-google-analytics.js","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/parameterise-components/parameterise.component.ts","webpack:///./src/app/services/data-services/insert-data.ts","webpack:///./src/app/services/server-api-services/electron-api.service.ts","webpack:///./src/app/services/utility-services/title.service.ts","webpack:///./src/app/services/data-services/data-persistence.service.ts","webpack:///./src/app/services/data-services/dexie.service.ts","webpack:///./src/app/services/data-services/model-data.ts","webpack:///./src/app/services/data-services/base-data.ts","webpack:///./src/app/services/data-services/specifications-data.service.ts","webpack:///./src/app/services/data-services/current-settings.ts","webpack:///./src/app/components/parameterise-components/x-y-input.component.ts","webpack:///./src/app/services/utility-services/text-input-control.ts","webpack:///./src/app/services/utility-services/sanitise-validation.ts","webpack:///./src/app/components/misc-components/shared-text-input-template.html","webpack:///./src/app/services/data-services/demo-data.ts","webpack:///./src/app/components/parameterise-components/parameterise.component.html","webpack:///./src/app/components/misc-components/page-not-found.component.ts","webpack:///./src/app/components/misc-components/page-not-found.component.html","webpack:///./src/app/components/home-components/home.component.ts","webpack:///./src/app/components/home-components/home.component.html","webpack:///./src/app/components/model-components/create-model.component.ts","webpack:///./src/app/components/model-components/width-length-area-input.component.ts","webpack:///./src/app/components/model-components/create-model.component.html","webpack:///./src/app/components/model-components/use-model.component.ts","webpack:///./src/app/components/model-components/use-model.component.html","webpack:///./src/app/components/storage-components/storage-management.component.ts","webpack:///./src/app/components/storage-components/storage-management.component.html","webpack:///./src/app/components/specification-components/specifications.component.ts","webpack:///./src/app/components/specification-components/specifications.component.html","webpack:///./src/app/components/dicom-components/dicom.component.ts","webpack:///./src/app/components/dicom-components/dicom.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/components/bokeh-components/plot.component.ts","webpack:///./src/app/components/bokeh-components/bokeh-plot.html","webpack:///./src/app/components/bokeh-components/bokeh-create-model.component.ts","webpack:///./src/app/components/bokeh-components/bokeh-pcolour.ts","webpack:///./src/app/components/bokeh-components/bokeh-use-model.component.ts","webpack:///./src/app/components/model-components/choose-specifications.component.ts","webpack:///./src/app/components/model-components/choose-specifications.component.html","webpack:///./src/app/components/specification-components/json-edit.component.ts","webpack:///./src/app/pipes/my-json.pipe.ts","webpack:///./src/app/components/specification-components/json-edit.component.html","webpack:///./src/app/components/dicom-components/send-to-parameterisation.component.ts","webpack:///./src/app/components/dicom-components/send-to-parameterisation.component.html","webpack:///./src/app/components/parameterise-components/width-length-table.component.ts","webpack:///./src/app/components/parameterise-components/width-length-table.component.html","webpack:///./src/app/services/data-services/local-storage.service.ts","webpack:///./src/app/services/data-services/localstoragemodule.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","platform_browser_dynamic_1","core_1","app_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule","AppModule","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","platform_browser_1","forms_1","http_1","platform_browser_2","angulartics2_google_analytics_1","angulartics2_1","angular2_mdl_1","app_routing_1","app_component_1","plot_component_1","bokeh_create_model_component_1","bokeh_use_model_component_1","home_component_1","specifications_component_1","choose_specifications_component_1","json_edit_component_1","dicom_component_1","send_to_parameterisation_component_1","parameterise_component_1","width_length_table_component_1","x_y_input_component_1","width_length_area_input_component_1","create_model_component_1","use_model_component_1","storage_management_component_1","page_not_found_component_1","my_json_pipe_1","model_data_1","current_settings_1","data_persistence_service_1","local_storage_service_1","specifications_data_service_1","electron_api_service_1","title_service_1","NgModule","imports","BrowserModule","FormsModule","HttpModule","MdlModule","routing","Angulartics2Module","forRoot","declarations","AppComponent","ParameteriseComponent","PlotComponent","PageNotFoundComponent","WidthLengthTableComponent","MyJsonPipe","HomeComponent","CreateModelComponent","UseModelComponent","StorageManagementComponent","SpecificationsComponent","DicomComponent","SendToParameterisationComponent","JsonEditComponent","BokehCreateModelComponent","BokehUseModelComponent","ChooseSpecificationsComponent","WidthLengthAreaInputComponent","XYInputComponent","providers","ElectronApiService","TitleService","Title","LocalStorageService","Angulartics2GoogleAnalytics","ModelData","ModelMeasurement","ModelGrid","Predictions","AreaLengthConversion","DataPersistenceService","CurrentSettings","MachineSpecificationsService","bootstrap","angulartics2","_this","settings","pageTracking","trackRelativePath","ga","additionalAccountNames","userId","pageTrack","subscribe","x","path","eventTrack","action","properties","exceptionTrack","setUsername","setUserProperties","userTimings","prototype","_gaq","push","_i","_a","accountName","_b","_c","category","value","parsed","parseInt","isNaN","eventOptions","eventCategory","eventAction","eventLabel","label","eventValue","nonInteraction","noninteraction","page","location","hash","substring","pathname","setDimensionsAndMetrics","transport","appId","appName","appVersion","undefined","fatal","console","log","exFatal","exDescription","description","error","timingCategory","timingVar","timingValue","idx","toString","type","Injectable","ctorParameters","Angulartics2","router_1","appRoutes","component","data","title","redirectTo","appRoutingProviders","RouterModule","insert_data_1","demo_data_1","electronApiService","myTitleService","router","modelData","dataPersistenceService","machineSpecificationService","applicationRef","textInputsValid","equalLengths","serverResponseValid","dataInFlight","submitDisabled","machineExists","machineSettingsExist","ableToAddDataToModel","dataAlreadyExistsOnModel","serverError","insertData","InsertData","dataLoaded","viewInitialised","initialTextBoxUpdate","ngOnInit","setTitle","loadServerUrl","then","serverUrl","parameteriseURL","url","loadCurrentInsertData","checkIfEqualLengths","loadData","machineSettings","currentSettings","checkMachineSettings","checkIfCanBeSentToModel","textboxInputs","triggerUpdate","ngAfterViewInit","ngAfterContentInit","doesMachineExist","machine","checkInsertSettingsExist","keys","loadModelData","measurement","width","indexOf","Number","parameterisation","measuredFactor","onValidTextboxChange","insertUpdated","loadParameterisationCache","saveCurrentInsertData","insert","y","addMeasuredFactor","model","reset","saveModelData","saveCurrentSettings","predictFactor","predictions","unshift","navigate","loadDemoData","demoData","JSON","parse","stringify","DEMO_PARAMETERISE_INPUT","sleep","time","Promise","resolve","setTimeout","recursiveServerSubmit","sendToServer","parameterisationResult","circle","ellipse","complete","checkSubmitButton","saveParameterisationCache","insertDataChange","onSubmit","onTextInputChange","testInputStatus","parameterisationServerChange","saveServerUrl","ViewChild","Component","selector","template","Router","ApplicationRef","Coordinates","Parameterisation","input","chr","len","charCodeAt","RangeError","id","inputId","energy","applicator","ssd","fillFromObject","object","http","wakeUpURL","wakeUpServer","get","toPromise","URL","post","res","json","handleError","reject","message","Http","getTitle","dexie_service_1","loadCurrentSettings","db","toArray","result","put","loadSpecificationsData","specifications","saveSpecificationsData","specification","storageKey","returnKey","machineSettingsKey","modelDataLite","exportLite","parameterisationCache","currentInsertData","purpose","serverURLs","ServerURLs","loadDicomInsertList","dicomInsertList","result_1","saveDicomInsertList","insertList","bulkPut","jsonTransform","jsonText","replace","databaseDump","schemaString","tableDumps","stringDump","promiseList","tables","forEach","table","primKeyAndIndexes","schema","primKey","concat","indexes","schemaSyntax","map","index","src","join","name","objectArray","all","verno","emptyDatabase","pulledFromLocalStorage","clear","add","appendJsonToDatabase","databaseContents","__extends","b","__","constructor","p","hasOwnProperty","create","dexie_1","PulledFromLocalStorage","DexieDatabase","_super","call","version","stores","mapToClass","MachineSpecification","fillDatabaseFromLocalStorage","loadSpecificationsFromLocalStorage","machineList","specifications_1","sort","modelDataLiteArray","loadModelDataFromLocalStorage","machineSettingsKeys","modelDataLiteArray_1","bulkAdd","testArrayOfStrings","Array","item","testArrayOfNumbers","newSpec","makeAndModel","R50","oldSpec","localStorage","getItem","newSpecArray","energy_1","specificationsArray","specificationsArray_1","_d","_e","_f","parsedData","updateKey","base_data_1","apply","area","convertLengthToArea","Math","PI","round","convertAreaToLength","updateAreaFromLength","updateLengthFromArea","initialLengthAreaUpdate","Base","propNames","keyConversions","factor","predictedFactor","propName","updateOldKeyNames","newKey","oldKey","returnMachineSpecification","String","machineID","machineSpecification","returnCurrentR50","energyLookup","currentSpecification","specificationArray","updateSpecifications","updateMachineList","updateCurrentSpecification","refreshCurrentSettings","newMachine","newMachineID","newMakeAndModel","newSpecification","changeMachine","swapToMachineID","text_input_control_1","textboxLabels","disabled","rows","validTextBoxChange","EventEmitter","texboxValidCheck","textInputControl","TextInputControl","dataInputs","updateAllTextboxInputs","ngDoCheck","onTextboxChange","newInput","oldValid","textboxValid","validateTextboxInput","emit","checkAllValid","Input","Boolean","Output","sanitise_validation_1","inputNames","textboxInput","updateTextboxInput","validateInput","eval","err","test","ngZone","lengthSmallerThanWidth","plot_width","window","onresize","e","run","updatePlotWidth","ngOnDestroy","modelURL","plotContainer","nativeElement","clientWidth","currentMachineSettingsUpdated","newSettings","loadMeasuredData","checkLengthSmallerThanWidth","saveModel","basicServerSubmit","modelResult","model_width","model_length","model_factor","modelServerChange","newModelURL","defaultServer","settingsPicker","NgZone","lastEdit","modelLookup","predictionDifference","updateModelLookup","updatePredictedFactors","lookupFactor","amount","min","updatePredictionDifference","difference","reader","FileReader","onload","event","contents","fileJsonObject","exportDataBase","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","openFile","file","files","readAsText","newMachineIDValid","newModelValid","newMachineValid","edittingMachine","newEnergyValid","newR50Valid","newEnergySetValid","edittingEnergy","newApplicatorValid","edittingApplicator","newSSDValid","edittingSSD","checkNewMachineIDInput","checkNewMachineValid","checkNewModelInput","newModel","addMachineID","checkNewEnergyInput","newEnergy","checkNewEnergySetValid","checkNewR50Input","newR50","addEnergy","checkNewApplicatorInput","newApplicator","toLowerCase","addApplicator","checkNewSSDInput","newSSD","addSSD","js_yaml_1","dicomExitCode","onceFileIsLoaded","Module","print","sendDicomDumpToGlobalVariable","updateDicomWarning","status","getBlockDataButton","dicomWarning","content","Int8Array","fileName","FS","isFile","unlink","writeFile","encoding","exit_orig","exit","callMain","readAsArrayBuffer","convertDicomDumpToDict","dump","yamlConvert","safeLoad","convertBlockDataToCoords","blockData","listString","exec","num","parseFloat","toFixed","dicomPullNumber","dicomPullString","getBlockData","dicomPrint","dicomDict","beamSequence","beamSequence_1","beam","temp","sendToParameterisation","styles","angulartics2GoogleAnalytics","events","filter","NavigationEnd","pageTitle","redirect","sessionStorage","href","history","replaceState","insert_x","insert_y","enabled","plot_height","jsonValid","plt","Bokeh","Plotting","tools","xrange","Range1d","yrange","fig","figure","x_range","y_range","source","ColumnDataSource","doc","Document","ngOnChanges","tempSource","xs","ys","colour","xAll","yAll","xMax","max","xMin","yMax","yMin","range","sqXMax","sqXMin","sqYMax","sqYMin","attributes","start","end","multi_line","field","line_width","color","add_root","embed","add_document_standalone","bokehplot","bokeh_pcolour_1","scatter_z","updateHoverData","runAllUpdates","pcolour_data","pcolour_x","pcolour_hover_width","pcolour_y","pcolour_hover_length","z","pcolour_z","pcolour_hover_predicted_factor","hover_tool","HoverTool","tooltips","renderers","pcolour_renderer","add_tools","BokehPcolour","scatter_hover_width","scatter_hover_length","scatter_hover_area","scatter_hover_measured_factor","scatter_hover_predicted_factor","old_scatter_z","old_pcolour_z","scatter_c","pcolour_c","scatter_data","hover_width","hover_length","hover_area","hover_measured_factor","hover_predicted_factor","scatter_source","pcolour_source","viridis_hex","colour_mapper","LinearColorMapper","palette","ticker","BasicTicker","colour_bar","ColorBar","label_standoff","figureInitialise","rect","scatter_renderer","size","line_color","fill_color","add_layout","updateScatterData","updatePcolourData","updateScatterColour","updateSourceData","updateFigureDimensions","scatter_x","scatter_y","allZ","vmin","vmax","low","high","color_mapper","v_compute","height","predicted_factor","old_area","old_predicted_factor","_g","_h","_j","a","settingsUpdated","updateMachineID","newCurrentMachine","updateEnergy","newCurrentEnergy","updateApplicator","newCurrentApplicator","updateSSD","newCurrentSSD","common_1","buttonText","inputUpdated","validationCheck","parsedJSON","useMyJsonPipe","lines","onInput","jsonInput","parseAndCheckJSON","transform","JsonPipe","split","editedInput","updateInput","jsonErrorMessage","Function","Pipe","pure","tableData","tableModel","MdlDefaultTableModel","sortable","numeric","addAll","localstoragemodule_1","isSupported","LocalStorage","hasItem","getRemainingSpace","getMaximumSpace","getUsedSpace","getItemUsedSpace","getBackup","applyBackup","consoleInfo","itemBackup","increase","totalData","trytotalData","setItem","substr","removeItem","backup","sum","NaN","fClear","fOverwriteExisting","fShowMaximumSize","maxSize"],"mappings":"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hD,EAAA,SAAA+C,EAAAC,cAKAxE,4BAAAvF,aACSgK,KAAAxK,EAAAyK,aAET1E,4BAAA2E,iBACSF,KAAAxI,EAAA2I,eAET5E,8BAEAlG,GAAAkG,+BH8KQ,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CAEH,SAASnG,EAAQC,EAASC,GAE/B,YI1YD,IAAA8K,GAAA9K,EAAqC,IAKrC+C,EAAA/C,EAAsC,KACtCsD,EAAAtD,EAAsC,KACtCyC,EAAAzC,EAA8B,KAC9BmD,EAAAnD,EAAqC,KACrCoD,EAAApD,EAAkC,KAClCqD,EAAArD,EAA2C,KAC3C0C,EAAA1C,EAAwC,KACxC6C,EAAA7C,EAA+B,KAGzB+K,IAEFzD,KAAM,OACN0D,UAAWvI,EAAAsC,cACXkG,MACEC,MAAO,UAIT5D,KAAM,UACN0D,UAAW3H,EAAA6B,6BAGXoC,KAAM,iBACN0D,UAAWtI,EAAAyC,0BAGXmC,KAAM,QACN0D,UAAWnI,EAAAuC,iBAGXkC,KAAM,eACN0D,UAAWjI,EAAA2B,wBAGX4C,KAAM,eACN0D,UAAW7H,EAAA6B,uBAGXsC,KAAM,YACN0D,UAAW5H,EAAA6B,oBAGXqC,KAAM,GACN0D,UAAWvI,EAAAsC,gBAGXuC,KAAM,QACN6D,WAAY,iBAGZ7D,KAAM,KAAM0D,UAAW1H,EAAAsB,uBAId7E,GAAAqL,uBAIArL,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","file":"webapp/app.e93b810c042e60aac412.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\n\tvar core_1 = __webpack_require__(3);\n\tvar app_module_1 = __webpack_require__(23);\n\tif (true) {\n\t    core_1.enableProdMode();\n\t}\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t// Angular2 imports\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar forms_1 = __webpack_require__(24);\n\tvar http_1 = __webpack_require__(28);\n\tvar platform_browser_2 = __webpack_require__(21);\n\tvar angulartics2_google_analytics_1 = __webpack_require__(29);\n\tvar angulartics2_1 = __webpack_require__(69);\n\t// Angular2 Material Design Lite\n\tvar angular2_mdl_1 = __webpack_require__(71);\n\t// My router\n\tvar app_routing_1 = __webpack_require__(126);\n\t// My components\n\t// Root component\n\tvar app_component_1 = __webpack_require__(197);\n\t// Bokeh components\n\tvar plot_component_1 = __webpack_require__(199);\n\tvar bokeh_create_model_component_1 = __webpack_require__(201);\n\tvar bokeh_use_model_component_1 = __webpack_require__(203);\n\t// Home components\n\tvar home_component_1 = __webpack_require__(149);\n\t// Speciation components\n\tvar specifications_component_1 = __webpack_require__(158);\n\tvar choose_specifications_component_1 = __webpack_require__(204);\n\tvar json_edit_component_1 = __webpack_require__(206);\n\t// Dicom components\n\tvar dicom_component_1 = __webpack_require__(160);\n\tvar send_to_parameterisation_component_1 = __webpack_require__(209);\n\t// Parameterise components\n\tvar parameterise_component_1 = __webpack_require__(127);\n\tvar width_length_table_component_1 = __webpack_require__(211);\n\tvar x_y_input_component_1 = __webpack_require__(141);\n\t// Model components\n\tvar width_length_area_input_component_1 = __webpack_require__(152);\n\tvar create_model_component_1 = __webpack_require__(151);\n\tvar use_model_component_1 = __webpack_require__(154);\n\t// Storage components\n\tvar storage_management_component_1 = __webpack_require__(156);\n\t// Misc components\n\tvar page_not_found_component_1 = __webpack_require__(147);\n\t// My pipes\n\t// Custom json pipe\n\tvar my_json_pipe_1 = __webpack_require__(207);\n\t// My services\n\t// Data services\n\tvar model_data_1 = __webpack_require__(137);\n\tvar current_settings_1 = __webpack_require__(140);\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar local_storage_service_1 = __webpack_require__(213);\n\tvar specifications_data_service_1 = __webpack_require__(139);\n\t// Server api services\n\tvar electron_api_service_1 = __webpack_require__(129);\n\t// Utility services\n\tvar title_service_1 = __webpack_require__(131);\n\tvar AppModule = (function () {\n\t    function AppModule() {\n\t    }\n\t    AppModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [\n\t                platform_browser_1.BrowserModule,\n\t                forms_1.FormsModule,\n\t                http_1.HttpModule,\n\t                angular2_mdl_1.MdlModule,\n\t                //  MaterialModule.forRoot(),\n\t                app_routing_1.routing,\n\t                angulartics2_1.Angulartics2Module.forRoot()\n\t            ],\n\t            declarations: [\n\t                app_component_1.AppComponent,\n\t                parameterise_component_1.ParameteriseComponent,\n\t                plot_component_1.PlotComponent,\n\t                page_not_found_component_1.PageNotFoundComponent,\n\t                width_length_table_component_1.WidthLengthTableComponent,\n\t                my_json_pipe_1.MyJsonPipe,\n\t                home_component_1.HomeComponent,\n\t                create_model_component_1.CreateModelComponent,\n\t                use_model_component_1.UseModelComponent,\n\t                storage_management_component_1.StorageManagementComponent,\n\t                specifications_component_1.SpecificationsComponent,\n\t                dicom_component_1.DicomComponent,\n\t                send_to_parameterisation_component_1.SendToParameterisationComponent,\n\t                json_edit_component_1.JsonEditComponent,\n\t                bokeh_create_model_component_1.BokehCreateModelComponent,\n\t                bokeh_use_model_component_1.BokehUseModelComponent,\n\t                choose_specifications_component_1.ChooseSpecificationsComponent,\n\t                width_length_area_input_component_1.WidthLengthAreaInputComponent,\n\t                x_y_input_component_1.XYInputComponent\n\t            ],\n\t            providers: [\n\t                electron_api_service_1.ElectronApiService,\n\t                title_service_1.TitleService,\n\t                platform_browser_2.Title,\n\t                local_storage_service_1.LocalStorageService,\n\t                angulartics2_google_analytics_1.Angulartics2GoogleAnalytics,\n\t                model_data_1.ModelData, model_data_1.ModelMeasurement, model_data_1.ModelGrid, model_data_1.Predictions, model_data_1.AreaLengthConversion,\n\t                data_persistence_service_1.DataPersistenceService,\n\t                current_settings_1.CurrentSettings,\n\t                specifications_data_service_1.MachineSpecificationsService\n\t            ],\n\t            bootstrap: [\n\t                app_component_1.AppComponent\n\t            ]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AppModule);\n\t    return AppModule;\n\t}());\n\texports.AppModule = AppModule;\n\n\n/***/ },\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar core_1 = __webpack_require__(3);\n\tvar angulartics2_1 = __webpack_require__(30);\n\tvar Angulartics2GoogleAnalytics = (function () {\n\t    function Angulartics2GoogleAnalytics(angulartics2) {\n\t        var _this = this;\n\t        this.angulartics2 = angulartics2;\n\t        this.angulartics2.settings.pageTracking.trackRelativePath = true;\n\t        this.angulartics2.settings.ga = {\n\t            additionalAccountNames: [],\n\t            userId: null\n\t        };\n\t        this.angulartics2.pageTrack.subscribe(function (x) { return _this.pageTrack(x.path); });\n\t        this.angulartics2.eventTrack.subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });\n\t        this.angulartics2.exceptionTrack.subscribe(function (x) { return _this.exceptionTrack(x); });\n\t        this.angulartics2.setUsername.subscribe(function (x) { return _this.setUsername(x); });\n\t        this.angulartics2.setUserProperties.subscribe(function (x) { return _this.setUserProperties(x); });\n\t        this.angulartics2.userTimings.subscribe(function (x) { return _this.userTimings(x); });\n\t    }\n\t    Angulartics2GoogleAnalytics.prototype.pageTrack = function (path) {\n\t        if (typeof _gaq !== 'undefined' && _gaq) {\n\t            _gaq.push(['_trackPageview', path]);\n\t            for (var _i = 0, _a = this.angulartics2.settings.ga.additionalAccountNames; _i < _a.length; _i++) {\n\t                var accountName = _a[_i];\n\t                _gaq.push([accountName + '._trackPageview', path]);\n\t            }\n\t            ;\n\t        }\n\t        if (typeof ga !== 'undefined' && ga) {\n\t            if (this.angulartics2.settings.ga.userId) {\n\t                ga('set', '&uid', this.angulartics2.settings.ga.userId);\n\t            }\n\t            ga('send', 'pageview', path);\n\t            for (var _b = 0, _c = this.angulartics2.settings.ga.additionalAccountNames; _b < _c.length; _b++) {\n\t                var accountName = _c[_b];\n\t                ga(accountName + '.send', 'pageview', path);\n\t            }\n\t            ;\n\t        }\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.eventTrack = function (action, properties) {\n\t        if (!properties || !properties.category) {\n\t            properties = properties || {};\n\t            properties.category = 'Event';\n\t        }\n\t        if (properties.value) {\n\t            var parsed = parseInt(properties.value, 10);\n\t            properties.value = isNaN(parsed) ? 0 : parsed;\n\t        }\n\t        if (ga) {\n\t            var eventOptions = {\n\t                eventCategory: properties.category,\n\t                eventAction: action,\n\t                eventLabel: properties.label,\n\t                eventValue: properties.value,\n\t                nonInteraction: properties.noninteraction,\n\t                page: properties.page || location.hash.substring(1) || location.pathname,\n\t                userId: this.angulartics2.settings.ga.userId\n\t            };\n\t            this.setDimensionsAndMetrics(properties);\n\t            if (this.angulartics2.settings.ga.transport) {\n\t                ga('send', 'event', eventOptions, { transport: this.angulartics2.settings.ga.transport });\n\t            }\n\t            else {\n\t                ga('send', 'event', eventOptions);\n\t            }\n\t            for (var _i = 0, _a = this.angulartics2.settings.ga.additionalAccountNames; _i < _a.length; _i++) {\n\t                var accountName = _a[_i];\n\t                ga(accountName + '.send', 'event', eventOptions);\n\t            }\n\t        }\n\t        else if (_gaq) {\n\t            _gaq.push(['_trackEvent', properties.category, action, properties.label, properties.value, properties.noninteraction]);\n\t        }\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.exceptionTrack = function (properties) {\n\t        if (!properties || !properties.appId || !properties.appName || !properties.appVersion) {\n\t            console.error('Must be setted appId, appName and appVersion.');\n\t            return;\n\t        }\n\t        if (properties.fatal === undefined) {\n\t            console.log('No \"fatal\" provided, sending with fatal=true');\n\t            properties.exFatal = true;\n\t        }\n\t        properties.exDescription = properties.description;\n\t        ga('send', 'exception', properties);\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.setUsername = function (userId) {\n\t        this.angulartics2.settings.ga.userId = userId;\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.setUserProperties = function (properties) {\n\t        this.setDimensionsAndMetrics(properties);\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.userTimings = function (properties) {\n\t        if (!properties || !properties.timingCategory || !properties.timingVar || !properties.timingValue) {\n\t            console.error('Properties timingCategory, timingVar, and timingValue are required to be set.');\n\t            return;\n\t        }\n\t        if (ga) {\n\t            ga('send', 'timing', properties);\n\t        }\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.setDimensionsAndMetrics = function (properties) {\n\t        if (ga) {\n\t            for (var idx = 1; idx <= 200; idx++) {\n\t                if (properties['dimension' + idx.toString()]) {\n\t                    ga('set', 'dimension' + idx.toString(), properties['dimension' + idx.toString()]);\n\t                }\n\t                if (properties['metric' + idx.toString()]) {\n\t                    ga('set', 'metric' + idx.toString(), properties['metric' + idx.toString()]);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    Angulartics2GoogleAnalytics.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    Angulartics2GoogleAnalytics.ctorParameters = [\n\t        { type: angulartics2_1.Angulartics2, },\n\t    ];\n\t    return Angulartics2GoogleAnalytics;\n\t}());\n\texports.Angulartics2GoogleAnalytics = Angulartics2GoogleAnalytics;\n\n\n/***/ },\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar router_1 = __webpack_require__(41);\n\tvar parameterise_component_1 = __webpack_require__(127);\n\tvar page_not_found_component_1 = __webpack_require__(147);\n\tvar home_component_1 = __webpack_require__(149);\n\tvar create_model_component_1 = __webpack_require__(151);\n\tvar use_model_component_1 = __webpack_require__(154);\n\tvar storage_management_component_1 = __webpack_require__(156);\n\tvar specifications_component_1 = __webpack_require__(158);\n\tvar dicom_component_1 = __webpack_require__(160);\n\tvar appRoutes = [\n\t    {\n\t        path: 'home',\n\t        component: home_component_1.HomeComponent,\n\t        data: {\n\t            title: 'Home'\n\t        }\n\t    },\n\t    {\n\t        path: 'storage',\n\t        component: storage_management_component_1.StorageManagementComponent\n\t    },\n\t    {\n\t        path: 'specifications',\n\t        component: specifications_component_1.SpecificationsComponent\n\t    },\n\t    {\n\t        path: 'dicom',\n\t        component: dicom_component_1.DicomComponent\n\t    },\n\t    {\n\t        path: 'parameterise',\n\t        component: parameterise_component_1.ParameteriseComponent\n\t    },\n\t    {\n\t        path: 'create-model',\n\t        component: create_model_component_1.CreateModelComponent\n\t    },\n\t    {\n\t        path: 'use-model',\n\t        component: use_model_component_1.UseModelComponent\n\t    },\n\t    {\n\t        path: '',\n\t        component: home_component_1.HomeComponent\n\t    },\n\t    {\n\t        path: 'model',\n\t        redirectTo: 'create-model'\n\t    },\n\t    {\n\t        path: '**', component: page_not_found_component_1.PageNotFoundComponent\n\t    }\n\t];\n\texports.appRoutingProviders = [];\n\texports.routing = router_1.RouterModule.forRoot(appRoutes);\n\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(41);\n\tvar insert_data_1 = __webpack_require__(128);\n\tvar electron_api_service_1 = __webpack_require__(129);\n\tvar title_service_1 = __webpack_require__(131);\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar specifications_data_service_1 = __webpack_require__(139);\n\tvar x_y_input_component_1 = __webpack_require__(141);\n\tvar model_data_1 = __webpack_require__(137);\n\tvar demo_data_1 = __webpack_require__(145);\n\tvar ParameteriseComponent = (function () {\n\t    function ParameteriseComponent(electronApiService, myTitleService, router, modelData, dataPersistenceService, machineSpecificationService, applicationRef) {\n\t        this.electronApiService = electronApiService;\n\t        this.myTitleService = myTitleService;\n\t        this.router = router;\n\t        this.modelData = modelData;\n\t        this.dataPersistenceService = dataPersistenceService;\n\t        this.machineSpecificationService = machineSpecificationService;\n\t        this.applicationRef = applicationRef;\n\t        this.textInputsValid = true;\n\t        this.equalLengths = true;\n\t        this.serverResponseValid = true;\n\t        this.dataInFlight = false;\n\t        this.submitDisabled = false;\n\t        this.machineExists = false;\n\t        this.machineSettingsExist = false;\n\t        this.ableToAddDataToModel = false;\n\t        this.dataAlreadyExistsOnModel = false;\n\t        this.serverError = false;\n\t        this.insertData = new insert_data_1.InsertData();\n\t        this.dataLoaded = false;\n\t        this.viewInitialised = false;\n\t        this.initialTextBoxUpdate = false;\n\t    }\n\t    ParameteriseComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        console.log('parameterisation.component ngOnInit');\n\t        this.myTitleService.setTitle('Parameterisation');\n\t        this.dataPersistenceService.loadServerUrl('parameterisation')\n\t            .then(function (serverUrl) {\n\t            if (serverUrl == null) {\n\t                _this.parameteriseURL = 'http://electronapi.simonbiggs.net/parameterise';\n\t            }\n\t            else {\n\t                _this.parameteriseURL = serverUrl.url;\n\t            }\n\t        });\n\t        this.dataPersistenceService.loadCurrentInsertData(this.insertData)\n\t            .then(function () {\n\t            _this.checkIfEqualLengths();\n\t            return _this.machineSpecificationService.loadData();\n\t        })\n\t            .then(function () {\n\t            console.log('specifications.component ngOnInit this.machineSpecificationService.loadData() promise complete');\n\t            _this.machineSettings = _this.machineSpecificationService.currentSettings;\n\t            _this.checkMachineSettings();\n\t            _this.checkIfCanBeSentToModel();\n\t            if (_this.viewInitialised && !_this.initialTextBoxUpdate) {\n\t                _this.textboxInputs.triggerUpdate = true;\n\t                _this.initialTextBoxUpdate = true;\n\t            }\n\t            _this.dataLoaded = true;\n\t        });\n\t    };\n\t    ParameteriseComponent.prototype.ngAfterViewInit = function () {\n\t        if (this.dataLoaded && !this.initialTextBoxUpdate) {\n\t            this.textboxInputs.triggerUpdate = true;\n\t            this.initialTextBoxUpdate = true;\n\t        }\n\t        this.viewInitialised = true;\n\t        // this.sleep(10)\n\t        // .then(() => {\n\t        //   this.textboxInputs.triggerUpdate = true\n\t        //   this.applicationRef.tick()\n\t        // })\n\t    };\n\t    ParameteriseComponent.prototype.ngAfterContentInit = function () {\n\t        // this.sleep(10)\n\t        // .then(() => {\n\t        //   this.textboxInputs.triggerUpdate = true\n\t        //   this.applicationRef.tick()\n\t        // })\n\t    };\n\t    ParameteriseComponent.prototype.checkMachineSettings = function () {\n\t        console.log('parameterisation.component checkMachineSettings');\n\t        if (this.machineSpecificationService.doesMachineExist(this.insertData.machine)) {\n\t            this.machineExists = true;\n\t            this.machineSettingsExist = this.machineSpecificationService.checkInsertSettingsExist(this.insertData);\n\t        }\n\t        else {\n\t            this.machineExists = false;\n\t            this.machineSettingsExist = false;\n\t        }\n\t        console.log(this.machineSettingsExist);\n\t    };\n\t    ParameteriseComponent.prototype.checkIfCanBeSentToModel = function () {\n\t        var _this = this;\n\t        console.log('parameterisation.component checkIfCanBeSentToModel');\n\t        if (this.machineSettingsExist) {\n\t            for (var _i = 0, _a = Object.keys(this.machineSettings); _i < _a.length; _i++) {\n\t                var key = _a[_i];\n\t                this.machineSettings[key] = this.insertData[key];\n\t            }\n\t            this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings).then(function () {\n\t                console.log('parameterisation.component checkIfCanBeSentToModel this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete');\n\t                if (_this.modelData.measurement.width.indexOf(Number(_this.insertData.parameterisation.width)) > -1 &&\n\t                    _this.modelData.measurement.length.indexOf(Number(_this.insertData.parameterisation.length)) > -1 &&\n\t                    _this.modelData.measurement.measuredFactor.indexOf(Number(_this.insertData.measuredFactor)) > -1) {\n\t                    _this.dataAlreadyExistsOnModel = true;\n\t                    _this.ableToAddDataToModel = false;\n\t                }\n\t                else {\n\t                    _this.dataAlreadyExistsOnModel = false;\n\t                    if (Number(_this.insertData.parameterisation.width) == 0 ||\n\t                        Number(_this.insertData.parameterisation.length) == 0 ||\n\t                        Number(_this.insertData.measuredFactor) == 0) {\n\t                        _this.ableToAddDataToModel = false;\n\t                    }\n\t                    else {\n\t                        _this.ableToAddDataToModel = true;\n\t                    }\n\t                }\n\t            });\n\t        }\n\t        else {\n\t            this.ableToAddDataToModel = false;\n\t            this.dataAlreadyExistsOnModel = false;\n\t        }\n\t    };\n\t    ParameteriseComponent.prototype.onValidTextboxChange = function () {\n\t        var _this = this;\n\t        console.log('parameterisation.component onValidTextboxChange');\n\t        this.insertData.parameterisation.insertUpdated();\n\t        this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation)\n\t            .then(function () {\n\t            console.log('parameterisation.component onValidTextboxChange this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation) promise complete');\n\t            _this.checkIfEqualLengths();\n\t            _this.checkIfCanBeSentToModel();\n\t            return _this.dataPersistenceService.saveCurrentInsertData(_this.insertData);\n\t        })\n\t            .then(function () {\n\t            console.log('parameterisation.component onValidTextboxChange this.dataPersistenceService.saveCurrentInsertData(this.insertData)  promise complete');\n\t        });\n\t    };\n\t    ParameteriseComponent.prototype.checkIfEqualLengths = function () {\n\t        console.log('parameterisation.component checkIfEqualLengths');\n\t        if (this.insertData.parameterisation.insert.x.length == this.insertData.parameterisation.insert.y.length) {\n\t            this.equalLengths = true;\n\t        }\n\t        else {\n\t            this.equalLengths = false;\n\t        }\n\t    };\n\t    ParameteriseComponent.prototype.addMeasuredFactor = function (measuredFactor) {\n\t        var _this = this;\n\t        console.log('parameterisation.component addMeasuredFactor');\n\t        this.dataAlreadyExistsOnModel = true;\n\t        this.ableToAddDataToModel = false;\n\t        for (var _i = 0, _a = Object.keys(this.machineSettings); _i < _a.length; _i++) {\n\t            var key = _a[_i];\n\t            this.machineSettings[key] = this.insertData[key];\n\t        }\n\t        this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings)\n\t            .then(function () {\n\t            console.log('parameterisation.component addMeasuredFactor this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete');\n\t            _this.modelData.model.reset();\n\t            _this.modelData.measurement.width.push(Number(_this.insertData.parameterisation.width));\n\t            _this.modelData.measurement.length.push(Number(_this.insertData.parameterisation.length));\n\t            _this.modelData.measurement.measuredFactor.push(Number(measuredFactor));\n\t            return _this.dataPersistenceService.saveModelData(_this.modelData, _this.machineSettings);\n\t        })\n\t            .then(function () {\n\t            console.log('parameterisation.component addMeasuredFactor this.dataPersistenceService.saveModelData(this.modelData, this.machineSettings) promise complete');\n\t            return _this.dataPersistenceService.saveCurrentSettings(_this.machineSettings);\n\t        })\n\t            .then(function () {\n\t            console.log('parameterisation.component addMeasuredFactor this.dataPersistenceService.saveCurrentSettings(this.machineSettings) promise complete');\n\t        });\n\t    };\n\t    ParameteriseComponent.prototype.predictFactor = function () {\n\t        var _this = this;\n\t        console.log('parameterisation.component predictFactor');\n\t        for (var _i = 0, _a = Object.keys(this.machineSettings); _i < _a.length; _i++) {\n\t            var key = _a[_i];\n\t            this.machineSettings[key] = this.insertData[key];\n\t        }\n\t        this.dataPersistenceService.saveCurrentSettings(this.machineSettings)\n\t            .then(function () {\n\t            console.log('parameterisation.component predictFactor this.dataPersistenceService.saveCurrentSettings(this.machineSettings) promise complete');\n\t            return _this.dataPersistenceService.loadModelData(_this.modelData, _this.machineSettings);\n\t        })\n\t            .then(function () {\n\t            console.log('parameterisation.component predictFactor this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete');\n\t            _this.modelData.predictions.width.unshift(_this.insertData.parameterisation.width);\n\t            _this.modelData.predictions.length.unshift(_this.insertData.parameterisation.length);\n\t            if (_this.insertData.measuredFactor != 0 && _this.insertData.measuredFactor != null) {\n\t                _this.modelData.predictions.measuredFactor.unshift(_this.insertData.measuredFactor);\n\t            }\n\t            return _this.dataPersistenceService.saveModelData(_this.modelData, _this.machineSettings);\n\t        })\n\t            .then(function () {\n\t            console.log('parameterisation.component predictFactor this.dataPersistenceService.saveModelData(this.modelData, this.machineSettings) promise complete');\n\t            _this.router.navigate([\"/use-model\"]);\n\t        });\n\t    };\n\t    ParameteriseComponent.prototype.loadDemoData = function () {\n\t        var _this = this;\n\t        console.log('parameterisation.component loadDemoData');\n\t        var insert = this.insertData.parameterisation.insert;\n\t        this.insertData.reset();\n\t        this.insertData.parameterisation.insert = insert;\n\t        var demoData = JSON.parse(JSON.stringify(demo_data_1.DEMO_PARAMETERISE_INPUT));\n\t        this.insertData.parameterisation.insert.x = demoData.insert.x;\n\t        this.insertData.parameterisation.insert.y = demoData.insert.y;\n\t        this.insertData.parameterisation.insertUpdated();\n\t        this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation)\n\t            .then(function () {\n\t            console.log('parameterisation.component loadDemoData this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation) promise complete');\n\t            _this.textboxInputs.triggerUpdate = true;\n\t            _this.checkIfEqualLengths();\n\t            return _this.dataPersistenceService.saveCurrentInsertData(_this.insertData);\n\t        })\n\t            .then(function () {\n\t            console.log('parameterisation.component loadDemoData this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete');\n\t        });\n\t    };\n\t    ParameteriseComponent.prototype.sleep = function (time) {\n\t        console.log('parameterisation.component sleep');\n\t        return new Promise(function (resolve) { return setTimeout(resolve, time); });\n\t    };\n\t    ParameteriseComponent.prototype.recursiveServerSubmit = function () {\n\t        var _this = this;\n\t        console.log('parameterisation.component recursiveServerSubmit');\n\t        this.serverError = false;\n\t        this.electronApiService.sendToServer(this.parameteriseURL, JSON.stringify(this.insertData.parameterisation.insert))\n\t            .then(function (parameterisationResult) {\n\t            _this.insertData.parameterisation.circle = parameterisationResult.circle;\n\t            _this.insertData.parameterisation.ellipse = parameterisationResult.ellipse;\n\t            _this.insertData.parameterisation.width = parameterisationResult.width;\n\t            _this.insertData.parameterisation.length = parameterisationResult.length;\n\t            var complete = parameterisationResult.complete;\n\t            if (complete) {\n\t                _this.dataInFlight = false;\n\t                _this.serverResponseValid = true;\n\t                _this.checkSubmitButton();\n\t                _this.dataPersistenceService.saveParameterisationCache(_this.insertData.parameterisation)\n\t                    .then(function () {\n\t                    console.log('parameterisation.component recursiveServerSubmit this.dataPersistenceService.saveParameterisationCache(this.insertData.parameterisation) promise complete');\n\t                });\n\t                _this.dataPersistenceService.saveCurrentInsertData(_this.insertData)\n\t                    .then(function () {\n\t                    console.log('parameterisation.component recursiveServerSubmit this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete');\n\t                });\n\t                _this.checkIfCanBeSentToModel();\n\t                if (_this.insertData.parameterisation.width == null) {\n\t                    _this.serverError = true;\n\t                }\n\t            }\n\t            else {\n\t                _this.sleep(500).then(function () { return _this.recursiveServerSubmit(); });\n\t            }\n\t        });\n\t    };\n\t    ParameteriseComponent.prototype.insertDataChange = function () {\n\t        console.log('parameterisation.component insertDataChange');\n\t        this.dataPersistenceService.saveCurrentInsertData(this.insertData)\n\t            .then(function () {\n\t            console.log('parameterisation.component insertDataChange this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete');\n\t        });\n\t        this.checkMachineSettings();\n\t        this.checkIfCanBeSentToModel();\n\t    };\n\t    ParameteriseComponent.prototype.onSubmit = function () {\n\t        console.log('parameterisation.component onSubmit');\n\t        this.dataInFlight = true;\n\t        this.checkSubmitButton();\n\t        this.recursiveServerSubmit();\n\t    };\n\t    ParameteriseComponent.prototype.onTextInputChange = function (testInputStatus) {\n\t        console.log('parameterisation.component onTextInputChange');\n\t        this.textInputsValid = testInputStatus;\n\t        this.checkSubmitButton();\n\t    };\n\t    ParameteriseComponent.prototype.checkSubmitButton = function () {\n\t        console.log('parameterisation.component checkSubmitButton');\n\t        if (this.dataInFlight || !this.textInputsValid) {\n\t            this.submitDisabled = true;\n\t        }\n\t        else {\n\t            this.submitDisabled = false;\n\t        }\n\t    };\n\t    ParameteriseComponent.prototype.parameterisationServerChange = function (serverUrl) {\n\t        console.log('parameterisation.component parameterisationServerChange');\n\t        this.dataPersistenceService.saveServerUrl('parameterisation', serverUrl)\n\t            .then(function () {\n\t        });\n\t    };\n\t    __decorate([\n\t        core_1.ViewChild('textboxInputs'), \n\t        __metadata('design:type', x_y_input_component_1.XYInputComponent)\n\t    ], ParameteriseComponent.prototype, \"textboxInputs\", void 0);\n\t    ParameteriseComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-parameterise',\n\t            template: __webpack_require__(146),\n\t        }), \n\t        __metadata('design:paramtypes', [electron_api_service_1.ElectronApiService, title_service_1.TitleService, router_1.Router, model_data_1.ModelData, data_persistence_service_1.DataPersistenceService, specifications_data_service_1.MachineSpecificationsService, core_1.ApplicationRef])\n\t    ], ParameteriseComponent);\n\t    return ParameteriseComponent;\n\t}());\n\texports.ParameteriseComponent = ParameteriseComponent;\n\n\n/***/ },\n/* 128 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar Coordinates = (function () {\n\t    function Coordinates() {\n\t        this.x = [0];\n\t        this.y = [0];\n\t    }\n\t    return Coordinates;\n\t}());\n\texports.Coordinates = Coordinates;\n\tvar Parameterisation = (function () {\n\t    function Parameterisation() {\n\t        this.insert = new Coordinates();\n\t        this.circle = new Coordinates();\n\t        this.ellipse = new Coordinates();\n\t    }\n\t    Parameterisation.prototype.hash = function (input) {\n\t        var hash = 0, i, chr, len;\n\t        if (input.length === 0)\n\t            return hash;\n\t        for (i = 0, len = input.length; i < len; i++) {\n\t            chr = input.charCodeAt(i);\n\t            hash = ((hash << 5) - hash) + chr;\n\t            hash |= 0; // Convert to 32bit integer\n\t        }\n\t        return hash;\n\t    };\n\t    Parameterisation.prototype.insertUpdated = function () {\n\t        if (this.insert != null) {\n\t            this.id = this.hash('{\"x\":' + JSON.stringify(this.insert.x) + ',' +\n\t                '\"y\":' + JSON.stringify(this.insert.y) +\n\t                '}');\n\t        }\n\t        else {\n\t            throw new RangeError('Insert was not defined. Cannot run insert updated.');\n\t        }\n\t    };\n\t    Parameterisation.prototype.reset = function () {\n\t        this.id = null;\n\t        for (var _i = 0, _a = ['insert', 'circle', 'ellipse']; _i < _a.length; _i++) {\n\t            var key = _a[_i];\n\t            this[key] = new Coordinates();\n\t            this[key].x = [0];\n\t            this[key].y = [0];\n\t        }\n\t        this.width = null;\n\t        this.length = null;\n\t    };\n\t    return Parameterisation;\n\t}());\n\texports.Parameterisation = Parameterisation;\n\tvar InsertData = (function () {\n\t    function InsertData(inputId) {\n\t        this.parameterisation = new Parameterisation();\n\t        if (inputId != null) {\n\t            this.id = inputId;\n\t        }\n\t        else {\n\t            this.id = 0;\n\t        }\n\t    }\n\t    InsertData.prototype.reset = function () {\n\t        this.machine = null;\n\t        this.parameterisation.reset();\n\t        this.energy = null;\n\t        this.applicator = null;\n\t        this.ssd = null;\n\t        this.measuredFactor = null;\n\t    };\n\t    InsertData.prototype.fillFromObject = function (object) {\n\t        if (object == null) {\n\t            this.reset();\n\t        }\n\t        else {\n\t            for (var _i = 0, _a = ['machine', 'energy', 'applicator', 'ssd', 'measuredFactor']; _i < _a.length; _i++) {\n\t                var key = _a[_i];\n\t                this[key] = object[key];\n\t            }\n\t            this.parameterisation.insert = object['parameterisation'].insert;\n\t            this.parameterisation.insertUpdated();\n\t            this.parameterisation.circle = object['parameterisation'].circle;\n\t            this.parameterisation.ellipse = object['parameterisation'].ellipse;\n\t            this.parameterisation.width = object['parameterisation'].width;\n\t            this.parameterisation.length = object['parameterisation'].length;\n\t        }\n\t    };\n\t    return InsertData;\n\t}());\n\texports.InsertData = InsertData;\n\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar http_1 = __webpack_require__(28);\n\t__webpack_require__(130);\n\tvar ElectronApiService = (function () {\n\t    function ElectronApiService(http) {\n\t        this.http = http;\n\t        // private parameteriseURL = 'http://electronapi.simonbiggs.net/parameterise';\n\t        // private modelURL = 'http://electronapi.simonbiggs.net/model';\n\t        this.wakeUpURL = 'http://electronapi.simonbiggs.net/wakeup';\n\t    }\n\t    // Initial get from server to wake it up\n\t    ElectronApiService.prototype.wakeUpServer = function () {\n\t        return this.http\n\t            .get(this.wakeUpURL).toPromise();\n\t    };\n\t    ElectronApiService.prototype.sendToServer = function (URL, input) {\n\t        return this.http\n\t            .post(URL, input)\n\t            .toPromise()\n\t            .then(function (res) {\n\t            var nan = null;\n\t            return res.json();\n\t        })\n\t            .catch(this.handleError);\n\t    };\n\t    ElectronApiService.prototype.handleError = function (error) {\n\t        console.error('An error occurred', error);\n\t        return Promise.reject(error.message || error);\n\t    };\n\t    ElectronApiService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http])\n\t    ], ElectronApiService);\n\t    return ElectronApiService;\n\t}());\n\texports.ElectronApiService = ElectronApiService;\n\n\n/***/ },\n/* 130 */,\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar TitleService = (function () {\n\t    function TitleService() {\n\t        this.title = 'Home';\n\t    }\n\t    TitleService.prototype.getTitle = function () {\n\t        return this.title;\n\t    };\n\t    TitleService.prototype.setTitle = function (title) {\n\t        this.title = title;\n\t    };\n\t    TitleService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], TitleService);\n\t    return TitleService;\n\t}());\n\texports.TitleService = TitleService;\n\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\t// import Dexie from 'dexie'\n\tvar dexie_service_1 = __webpack_require__(133);\n\tvar current_settings_1 = __webpack_require__(140);\n\tvar insert_data_1 = __webpack_require__(128);\n\tvar DataPersistenceService = (function () {\n\t    function DataPersistenceService() {\n\t    }\n\t    DataPersistenceService.prototype.loadCurrentSettings = function () {\n\t        console.log('data-persistence.service loadCurrentSettings');\n\t        var currentSettings = new current_settings_1.CurrentSettings();\n\t        return dexie_service_1.db.currentSettings.toArray()\n\t            .then(function (result) {\n\t            console.log('data-persistence.service loadCurrentSettings db.currentSettings.toArray() promise complete');\n\t            if (result.length == 0) {\n\t                for (var _i = 0, _a = ['machine', 'energy', 'applicator', 'ssd']; _i < _a.length; _i++) {\n\t                    var key = _a[_i];\n\t                    currentSettings[key] = null;\n\t                }\n\t            }\n\t            else {\n\t                currentSettings = result[0];\n\t            }\n\t            // console.log(currentSettings)\n\t            return currentSettings;\n\t        });\n\t    };\n\t    DataPersistenceService.prototype.saveCurrentSettings = function (currentSettings) {\n\t        console.log('data-persistence.service saveCurrentSettings');\n\t        return dexie_service_1.db.currentSettings.put(currentSettings)\n\t            .then(function () {\n\t            console.log('data-persistence.service saveCurrentSettings db.currentSettings.put(currentSettings) promise complete');\n\t        });\n\t    };\n\t    DataPersistenceService.prototype.loadSpecificationsData = function () {\n\t        console.log('data-persistence.service loadSpecificationsData');\n\t        return dexie_service_1.db.specifications.toArray()\n\t            .then(function (result) {\n\t            console.log('data-persistence.service loadSpecificationsData db.specifications.toArray() promise complete');\n\t            return result;\n\t        });\n\t    };\n\t    DataPersistenceService.prototype.saveSpecificationsData = function (specification) {\n\t        console.log('data-persistence.service saveSpecificationsData');\n\t        return dexie_service_1.db.specifications.put(specification)\n\t            .then(function () {\n\t            console.log(\"data-persistence.service saveSpecificationsData db.specifications.put(specification) promise complete\");\n\t        });\n\t    };\n\t    DataPersistenceService.prototype.loadModelData = function (modelData, currentSettings) {\n\t        console.log('data-persistence.service loadModelData');\n\t        var storageKey = currentSettings.returnKey();\n\t        modelData.machineSettingsKey = storageKey;\n\t        return dexie_service_1.db.modelData.get(storageKey)\n\t            .then(function (result) {\n\t            console.log(\"data-persistence.service loadModelData db.modelData.get(storageKey) promise complete\");\n\t            if (result == null) {\n\t                modelData.fillFromObject({});\n\t            }\n\t            else {\n\t                modelData.fillFromObject(result);\n\t            }\n\t        });\n\t    };\n\t    DataPersistenceService.prototype.saveModelData = function (modelData, currentSettings) {\n\t        console.log('data-persistence.service saveModelData');\n\t        var storageKey = currentSettings.returnKey();\n\t        modelData.machineSettingsKey = storageKey;\n\t        var modelDataLite = modelData.exportLite();\n\t        return dexie_service_1.db.modelData.put(modelDataLite)\n\t            .then(function () {\n\t            console.log(\"data-persistence.service loadModelData db.modelData.put(modelDataLite) promise complete\");\n\t        });\n\t    };\n\t    DataPersistenceService.prototype.loadParameterisationCache = function (parameterisation) {\n\t        console.log('data-persistence.service loadParameterisationCache');\n\t        return dexie_service_1.db.parameterisationCache.get(parameterisation.id)\n\t            .then(function (result) {\n\t            console.log(\"data-persistence.service loadParameterisationCache db.parameterisationCache.get(parameterisation.parameterisationKey) promise complete\");\n\t            if (result == null) {\n\t                for (var _i = 0, _a = ['width', 'length', 'circle', 'ellipse']; _i < _a.length; _i++) {\n\t                    var key = _a[_i];\n\t                    parameterisation[key] = null;\n\t                }\n\t            }\n\t            else {\n\t                for (var _b = 0, _c = ['width', 'length', 'circle', 'ellipse']; _b < _c.length; _b++) {\n\t                    var key = _c[_b];\n\t                    parameterisation[key] = result[key];\n\t                }\n\t            }\n\t        });\n\t        // let localStorageObject = JSON.parse(localStorage.getItem(parameterisation.parameterisationKey))\n\t        // if (localStorageObject) {\n\t        //   for (let key of ['circle', 'ellipse']) {\n\t        //     parameterisation[key] = new Coordinates()\n\t        //     if (localStorageObject[key]) {\n\t        //       parameterisation[key].x = localStorageObject[key].x\n\t        //       parameterisation[key].y = localStorageObject[key].y\n\t        //     }\n\t        //     else {\n\t        //       parameterisation[key].x = [0]\n\t        //       parameterisation[key].y = [0] \n\t        //     }\n\t        //   }\n\t        //   parameterisation.width = localStorageObject['width']\n\t        //   parameterisation.length = localStorageObject['length']\n\t        // }\n\t        // else {\n\t        //   for (let key of ['width', 'length', 'circle', 'ellipse']) {\n\t        //     parameterisation[key] = null\n\t        //   }\n\t        // }\n\t    };\n\t    DataPersistenceService.prototype.saveParameterisationCache = function (parameterisation) {\n\t        console.log('data-persistence.service saveParameterisationCache');\n\t        return dexie_service_1.db.parameterisationCache.put(parameterisation)\n\t            .then(function () {\n\t            console.log(\"data-persistence.service saveParameterisationCache db.parameterisationCache.put(parameterisation) promise complete\");\n\t        });\n\t        // localStorage.setItem(\n\t        //   JSON.stringify(parameterisation.insert), \n\t        //   JSON.stringify(parameterisation)\n\t        // )\n\t    };\n\t    DataPersistenceService.prototype.loadCurrentInsertData = function (insertData) {\n\t        console.log('data-persistence.service loadCurrentInsertData');\n\t        // This is required because the coodinate inputs to the text boxes are not using ngModel.\n\t        // This work around is brittle.\n\t        var insert = insertData.parameterisation.insert;\n\t        // let parameterisation = new Parameterisation()\n\t        // parameterisation.insert = insertData.parameterisation.insert\n\t        // parameterisation.insertUpdated()\n\t        // insertData.parameterisation = parameterisation\n\t        // this.loadParameterisationCache(insertData.parameterisation)\n\t        return dexie_service_1.db.currentInsertData.get(0)\n\t            .then(function (result) {\n\t            if (result == null) {\n\t                insertData.reset();\n\t            }\n\t            else {\n\t                insert.x = result.parameterisation.insert.x;\n\t                insert.y = result.parameterisation.insert.y;\n\t                insertData.fillFromObject(result);\n\t            }\n\t            insertData.parameterisation.insert = insert;\n\t        });\n\t        // let localStorageInsertDataString = localStorage['last_insertData']\n\t        // let object = JSON.parse(localStorageInsertDataString)\n\t        // if (object != null) {      \n\t        //   insertData.fillFromObject(object)\n\t        //   this.loadParameterisationCache(insertData.parameterisation)\n\t        // }\n\t    };\n\t    DataPersistenceService.prototype.saveCurrentInsertData = function (insertData) {\n\t        console.log('data-persistence.service saveCurrentInsertData');\n\t        return dexie_service_1.db.currentInsertData.put(insertData)\n\t            .then(function () {\n\t            console.log(\"data-persistence.service saveCurrentInsertData db.currentInsertData.put(insertData)) promise complete\");\n\t        });\n\t        // localStorage.setItem(\n\t        //   \"last_insertData\", JSON.stringify(insertData))\n\t    };\n\t    DataPersistenceService.prototype.loadServerUrl = function (purpose) {\n\t        console.log('data-persistence.service loadServerUrl');\n\t        return dexie_service_1.db.serverURLs.get(purpose);\n\t        // let url: string\n\t        // if (purpose == 'parameterisation') {\n\t        //   url = localStorage.getItem(\"parameteriseURL\")\n\t        //   if (url == null) {\n\t        //     url = 'http://electronapi.simonbiggs.net/parameterise';\n\t        //   }\n\t        // }\n\t        // if (purpose == 'model') {\n\t        //   url = localStorage.getItem(\"modelURL\")\n\t        //   if (url == null) {\n\t        //     url = 'http://electronapi.simonbiggs.net/model';\n\t        //   }\n\t        // }\n\t        // if (url == null) {\n\t        //   throw new Error(\"Url was null\")\n\t        // }\n\t        // return url\n\t    };\n\t    DataPersistenceService.prototype.saveServerUrl = function (purpose, url) {\n\t        console.log('data-persistence.service saveServerUrl');\n\t        var serverUrl = new dexie_service_1.ServerURLs();\n\t        serverUrl.purpose = purpose;\n\t        serverUrl.url = url;\n\t        return dexie_service_1.db.serverURLs.put(serverUrl);\n\t        // if (purpose == 'parameterisation') {\n\t        //   localStorage.setItem(\"parameteriseURL\", url)\n\t        // }\n\t        // if (purpose == 'model') {\n\t        //   localStorage.setItem(\"modelURL\", url)\n\t        // }\n\t    };\n\t    DataPersistenceService.prototype.loadDicomInsertList = function () {\n\t        var _this = this;\n\t        console.log('data-persistence.service loadDicomInsertList');\n\t        return dexie_service_1.db.dicomInsertList.toArray()\n\t            .then(function (result) {\n\t            console.log('data-persistence.service loadDicomInsertList db.dicomInsertList.toArray() promise complete');\n\t            for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {\n\t                var insertData = result_1[_i];\n\t                var parameterisation = new insert_data_1.Parameterisation();\n\t                parameterisation.insert = insertData.parameterisation.insert;\n\t                parameterisation.insertUpdated();\n\t                insertData.parameterisation = parameterisation;\n\t                _this.loadParameterisationCache(insertData.parameterisation);\n\t            }\n\t            return result;\n\t        });\n\t        // let insertList: InsertData[]\n\t        // let insertListString = localStorage.getItem('dicom_insertList')\n\t        // if (insertListString) {\n\t        //   insertList = JSON.parse(insertListString);\n\t        // }\n\t        // else {\n\t        //   insertList = []\n\t        // }\n\t        // return insertList\n\t    };\n\t    DataPersistenceService.prototype.saveDicomInsertList = function (insertList) {\n\t        console.log('data-persistence.service saveDicomInsertList');\n\t        return dexie_service_1.db.dicomInsertList.bulkPut(insertList)\n\t            .then(function () {\n\t            console.log('data-persistence.service saveDicomInsertList db.dicomInsertList.bulkPut(insertList) promise complete');\n\t        });\n\t        // localStorage.setItem('dicom_insertList', JSON.stringify(insertList));\n\t    };\n\t    DataPersistenceService.prototype.jsonTransform = function (input) {\n\t        console.log('data-persistence.service jsonTransform');\n\t        var jsonText = JSON.stringify(input, null, 2);\n\t        jsonText = jsonText.replace(/,\\s*(-?\\d+(\\.\\d+)?)/g, \", $1\");\n\t        jsonText = jsonText.replace(/\\n/g, \"\\n  \");\n\t        return jsonText;\n\t    };\n\t    DataPersistenceService.prototype.databaseDump = function () {\n\t        var _this = this;\n\t        console.log('data-persistence.service databaseDump');\n\t        var schemaString = \"\";\n\t        var tablesString = \"\";\n\t        var tableDumps = {};\n\t        var stringDump = \"\";\n\t        var promiseList = [];\n\t        dexie_service_1.db.tables.forEach(function (table, i) {\n\t            var primKeyAndIndexes = [table.schema.primKey].concat(table.schema.indexes);\n\t            var schemaSyntax = primKeyAndIndexes.map(function (index) { return index.src; }).join(', ');\n\t            schemaString = schemaString.concat(\"\\n\" + \"      \\\"\" + table.name + \"\\\": \" + \"\\\"\" +\n\t                schemaSyntax + \"\\\"\" + (i < dexie_service_1.db.tables.length - 1 ? \",\" : \"\"));\n\t            tableDumps[table.name] = {};\n\t            promiseList.push(table.toArray(function (objectArray) {\n\t                tableDumps[table.name] = objectArray;\n\t            }));\n\t        });\n\t        return Promise.all(promiseList)\n\t            .then(function () {\n\t            stringDump = \"{\\n  \\\"databaseDetails\\\": {\\n    \\\"name\\\": \\\"\" + dexie_service_1.db.name + \"\\\",\\n    \\\"version\\\": \" + dexie_service_1.db.verno + \",\\n    \\\"schema\\\": {\" + schemaString + \"\\n    }\\n  },\\n  \\\"databaseContents\\\": \" + _this.jsonTransform(tableDumps) + \"\\n}\\n    \";\n\t            // console.log(stringDump)\n\t            return stringDump;\n\t        });\n\t    };\n\t    DataPersistenceService.prototype.emptyDatabase = function () {\n\t        console.log('data-persistence.service emptyDatabase');\n\t        var promiseList = [];\n\t        var pulledFromLocalStorage;\n\t        dexie_service_1.db.tables.forEach(function (table, i) {\n\t            promiseList.push(table.clear());\n\t        });\n\t        Promise.all(promiseList)\n\t            .then(function () {\n\t            pulledFromLocalStorage = {\n\t                id: 0,\n\t                pulledFromLocalStorage: true\n\t            };\n\t            dexie_service_1.db.pulledFromLocalStorage.add(pulledFromLocalStorage);\n\t        });\n\t    };\n\t    DataPersistenceService.prototype.appendJsonToDatabase = function (object) {\n\t        console.log('data-persistence.service appendJsonToDatabase');\n\t        var databaseContents = object['databaseContents'];\n\t        dexie_service_1.db.tables.forEach(function (table, i) {\n\t            table.bulkPut(databaseContents[table.name]);\n\t        });\n\t    };\n\t    DataPersistenceService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], DataPersistenceService);\n\t    return DataPersistenceService;\n\t}());\n\texports.DataPersistenceService = DataPersistenceService;\n\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar dexie_1 = __webpack_require__(134);\n\tvar insert_data_1 = __webpack_require__(128);\n\tvar model_data_1 = __webpack_require__(137);\n\tvar specifications_data_service_1 = __webpack_require__(139);\n\tvar current_settings_1 = __webpack_require__(140);\n\tvar PulledFromLocalStorage = (function () {\n\t    function PulledFromLocalStorage() {\n\t    }\n\t    return PulledFromLocalStorage;\n\t}());\n\texports.PulledFromLocalStorage = PulledFromLocalStorage;\n\tvar ServerURLs = (function () {\n\t    function ServerURLs() {\n\t    }\n\t    return ServerURLs;\n\t}());\n\texports.ServerURLs = ServerURLs;\n\tvar DexieDatabase = (function (_super) {\n\t    __extends(DexieDatabase, _super);\n\t    function DexieDatabase() {\n\t        var _this = this;\n\t        _super.call(this, \"DefaultDatabase\");\n\t        var db = this;\n\t        // db.delete()\n\t        db.version(1).stores({\n\t            specifications: 'machine, makeAndModel, energy, R50, applicator, ssd',\n\t            currentSettings: 'id, machine, energy, applicator, ssd',\n\t            currentInsertData: 'id, machine, parameterisation, energy, applicator, ssd, measuredFactor',\n\t            modelData: 'machineSettingsKey, measurement, model, predictions',\n\t            dicomInsertList: 'id, machine, parameterisation, energy, applicator, ssd, measuredFactor',\n\t            serverURLs: 'purpose, url',\n\t            parameterisationCache: 'id, insert, width, length, circle, ellipse',\n\t            pulledFromLocalStorage: 'id, pulledFromLocalStorage'\n\t        });\n\t        db.pulledFromLocalStorage.mapToClass(PulledFromLocalStorage);\n\t        db.modelData.mapToClass(model_data_1.ModelData);\n\t        db.specifications.mapToClass(specifications_data_service_1.MachineSpecification);\n\t        db.currentSettings.mapToClass(current_settings_1.CurrentSettings);\n\t        db.parameterisationCache.mapToClass(insert_data_1.Parameterisation);\n\t        db.currentInsertData.mapToClass(insert_data_1.InsertData);\n\t        db.serverURLs.mapToClass(ServerURLs);\n\t        db.dicomInsertList.mapToClass(insert_data_1.InsertData);\n\t        db.pulledFromLocalStorage.toArray()\n\t            .then(function (result) {\n\t            if (result[0] == null) {\n\t                _this.fillDatabaseFromLocalStorage();\n\t            }\n\t            else if (result[0].pulledFromLocalStorage == false) {\n\t                db.specifications.clear();\n\t                db.modelData.clear();\n\t                _this.fillDatabaseFromLocalStorage();\n\t            }\n\t        });\n\t    }\n\t    DexieDatabase.prototype.fillDatabaseFromLocalStorage = function () {\n\t        console.log('dexie.service fillDatabaseFromLocalStorage');\n\t        var specifications = this.loadSpecificationsFromLocalStorage();\n\t        var machineList = [];\n\t        for (var _i = 0, specifications_1 = specifications; _i < specifications_1.length; _i++) {\n\t            var specification = specifications_1[_i];\n\t            machineList.push(specification.machine);\n\t        }\n\t        machineList.sort();\n\t        for (var i = 0; i < machineList.length - 1; i++) {\n\t            if (machineList[i] == machineList[i + 1]) {\n\t                console.log(machineList);\n\t                throw new RangeError(\"Local storage specifications contain duplicate Machine IDs\");\n\t            }\n\t        }\n\t        var modelDataLiteArray = this.loadModelDataFromLocalStorage(specifications);\n\t        var machineSettingsKeys = [];\n\t        for (var _a = 0, modelDataLiteArray_1 = modelDataLiteArray; _a < modelDataLiteArray_1.length; _a++) {\n\t            var modelDataLite = modelDataLiteArray_1[_a];\n\t            machineSettingsKeys.push(modelDataLite.machineSettingsKey);\n\t        }\n\t        machineSettingsKeys.sort();\n\t        for (var i = 0; i < machineSettingsKeys.length - 1; i++) {\n\t            if (machineSettingsKeys[i] == machineSettingsKeys[i + 1]) {\n\t                throw new RangeError(\"Local storage specifications contain duplicate models\");\n\t            }\n\t        }\n\t        exports.db.specifications.bulkAdd(specifications)\n\t            .then(function () {\n\t            console.log('dexie.service fillDatabaseFromLocalStorage db.specification.bulkAdd(specifications) promise complete');\n\t            return exports.db.modelData.bulkAdd(modelDataLiteArray);\n\t        })\n\t            .then(function () {\n\t            console.log('dexie.service fillDatabaseFromLocalStorage db.modelData.bulkAdd(modelDataLiteArray) promise complete');\n\t            var pulledFromLocalStorage = {\n\t                id: 0,\n\t                pulledFromLocalStorage: true\n\t            };\n\t            exports.db.pulledFromLocalStorage.add(pulledFromLocalStorage);\n\t        });\n\t    };\n\t    DexieDatabase.prototype.testArrayOfStrings = function (input) {\n\t        console.log('dexie.service testArrayOfStrings');\n\t        if (input instanceof Array) {\n\t            input.forEach(function (item) {\n\t                if (typeof item !== 'string') {\n\t                    return false;\n\t                }\n\t            });\n\t            return true;\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    DexieDatabase.prototype.testArrayOfNumbers = function (input) {\n\t        console.log('dexie.service testArrayOfNumbers');\n\t        if (input instanceof Array) {\n\t            input.forEach(function (item) {\n\t                if (typeof item !== 'number') {\n\t                    return false;\n\t                }\n\t            });\n\t            return true;\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    DexieDatabase.prototype.loadSpecificationsFromLocalStorage = function () {\n\t        console.log('dexie.service loadSpecificationsFromLocalStorage');\n\t        var oldSpec = JSON.parse(localStorage.getItem(\"specifications\"));\n\t        var newSpec;\n\t        var newSpecArray = [];\n\t        var makeAndModel;\n\t        var energy;\n\t        var R50;\n\t        var applicator;\n\t        var ssd;\n\t        if (oldSpec != null) {\n\t            for (var _i = 0, _a = Object.keys(oldSpec); _i < _a.length; _i++) {\n\t                var machine = _a[_i];\n\t                makeAndModel = oldSpec[machine]['model'];\n\t                energy = oldSpec[machine]['energy'];\n\t                R50 = [];\n\t                for (var _b = 0, _c = oldSpec[machine]['energy']; _b < _c.length; _b++) {\n\t                    var energy_1 = _c[_b];\n\t                    R50.push(oldSpec[machine]['R50'][energy_1]);\n\t                }\n\t                applicator = oldSpec[machine]['applicator'];\n\t                ssd = oldSpec[machine]['ssd'];\n\t                if (makeAndModel !== undefined && typeof makeAndModel !== \"string\") {\n\t                    console.log(makeAndModel);\n\t                    throw new RangeError(\"Loaded makeAndModel type was not string\");\n\t                }\n\t                if (energy !== undefined && !this.testArrayOfNumbers(energy)) {\n\t                    console.log(energy);\n\t                    throw new RangeError(\"Loaded energy type was not number[]\");\n\t                }\n\t                if (R50 !== undefined && !this.testArrayOfNumbers(R50)) {\n\t                    console.log(R50);\n\t                    throw new RangeError(\"Loaded energy type was not number[]\");\n\t                }\n\t                if (applicator !== undefined && !this.testArrayOfStrings(applicator)) {\n\t                    console.log(applicator);\n\t                    throw new RangeError(\"Loaded applicator type was not string[]\");\n\t                }\n\t                if (ssd !== undefined && !this.testArrayOfNumbers(ssd)) {\n\t                    console.log(ssd);\n\t                    throw new RangeError(\"Loaded ssd type was not number[]\");\n\t                }\n\t                newSpec = {\n\t                    machine: machine,\n\t                    makeAndModel: makeAndModel,\n\t                    energy: energy,\n\t                    R50: R50,\n\t                    applicator: applicator,\n\t                    ssd: ssd\n\t                };\n\t                newSpecArray.push(newSpec);\n\t            }\n\t        }\n\t        return newSpecArray;\n\t    };\n\t    DexieDatabase.prototype.loadModelDataFromLocalStorage = function (specificationsArray) {\n\t        console.log('dexie.service loadModelDataFromLocalStorage');\n\t        var modelData;\n\t        var modelDataLiteArray = [];\n\t        var currentSettings = new current_settings_1.CurrentSettings();\n\t        for (var _i = 0, specificationsArray_1 = specificationsArray; _i < specificationsArray_1.length; _i++) {\n\t            var specification = specificationsArray_1[_i];\n\t            currentSettings.machine = specification.machine;\n\t            for (var _a = 0, _b = specification.energy; _a < _b.length; _a++) {\n\t                var energy = _b[_a];\n\t                currentSettings.energy = energy;\n\t                for (var _c = 0, _d = specification.applicator; _c < _d.length; _c++) {\n\t                    var applicator = _d[_c];\n\t                    currentSettings.applicator = applicator;\n\t                    for (var _e = 0, _f = specification.ssd; _e < _f.length; _e++) {\n\t                        var ssd = _f[_e];\n\t                        currentSettings.ssd = ssd;\n\t                        var parsedData = JSON.parse(localStorage.getItem(currentSettings.returnKey()));\n\t                        if (parsedData != null) {\n\t                            modelData = new model_data_1.ModelData();\n\t                            modelData.fillFromObject(parsedData);\n\t                            modelData.updateKey(currentSettings);\n\t                            modelDataLiteArray.push(modelData.exportLite());\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return modelDataLiteArray;\n\t    };\n\t    return DexieDatabase;\n\t}(dexie_1.default));\n\texports.DexieDatabase = DexieDatabase;\n\texports.db = new DexieDatabase();\n\n\n/***/ },\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar base_data_1 = __webpack_require__(138);\n\tvar AreaLengthConversion = (function (_super) {\n\t    __extends(AreaLengthConversion, _super);\n\t    function AreaLengthConversion() {\n\t        _super.apply(this, arguments);\n\t        this.width = [];\n\t        this.length = [];\n\t        this.area = [];\n\t        this.measuredFactor = [];\n\t    }\n\t    AreaLengthConversion.prototype.convertLengthToArea = function (width, length) {\n\t        console.log('model.data AreaLengthConversion convertLengthToArea');\n\t        var area = Math.PI * width * length / 4;\n\t        return Math.round(area * 10) / 10;\n\t    };\n\t    AreaLengthConversion.prototype.convertAreaToLength = function (width, area) {\n\t        console.log('model.data AreaLengthConversion convertAreaToLength');\n\t        var length = 4 * area / (Math.PI * width);\n\t        return Math.round(length * 10) / 10;\n\t    };\n\t    AreaLengthConversion.prototype.updateAreaFromLength = function () {\n\t        console.log('model.data AreaLengthConversion updateAreaFromLength');\n\t        var width;\n\t        var length;\n\t        var area;\n\t        this.area = [];\n\t        for (var i in this.length) {\n\t            width = this.width[i];\n\t            length = this.length[i];\n\t            area = this.convertLengthToArea(width, length);\n\t            this.area.push(area);\n\t        }\n\t    };\n\t    AreaLengthConversion.prototype.updateLengthFromArea = function () {\n\t        console.log('model.data AreaLengthConversion updateLengthFromArea');\n\t        var width;\n\t        var length;\n\t        var area;\n\t        this.length = [];\n\t        for (var i in this.area) {\n\t            width = this.width[i];\n\t            area = this.area[i];\n\t            length = this.convertAreaToLength(width, area);\n\t            this.length.push(length);\n\t        }\n\t    };\n\t    AreaLengthConversion.prototype.initialLengthAreaUpdate = function () {\n\t        console.log('model.data AreaLengthConversion initialLengthAreaUpdate');\n\t        if (this.length.length < this.area.length) {\n\t            this.updateLengthFromArea();\n\t        }\n\t        else {\n\t            this.updateAreaFromLength();\n\t        }\n\t    };\n\t    AreaLengthConversion = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], AreaLengthConversion);\n\t    return AreaLengthConversion;\n\t}(base_data_1.Base));\n\texports.AreaLengthConversion = AreaLengthConversion;\n\tvar ModelMeasurement = (function (_super) {\n\t    __extends(ModelMeasurement, _super);\n\t    function ModelMeasurement() {\n\t        _super.apply(this, arguments);\n\t        this.propNames = ['width', 'length', 'area', 'measuredFactor'];\n\t        this.keyConversions = {\n\t            'factor': 'measuredFactor'\n\t        };\n\t    }\n\t    ModelMeasurement = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], ModelMeasurement);\n\t    return ModelMeasurement;\n\t}(AreaLengthConversion));\n\texports.ModelMeasurement = ModelMeasurement;\n\tvar ModelGrid = (function (_super) {\n\t    __extends(ModelGrid, _super);\n\t    function ModelGrid() {\n\t        _super.apply(this, arguments);\n\t        this.propNames = ['width', 'length', 'predictedFactor'];\n\t        this.keyConversions = {\n\t            'factor': 'predictedFactor'\n\t        };\n\t        this.width = [];\n\t        this.length = [];\n\t        this.predictedFactor = [];\n\t    }\n\t    ModelGrid = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], ModelGrid);\n\t    return ModelGrid;\n\t}(base_data_1.Base));\n\texports.ModelGrid = ModelGrid;\n\tvar Predictions = (function (_super) {\n\t    __extends(Predictions, _super);\n\t    function Predictions() {\n\t        _super.apply(this, arguments);\n\t        this.propNames = ['width', 'length', 'area', 'measuredFactor', 'predictedFactor'];\n\t        this.predictedFactor = [];\n\t    }\n\t    Predictions = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], Predictions);\n\t    return Predictions;\n\t}(AreaLengthConversion));\n\texports.Predictions = Predictions;\n\tvar ModelData = (function () {\n\t    function ModelData() {\n\t        this.propNames = ['measurement', 'model', 'predictions'];\n\t        this.measurement = new ModelMeasurement();\n\t        this.model = new ModelGrid();\n\t        this.predictions = new Predictions();\n\t    }\n\t    ModelData.prototype.fillFromObject = function (object) {\n\t        console.log('model.data ModelData fillFromObject');\n\t        if (object == null) {\n\t            for (var _i = 0, _a = this.propNames; _i < _a.length; _i++) {\n\t                var propName = _a[_i];\n\t                this[propName].reset();\n\t            }\n\t        }\n\t        else {\n\t            for (var _b = 0, _c = this.propNames; _b < _c.length; _b++) {\n\t                var propName = _c[_b];\n\t                if (object[propName] == null) {\n\t                    this[propName].reset();\n\t                }\n\t                else {\n\t                    this[propName].fillFromObject(object[propName]);\n\t                }\n\t            }\n\t        }\n\t        this.measurement.initialLengthAreaUpdate();\n\t        this.predictions.initialLengthAreaUpdate();\n\t    };\n\t    ModelData.prototype.updateKey = function (currentSettings) {\n\t        this.machineSettingsKey = currentSettings.returnKey();\n\t    };\n\t    ModelData.prototype.exportLite = function () {\n\t        console.log('model.data ModelData exportLite');\n\t        var modelDataLite = {\n\t            machineSettingsKey: this.machineSettingsKey,\n\t            measurement: {\n\t                width: this.measurement.width,\n\t                length: this.measurement.length,\n\t                measuredFactor: this.measurement.measuredFactor\n\t            },\n\t            model: {\n\t                width: this.model.width,\n\t                length: this.model.length,\n\t                predictedFactor: this.model.predictedFactor\n\t            },\n\t            predictions: {\n\t                width: this.predictions.width,\n\t                length: this.predictions.length,\n\t                measuredFactor: this.predictions.measuredFactor,\n\t                predictedFactor: this.predictions.predictedFactor\n\t            }\n\t        };\n\t        return modelDataLite;\n\t    };\n\t    ModelData = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], ModelData);\n\t    return ModelData;\n\t}());\n\texports.ModelData = ModelData;\n\n\n/***/ },\n/* 138 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar Base = (function () {\n\t    function Base() {\n\t    }\n\t    Base.prototype.reset = function () {\n\t        for (var _i = 0, _a = this.propNames; _i < _a.length; _i++) {\n\t            var propName = _a[_i];\n\t            this[propName] = [];\n\t        }\n\t    };\n\t    Base.prototype.fillFromObject = function (object) {\n\t        object = this.updateOldKeyNames(object);\n\t        for (var _i = 0, _a = this.propNames; _i < _a.length; _i++) {\n\t            var propName = _a[_i];\n\t            if (object[propName] == null) {\n\t                this[propName] = [];\n\t            }\n\t            else {\n\t                this[propName] = object[propName];\n\t            }\n\t        }\n\t    };\n\t    Base.prototype.updateOldKeyNames = function (object) {\n\t        var newKey;\n\t        for (var oldKey in this.keyConversions) {\n\t            if (object[oldKey] != null && object[this.keyConversions[oldKey]] == null) {\n\t                newKey = this.keyConversions[oldKey];\n\t                Object.defineProperty(object, newKey, Object.getOwnPropertyDescriptor(object, oldKey));\n\t                delete object[oldKey];\n\t            }\n\t        }\n\t        return object;\n\t    };\n\t    return Base;\n\t}());\n\texports.Base = Base;\n\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar current_settings_1 = __webpack_require__(140);\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar MachineSpecification = (function () {\n\t    function MachineSpecification() {\n\t        this.machine = \"\";\n\t        this.makeAndModel = \"\";\n\t        this.energy = [];\n\t        this.R50 = [];\n\t        this.applicator = [];\n\t        this.ssd = [];\n\t    }\n\t    MachineSpecification = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], MachineSpecification);\n\t    return MachineSpecification;\n\t}());\n\texports.MachineSpecification = MachineSpecification;\n\tvar MachineSpecificationsService = (function () {\n\t    function MachineSpecificationsService(currentSettings) {\n\t        this.currentSettings = currentSettings;\n\t        this.dataPersistenceService = new data_persistence_service_1.DataPersistenceService();\n\t    }\n\t    MachineSpecificationsService.prototype.checkInsertSettingsExist = function (insertData) {\n\t        var specification = this.returnMachineSpecification(insertData.machine);\n\t        console.log(specification);\n\t        if (specification.energy.indexOf(Number(insertData.energy)) > -1 &&\n\t            specification.applicator.indexOf(String(insertData.applicator)) > -1 &&\n\t            specification.ssd.indexOf(Number(insertData.ssd)) > -1) {\n\t            return true;\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    MachineSpecificationsService.prototype.doesMachineExist = function (machineID) {\n\t        if (this.machineList.indexOf(machineID) > -1) {\n\t            return true;\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    MachineSpecificationsService.prototype.returnMachineSpecification = function (machineID) {\n\t        var machineSpecification;\n\t        var index;\n\t        index = this.machineList.indexOf(machineID);\n\t        if (index == -1) {\n\t            // throw new RangeError(\"Requested machine does not exist\")\n\t            machineSpecification = null;\n\t        }\n\t        else {\n\t            machineSpecification = this.specifications[index];\n\t        }\n\t        return machineSpecification;\n\t    };\n\t    MachineSpecificationsService.prototype.returnCurrentR50 = function (energyLookup) {\n\t        var index;\n\t        index = this.currentSpecification.energy.indexOf(energyLookup);\n\t        if (index == -1) {\n\t            throw new RangeError(\"Requested energy is not within the current specification\");\n\t        }\n\t        return this.currentSpecification.R50[index];\n\t    };\n\t    MachineSpecificationsService.prototype.loadData = function () {\n\t        var _this = this;\n\t        console.log('specifications-data.service loadData');\n\t        return this.dataPersistenceService.loadCurrentSettings()\n\t            .then(function (currentSettings) {\n\t            console.log('specifications-data.service loadData this.dataPersistenceService.loadCurrentSettings() promise complete');\n\t            _this.currentSettings = currentSettings;\n\t            return _this.dataPersistenceService.loadSpecificationsData();\n\t        })\n\t            .then(function (specificationArray) {\n\t            console.log('specifications-data.service loadData this.dataPersistenceService.loadSpecificationsData() promise complete');\n\t            _this.specifications = specificationArray;\n\t            _this.updateSpecifications();\n\t        });\n\t    };\n\t    MachineSpecificationsService.prototype.updateSpecifications = function () {\n\t        console.log('specifications-data.service updateSpecifications');\n\t        if (this.specifications == null) {\n\t            this.specifications = [];\n\t            this.machineList = [];\n\t        }\n\t        else {\n\t            this.updateMachineList();\n\t            this.updateCurrentSpecification();\n\t        }\n\t    };\n\t    MachineSpecificationsService.prototype.updateMachineList = function () {\n\t        console.log('specifications-data.service updateMachineList');\n\t        this.machineList = [];\n\t        for (var _i = 0, _a = this.specifications; _i < _a.length; _i++) {\n\t            var specification = _a[_i];\n\t            this.machineList.push(specification.machine);\n\t        }\n\t    };\n\t    MachineSpecificationsService.prototype.updateCurrentSpecification = function () {\n\t        console.log('specifications-data.service updateCurrentSpecification');\n\t        var machineSpecification;\n\t        machineSpecification = this.returnMachineSpecification(this.currentSettings.machine);\n\t        if (machineSpecification == null) {\n\t            this.currentSpecification = this.specifications[0];\n\t            this.currentSettings.machine = this.machineList[0];\n\t        }\n\t        else {\n\t            this.currentSpecification = machineSpecification;\n\t        }\n\t        this.refreshCurrentSettings();\n\t        // console.warn(this.currentIndex)\n\t        // console.warn(this.specifications)\n\t        // console.warn(this.currentSpecification)\n\t    };\n\t    MachineSpecificationsService.prototype.refreshCurrentSettings = function () {\n\t        console.log('specifications-data.service refreshCurrentSettings');\n\t        if (this.currentSpecification != null) {\n\t            for (var _i = 0, _a = [\"energy\", \"applicator\", \"ssd\"]; _i < _a.length; _i++) {\n\t                var item = _a[_i];\n\t                if (this.currentSpecification[item] == null) {\n\t                    this.currentSettings[item] = null;\n\t                }\n\t                else {\n\t                    if (this.currentSpecification[item].length > 0) {\n\t                        if (this.currentSpecification[item].indexOf(this.currentSettings[item]) == -1) {\n\t                            this.currentSettings[item] = this.currentSpecification[item][0];\n\t                        }\n\t                    }\n\t                    else {\n\t                        this.currentSettings[item] = null;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        else {\n\t            for (var _b = 0, _c = [\"energy\", \"applicator\", \"ssd\"]; _b < _c.length; _b++) {\n\t                var item = _c[_b];\n\t                this.currentSettings[item] = null;\n\t            }\n\t        }\n\t        this.dataPersistenceService.saveCurrentSettings(this.currentSettings);\n\t    };\n\t    MachineSpecificationsService.prototype.newMachine = function (newMachineID, newMakeAndModel) {\n\t        console.log('specifications-data.service newMachine');\n\t        if (this.machineList.indexOf(newMachineID) != -1) {\n\t            throw new RangeError(\"This 'new' machine already exists\");\n\t        }\n\t        var newSpecification = new MachineSpecification();\n\t        newSpecification.machine = newMachineID;\n\t        newSpecification.makeAndModel = newMakeAndModel;\n\t        this.specifications.push(newSpecification);\n\t        this.updateMachineList();\n\t        this.changeMachine(newMachineID);\n\t    };\n\t    MachineSpecificationsService.prototype.changeMachine = function (swapToMachineID) {\n\t        console.log('specifications-data.service changeMachine');\n\t        this.currentSettings.machine = swapToMachineID;\n\t        this.updateCurrentSpecification();\n\t    };\n\t    MachineSpecificationsService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [current_settings_1.CurrentSettings])\n\t    ], MachineSpecificationsService);\n\t    return MachineSpecificationsService;\n\t}());\n\texports.MachineSpecificationsService = MachineSpecificationsService;\n\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar CurrentSettings = (function () {\n\t    function CurrentSettings() {\n\t        this.id = 0;\n\t        this.machine = null;\n\t        this.energy = null;\n\t        this.applicator = null;\n\t        this.ssd = null;\n\t    }\n\t    CurrentSettings.prototype.returnKey = function () {\n\t        return ('{\"machine\":' + JSON.stringify(String(this.machine)) + ',' +\n\t            '\"energy\":' + JSON.stringify(Number(this.energy)) + ',' +\n\t            '\"applicator\":' + JSON.stringify(String(this.applicator)) + ',' +\n\t            '\"ssd\":' + JSON.stringify(Number(this.ssd)) +\n\t            '}');\n\t    };\n\t    CurrentSettings = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], CurrentSettings);\n\t    return CurrentSettings;\n\t}());\n\texports.CurrentSettings = CurrentSettings;\n\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar insert_data_1 = __webpack_require__(128);\n\tvar text_input_control_1 = __webpack_require__(142);\n\tvar XYInputComponent = (function () {\n\t    function XYInputComponent() {\n\t        this.textboxLabels = {\n\t            x: \"X coordinates (cm @iso)\",\n\t            y: \"Y coordinates (cm @iso)\"\n\t        };\n\t        this.disabled = false;\n\t        this.rows = 4;\n\t        this.validTextBoxChange = new core_1.EventEmitter();\n\t        this.texboxValidCheck = new core_1.EventEmitter();\n\t    }\n\t    XYInputComponent.prototype.ngOnInit = function () {\n\t        this.textInputControl = new text_input_control_1.TextInputControl(['x', 'y'], this.dataInputs);\n\t        this.textInputControl.updateAllTextboxInputs();\n\t    };\n\t    XYInputComponent.prototype.ngDoCheck = function () {\n\t        if (this.triggerUpdate) {\n\t            this.textInputControl.updateAllTextboxInputs();\n\t            // console.log(this.triggerUpdate)\n\t            this.triggerUpdate = false;\n\t        }\n\t    };\n\t    XYInputComponent.prototype.onTextboxChange = function (key, newInput) {\n\t        var oldValid = this.textInputControl.textboxValid[key];\n\t        this.textInputControl.validateTextboxInput(key, newInput);\n\t        if (this.textInputControl.textboxValid[key] != oldValid) {\n\t            this.texboxValidCheck.emit(this.textInputControl.checkAllValid());\n\t        }\n\t        if (this.textInputControl.textboxValid[key]) {\n\t            this.validTextBoxChange.emit();\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], XYInputComponent.prototype, \"textboxLabels\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', insert_data_1.Coordinates)\n\t    ], XYInputComponent.prototype, \"dataInputs\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], XYInputComponent.prototype, \"triggerUpdate\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], XYInputComponent.prototype, \"disabled\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], XYInputComponent.prototype, \"rows\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], XYInputComponent.prototype, \"validTextBoxChange\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], XYInputComponent.prototype, \"texboxValidCheck\", void 0);\n\t    XYInputComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-x-y-input',\n\t            template: __webpack_require__(144)\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], XYInputComponent);\n\t    return XYInputComponent;\n\t}());\n\texports.XYInputComponent = XYInputComponent;\n\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar sanitise_validation_1 = __webpack_require__(143);\n\tvar TextInputControl = (function () {\n\t    function TextInputControl(inputNames, dataInputs) {\n\t        this.inputNames = inputNames;\n\t        this.dataInputs = dataInputs;\n\t        this.textboxInput = {};\n\t        this.textboxValid = {};\n\t        for (var _i = 0, _a = this.inputNames; _i < _a.length; _i++) {\n\t            var key = _a[_i];\n\t            this.textboxInput[key] = \"\";\n\t            this.textboxValid[key] = true;\n\t        }\n\t    }\n\t    TextInputControl.prototype.updateAllTextboxInputs = function () {\n\t        for (var _i = 0, _a = this.inputNames; _i < _a.length; _i++) {\n\t            var key = _a[_i];\n\t            this.updateTextboxInput(key);\n\t        }\n\t    };\n\t    TextInputControl.prototype.updateTextboxInput = function (key) {\n\t        this.textboxInput[key] = String(this.dataInputs[key])\n\t            .replace(/,/g, ', ');\n\t    };\n\t    TextInputControl.prototype.validateTextboxInput = function (key, newInput) {\n\t        this.textboxValid[key] = false;\n\t        try {\n\t            if (sanitise_validation_1.validateInput(newInput)) {\n\t                this.dataInputs[key] = eval('[' + newInput.replace(/[,;\\n\\t]\\s*/g, ', ') + ']');\n\t                this.textboxValid[key] = true;\n\t            }\n\t        }\n\t        catch (err) {\n\t            console.log(err);\n\t        }\n\t    };\n\t    TextInputControl.prototype.checkAllValid = function () {\n\t        for (var _i = 0, _a = this.inputNames; _i < _a.length; _i++) {\n\t            var key = _a[_i];\n\t            if (!this.textboxValid[key]) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    };\n\t    return TextInputControl;\n\t}());\n\texports.TextInputControl = TextInputControl;\n\n\n/***/ },\n/* 143 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tfunction validateInput(input) {\n\t    // return /^(-?\\d*(\\.\\d+)?[,;\\s]+)*-?\\d*(\\.\\d+)?[,;\\s]*$/.test(input)\n\t    return /^[-\\d\\.,;\\sNa]*$/.test(input);\n\t}\n\texports.validateInput = validateInput;\n\n\n/***/ },\n/* 144 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div *ngFor=\\\"let key of textInputControl.inputNames\\\">\\n  <mdl-textfield \\n    type=\\\"text\\\"\\n    [label]=\\\"textboxLabels[key]\\\"\\n    [(ngModel)]=\\\"textInputControl.textboxInput[key]\\\"\\n    (input)=\\\"onTextboxChange(key, $event.target.value)\\\"\\n    [rows]=rows\\n    floating-label\\n    [disabled]=disabled\\n    [style.width]=\\\"'100%'\\\"></mdl-textfield>\\n  <p *ngIf=\\\"!textInputControl.textboxValid[key]\\\">\\n    The {{key}} input is invalid\\n  </p>\\n</div>\";\n\n/***/ },\n/* 145 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar insert_data_1 = __webpack_require__(128);\n\tvar insert = {\n\t    x: [\n\t        0.99, -0.14, -1.0, -1.73, -2.56, -3.17, -3.49,\n\t        -3.57, -3.17, -2.52, -1.76, -1.04, -0.17,\n\t        0.77, 1.63, 2.36, 2.79, 2.91, 3.04, 3.22,\n\t        3.34, 3.37, 3.08, 2.54, 1.88, 1.02, 0.99],\n\t    y: [\n\t        5.05, 4.98, 4.42, 3.24, 1.68, 0.6, -0.64,\n\t        -1.48, -2.38, -3.77, -4.81, -5.26, -5.51,\n\t        -5.58, -5.23, -4.64, -3.77, -2.77, -1.68,\n\t        -0.29, 1.23, 2.68, 3.8, 4.6, 5.01, 5.08,\n\t        5.05]\n\t};\n\tvar parameterisation = new insert_data_1.Parameterisation();\n\tparameterisation.reset();\n\tparameterisation.insert = insert;\n\texports.DEMO_PARAMETERISE_INPUT = parameterisation;\n\n\n/***/ },\n/* 146 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\" style=\\\"display: flex; align-items: center; flex-flow: row wrap;\\\">\\n    <h5>Equivalent ellipse parameterisation</h5>\\n    <p>This is for the determination of equivalent ellipse widths and lengths as defined in the paper method.</p>\\n\\n    <p>\\n      To begin shape parameterisation you need to define your insert shape. \\n      This can be done by editing the x and y coordinates within the text boxes below or by using a shape       \\n      <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n        pulled from a dicom file.\\n      </a>\\n    </p>\\n\\n    <p>\\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\\n      This web app should handle copying and pasting from a range of sources (including excel).\\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\\n    </p>\\n\\n    <my-x-y-input #textboxInputs\\n      [dataInputs]=\\\"insertData.parameterisation.insert\\\"\\n      [triggerUpdate]=false\\n      [rows]=4\\n      [disabled]=\\\"dataInFlight\\\"\\n      (texboxValidCheck)=\\\"textInputsValid=$event\\\"\\n      (validTextBoxChange)=onValidTextboxChange()\\n      [style.width]=\\\"'100%'\\\"></my-x-y-input>\\n\\n    <!--<mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"X coordinates (cm @iso)\\\"\\n      [(ngModel)]=\\\"textAreaX\\\"\\n      (input)=\\\"inputTextAreaX($event.target.value)\\\"\\n      rows=4\\n      floating-label\\n      [disabled]=\\\"dataInFlight\\\"\\n      [style.width]=\\\"'100%'\\\"></mdl-textfield>\\n\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Y coordinates (cm @iso)\\\"\\n      [(ngModel)]=\\\"textAreaY\\\"\\n      (input)=\\\"inputTextAreaY($event.target.value)\\\"\\n      rows=4\\n      floating-label\\n      [disabled]=\\\"dataInFlight\\\"\\n      [style.width]=\\\"'100%'\\\"></mdl-textfield>-->\\n\\n    <p *ngIf=\\\"!equalLengths\\\">\\n      The x and y coordinate lengths need to be the same as each other.\\n    </p>\\n\\n    <p *ngIf=\\\"insertData.parameterisation.insert.x.length < 3 || insertData.parameterisation.insert.y.length < 3\\\">\\n      You need at least 3 data points to create an insert shape.\\n    </p>\\n\\n    <div style=\\\"width:100%; height:30px\\\"></div>\\n\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Load demo data\\\"\\n      [disabled]=\\\"submitDisabled\\\"\\n      (click)=\\\"loadDemoData()\\\">Load Demo Data         \\n    </button>\\n\\n    <div style=\\\"width:20px; height:30px\\\"></div>\\n\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Parameterise insert\\\"\\n      [disabled]=\\\"submitDisabled || !textInputsValid || !equalLengths\\\"\\n      (click)=\\\"onSubmit()\\\">Parameterise Insert          \\n    </button>\\n\\n\\n\\n    <div [hidden]=\\\"serverResponseValid\\\">\\n      {{serverErrorMessage}}\\n    </div>\\n\\n    <div style=\\\"height:20px; width:100%;\\\"></div>\\n\\n    <my-plot \\n      [insert_x]=\\\"insertData.parameterisation.insert.x\\\"\\n      [insert_y]=\\\"insertData.parameterisation.insert.y\\\"\\n      [circle]=\\\"insertData.parameterisation.circle\\\"\\n      [ellipse]=\\\"insertData.parameterisation.ellipse\\\"\\n      [enabled]=\\\"textInputsValid && equalLengths\\\">\\n    </my-plot>\\n\\n    <div style=\\\"height:20px; width:20px;\\\"></div>\\n\\n    <my-width-length-table\\n      [width]=\\\"insertData.parameterisation.width\\\"\\n      [length]=\\\"insertData.parameterisation.length\\\"\\n      [enabled]=\\\"textInputsValid && equalLengths\\\">\\n    </my-width-length-table>\\n\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Send parameterisation to model</h5>\\n    <p>\\n      Once you have parameterised an insert shape you may either predict this insert with the model, or you may add the insert to the model.\\n    </p>\\n    <p>\\n      To predict the insert with the model you must have filled in the correct machine ID, energy, applicator, and ssd in the text boxes below.\\n      Furthermore these inputs need to correspond to one of the \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        machine specifications you have defined.\\n      </a>\\n    </p>\\n    <p>\\n      To append the current insert shape along with its measured factor to the model you must have filled in the corresponding machine ID, energy, applicator, ssd, and measured factor in the text boxes below.\\n      Once again the machine specifications given need to correspond to one of the \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        machine specifications you have defined.\\n      </a>\\n    </p>\\n\\n\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Machine (ID)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.machine\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n\\n    <p *ngIf=\\\"!machineExists\\\">\\n      This machine ID does not exist within your \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        provided machine specifications.\\n      </a>\\n    </p>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Energy (Nominal or MeV)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.energy\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Applicator (ID)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.applicator\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"SSD (cm)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.ssd\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n\\n    <p *ngIf=\\\"!machineSettingsExist\\\">\\n      These specific machine settings do not exist within your       \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        provided machine specifications.\\n      </a>\\n    </p>\\n\\n    <mdl-textfield #measuredFactorInput\\n      type=\\\"text\\\"\\n      label=\\\"Measured insert factor (as per TG 25)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.measuredFactor\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Add measured factor to model\\\"\\n      [disabled]=\\\"!ableToAddDataToModel || !machineSettingsExist || measuredFactorInput.value==null || measuredFactorInput.value=='' || submitDisabled || !textboxInputs || !equalLengths\\\"\\n      (click)=\\\"addMeasuredFactor(measuredFactorInput.value)\\\">Add Measured Factor to Model            \\n    </button>\\n\\n    <p *ngIf=\\\"dataAlreadyExistsOnModel && !submitDisabled && textInputsValid && equalLengths && machineSettingsExist\\\">\\n      This width, length, and measured factor combination exists within the model.       \\n      <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n        View the model.\\n      </a>\\n    </p>\\n    \\n    <div style=\\\"height:20px; width:20px;\\\"></div>\\n\\n\\n\\n\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\"\\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Predict factor with model\\\"\\n      [disabled]=\\\"!machineSettingsExist || submitDisabled || !textInputsValid || !equalLengths || insertData.parameterisation.width == null || insertData.parameterisation.length == null\\\"\\n      (click)=\\\"predictFactor()\\\">Predict Factor with Model        \\n    </button>\\n\\n\\n\\n\\n  </div>\\n\\n\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\">\\n    <h5>Change parameterisation server url (optional)</h5>\\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default server is: <br>\\n      <a>http://electronapi.simonbiggs.net/parameterise</a>       \\n    </p>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Parameterisation Server Address\\\"\\n      (input)=\\\"parameterisationServerChange($event.target.value)\\\"\\n      floating-label\\n      [(ngModel)]=\\\"parameteriseURL\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n  </div>\\n\\n</div>\\n\";\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar PageNotFoundComponent = (function () {\n\t    function PageNotFoundComponent() {\n\t    }\n\t    PageNotFoundComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-page-not-found',\n\t            template: __webpack_require__(148)\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], PageNotFoundComponent);\n\t    return PageNotFoundComponent;\n\t}());\n\texports.PageNotFoundComponent = PageNotFoundComponent;\n\n\n/***/ },\n/* 148 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    This page has not been found. Please provide feedback ...\\n  </div>\\n</div>\";\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar title_service_1 = __webpack_require__(131);\n\tvar HomeComponent = (function () {\n\t    function HomeComponent(myTitleService) {\n\t        this.myTitleService = myTitleService;\n\t    }\n\t    HomeComponent.prototype.ngOnInit = function () {\n\t        this.myTitleService.setTitle('Home');\n\t    };\n\t    HomeComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-home',\n\t            template: __webpack_require__(150)\n\t        }), \n\t        __metadata('design:paramtypes', [title_service_1.TitleService])\n\t    ], HomeComponent);\n\t    return HomeComponent;\n\t}());\n\texports.HomeComponent = HomeComponent;\n\n\n/***/ },\n/* 150 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div itemscope itemtype=\\\"http://schema.org/SoftwareApplication\\\" class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h3 itemprop=\\\"name\\\">Electron insert factor modelling</h3>\\n    <p>\\n      Tags: <span itemprop=\\\"applicationCategory\\\">Medical physics, electron inserts, electron cutouts, Python, Angular2, Bokeh, spline modelling</span><br>\\n      Last update: <span itemprop=\\\"datePublished\\\" content=\\\"2016-10-18\\\">2016-11-03</span><br>\\n      Version: <span itemprop=\\\"softwareVersion\\\">0.2.0-beta</span><br>\\n      Operating system: <span itemprop=\\\"operatingSystem\\\">Windows, Linux, Mac, Android, and iOS</span> <br>\\n      Requirements: <span itemprop=\\\"requirements\\\">A browser such as <a href=\\\"https://www.google.com.au/chrome/browser\\\">Chrome</a> that supports <a href=\\\"http://caniuse.com/#feat=indexeddb\\\">IndexedDB</a> browser database</span><br>\\n      Developed by: <span itemprop=\\\"author\\\" itemscope itemtype=\\\"http://schema.org/Person\\\"><a itemprop=\\\"name\\\" href=\\\"https://github.com/SimonBiggs\\\">Simon Biggs</a></span>\\n    </p>\\n\\n    <h4>Warning</h4>\\n    <p>\\n      This web app is currently under active development.  \\n      On 3-Nov-2016 the underlying data structure of this web app underwent a refactor. This was to facilitate data importing and exporting.\\n      Although I have put methods in place to transfer data across to the new format in a reasonable manner this may not have been successful.\\n      If you suspect that your data has been corrupted during this process please empty your browser database with the \\n      <a routerLink=\\\"/storage\\\" routerLinkActive=\\\"active\\\">\\n        storage component</a>.\\n    </p>\\n    <p>\\n      If you find bugs, or have any usability suggestions please <a href=\\\"mailto:mail@simonbiggs.net\\\">email me</a> so that I may make appropriate fixes and improvements.\\n    </p>\\n    <h4>Description</h4>\\n    <p>\\n      This online web app is for the modelling of the portion of the electron output factor that is dependent on the shape of the shielding insert mounted within the applicator. This allows modelling insert factors using only the measured factors already available at a centre. Should all outliers be removed from the data set the user might expect as low as 0.5% standard uncertainty for factor prediction with as little as 8 data points.\\n    </p>\\n\\n    <h4>Instructions</h4>\\n    <h5>Overview</h5>\\n    <p>This web app is divided into four logical components:</p>\\n      <ul>\\n        <li>   \\n          Defining your centre specific machine specifications within the   \\n          <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n            machine specifications component\\n          </a>\\n        </li>\\n        <li>\\n          Insert shape extraction from a dicom patient plan within the\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n            dicom component\\n          </a>\\n        </li>\\n        <li>\\n          Parameterise the insert shapes into equivalent widths and lengths within the\\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n            parameterisation component\\n          </a>\\n        </li>\\n        <li>\\n          Take at least 8 widths, lengths, and measured factors for a given machine, applicator, energy, ssd combination and create an empirical model within the\\n          <a routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\">\\n            model component\\n          </a>\\n        </li>\\n      </ul>\\n\\n      <p>\\n        All your model and machine data is saved on your local machine within your browser. \\n        Your progress will be saved as long as you do not clear your browser data.\\n        In the future I plan to implement a data export and import feature, as well as the ability to sync models between browsers via a server.\\n        Currently however the only place your web app data is being stored is on your local machine.\\n      </p>\\n\\n       \\n      \\n      <h5>To demo</h5>\\n      <p>\\n        If you wish to simply demo this app these are the following steps you can take:\\n      </p>\\n      <ul>\\n        <li>\\n          Within the \\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n            dicom component \\n          </a>\\n          download the demo dicom file, load it into the web app and see the insert shapes be pulled from the dicom file without any network traffic\\n        </li>\\n        <li>\\n          Within the \\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n            parameterise component\\n          </a>\\n          press the \\\"Load Demo Data\\\" button and then press the \\\"Parameteterise Insert\\\" button to see the parameterisation algorithim in action\\n        </li>\\n        <li>\\n          Within the \\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n            model component\\n          </a>\\n          press the \\\"Load Demo Data\\\" button and then press the \\\"Run Spline Model\\\" to see the spline model being created. \\n          You can then either hover over the model, or tap on the model to view the relevant values.\\n        </li>\\n      </ul>\\n\\n      <h5>To implement in your centre</h5>\\n      <p>\\n        To implement this web app in your centre you need to do the following:\\n      </p>\\n      <ul>\\n        <li>  \\n          Specify the machine models and the corresponding applicators, energies, and ssds within the    \\n          <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n            machine specification component.\\n          </a>\\n        </li>\\n        <li> \\n          Collate / measure your electron insert factor measuremens. These factors are to measured in accordance to TG 25.   \\n        </li>\\n        <li>\\n          If the insert shapes are ellipses, you may directly input the ellipse widths and lengths as projected to the isocentre within the \\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n            model component.\\n          </a>\\n        </li>\\n        <li>\\n          If the insert shape is a generic shape or you know the x and y coordinates of your insert then determine the equivalent ellipse widths and lengths by inputting x and y coordinates as defined at isocentre within the \\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n            parameterisation component.\\n          </a>          \\n        </li>\\n        <li>\\n          If the insert shape is defined within your planning system, export the patient plan to dicom and then read the insert coordinates from the dicom file using the\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n            dicom component.\\n          </a>          \\n        </li>\\n        <li>\\n          Once you have the corresponding equivalent ellipse widths and lengths for your measured factors these may be appended to the relevant machine configuration within the \\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n            model component\\n          </a>\\n        </li>\\n        <li>\\n          Whenever a machine configuration gets at least 8 data points you may press the \\\"Run Spline Model\\\" on the \\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n            model component\\n          </a>\\n          which will allow the prediction of insert factors for other widths and lengths.\\n        </li>\\n      </ul>\\n\\n      <h5>To use the web app after it has been implemented</h5>\\n      <ul>\\n        <li>\\n          Export the patient plan to dicom and then read the insert coordinates from the dicom file using the\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n            dicom component.\\n          </a>          \\n        </li>\\n        <li>\\n          Press the \\\"Parameterise Insert\\\" button to determine the equivalent ellipse width and length\\n        </li>\\n        <li>\\n          Press the \\\"Predict Factor with Model\\\" button to automatically change the machine configuration to that which matches your loaded insert\\n        </li>\\n        <li>\\n          Hover your mouse over the relevant width and length within the model to predict your insert factor\\n        </li>\\n      </ul>\\n\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n\\n    <h4>Publications</h4>\\n    <!--<h6>Original paper</h6>-->\\n    <p>The paper detailing the algorithim and its validation:</p>\\n    <p>\\n      S. Biggs, M. Sobolewski, R. Murry, J. Kenny, Spline modelling electron insert factors using routine measurements. Physica Medica (2015), <a href=\\\"http://dx.doi.org/10.1016/j.ejmp.2015.11.002\\\">doi:10.1016/j.ejmp.2015.11.002</a>.\\n    </p>\\n\\n    <!--<h6>EPSM2016 Poster</h6>\\n    <ul>\\n      <li><a href=\\\"https://www.dropbox.com/s/09ij94rqc012ad8/ElectronInsertsWebAppPoster.jpg?dl=1\\\">Low resolution</a></li>\\n      <li><a href=\\\"https://www.dropbox.com/s/ga5e64echv255b8/ElectronsPoster.svg?dl=1\\\">Original SVG file</a></li>\\n    </ul>-->\\n\\n    <h4>Disclaimer</h4>\\n    <p>\\n      Any use of this web app or any of its code has you accepting the AGPL3+ license which includes no warranty that this code is fit for a particular purpose. Attempts have been made to make the code transparent and it is recommended that an experienced python programmer and physicist who understands the procedure outlined in the paper and the requirements of your centre identifies whether or not this method and code is fit for your use.</p>\\n\\n    <h4>Use of Google Analytics</h4>\\n    <p>\\n      To aid in quickly identifying bugs, user experience issues, and documenting app usage the Google Analytics service is employed. \\n      This collates and reports page views, button clicks, and demographic information based upon your IP address.\\n      For more information on privacy regarding Google Analytics <a href=\\\"https://support.google.com/analytics/answer/6004245\\\">click here.</a>\\n      If you wish to opt-out of Google Analytics data collection please <a href=\\\"https://tools.google.com/dlpage/gaoptout\\\">click here.</a>\\n    </p>   \\n\\n\\n    <h4>(Optional) Download this web app and run it locally</h4>\\n      The following commands will set up this web app to work on a fresh install of <a href=\\\"http://releases.ubuntu.com/16.04/\\\">Ubuntu 16.04</a>:\\n      <pre><code class=\\\"bash\\\">    sudo apt install git wget\\n    git clone --recursive \\\\\\n        https://github.com/SimonBiggs/electroninserts-webapp.git \\\\\\n        --branch gh-pages\\n    cd electroninserts-webapp\\n\\n    wget \\\\\\n        https://goo.gl/poeKlL \\\\\\n        -O miniconda.sh\\n    chmod +x miniconda.sh\\n    ./miniconda.sh -p $HOME/miniconda\\n    export PATH=$HOME/miniconda/bin:$PATH\\n\\n    conda update conda\\n    conda env create \\\\\\n        --name electroninserts python=3.5 \\\\\\n        --file ./server/electronfactor-server/conda-requirements.txt\\n    source activate electroninserts\\n\\n    python run_webapp_locally.py</code></pre>\\n\\n    At that point you will be able to access the web app locally at http://localhost:8000.\\n    Make sure the model and parameterisation servers point to http://localhost:5000/model, and http://localhost:5000/parameterise respectively.\\n    You may also replace \\\"localhost\\\" with your IP to access this webapp from other computers on your network.\\n\\n\\n\\n\\n    <h4>Source code</h4>\\n    <p>\\n      For the purpose of coding transparency and to enable the user to take responsibility for the code themselves any redistribution\\n      or derivative works of this web app need to include the source code of any additions made and need to include a way\\n      for users to easily access the source code of each of the components used or linked to.\\n    </p>\\n\\n    <h5>Server Code</h5>\\n\\n    <h6>Base Electron Insert Factor Source Code</h6>\\n    <p>\\n      The python file which does the shape parameterisation and insert factor modelling which is used by the server is found here:\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py\\\">\\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py</a>\\n    </p>\\n\\n    <h6>Tornado REST API</h6>\\n    <p>\\n      The Tornado REST API is found here:\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py\\\">\\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py</a>\\n    </p>\\n\\n    <h6>Heroku App code</h6>\\n    <p>\\n      The code to make the heroku app is found here:\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server\\\">\\n              https://github.com/SimonBiggs/electronfactor-server</a>\\n    </p>\\n\\n    <h5>Web App Code</h5>\\n    <p>\\n      The source code for this web app is found here:\\n      <a itemprop=\\\"downloadUrl\\\" href=\\\"https://github.com/SimonBiggs/electroninserts-webapp\\\">\\n            https://github.com/SimonBiggs/electroninserts-webapp</a>\\n    </p>\\n\\n    <h5>Libraries used</h5>\\n    <h6>Bokehjs</h6>\\n    <p>\\n      The bokehjs library is used for plots. Documentation can be found here:\\n      <a href=\\\"http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs\\\">\\n              http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs</a>\\n    </p>\\n    <p>\\n      Source code can be found here:\\n      <a href=\\\"https://github.com/bokeh/bokeh/tree/master/bokehjs\\\">\\n              https://github.com/bokeh/bokeh/tree/master/bokehjs</a>\\n    </p>\\n\\n    <h6>dcmjs</h6>\\n    <p>\\n      The dcmjs library is used for reading dicom files within javascript. Website can be found here:\\n      <a href=\\\"http://dcmjs.org/\\\">\\n              http://dcmjs.org/</a>\\n    </p>\\n    <p>\\n      Source code can be found here:\\n      <a href=\\\"https://github.com/commontk/dcmjs\\\">\\n              https://github.com/commontk/dcmjs</a>\\n    </p>\\n\\n    <h6>Angular2</h6>\\n    <p>\\n      This interface was built using Angular2. Documentation can be found here:\\n      <a href=\\\"https://angular.io/docs/ts/latest/\\\">\\n              https://angular.io/docs/ts/latest/</a>\\n    </p>\\n    <p>\\n      Source code can be found here:\\n      <a href=\\\"https://github.com/angular/angular\\\">\\n              https://github.com/angular/angular</a>\\n    </p>\\n    <h6>Remaining libraries</h6>\\n    <p>\\n      For all remaining libraries used please see the npm package.json file:\\n      <a href=\\\"https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json\\\">\\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json</a>\\n    </p>\\n    <p>\\n      And the index file for various imports:\\n      <a href=\\\"https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html\\\">\\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html</a>\\n    </p>\\n  </div>\\n\\n\\n</div>\";\n\n/***/ },\n/* 151 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar title_service_1 = __webpack_require__(131);\n\tvar electron_api_service_1 = __webpack_require__(129);\n\tvar model_data_1 = __webpack_require__(137);\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar current_settings_1 = __webpack_require__(140);\n\tvar width_length_area_input_component_1 = __webpack_require__(152);\n\tvar CreateModelComponent = (function () {\n\t    function CreateModelComponent(modelData, myTitleService, electronApiService, dataPersistenceService, currentSettings, ngZone) {\n\t        var _this = this;\n\t        this.modelData = modelData;\n\t        this.myTitleService = myTitleService;\n\t        this.electronApiService = electronApiService;\n\t        this.dataPersistenceService = dataPersistenceService;\n\t        this.currentSettings = currentSettings;\n\t        this.ngZone = ngZone;\n\t        this.textboxLabels = {\n\t            width: \"Width of ellipse given by diameter of largest encompassed circle (cm @iso)\",\n\t            length: \"Length of ellipse that matches insert shape area (cm @iso)\",\n\t            area: \"[Optional] Area of insert shape (cm^2 @iso)\",\n\t            measuredFactor: \"Measured insert factor (as per TG 25)\"\n\t        };\n\t        this.textboxValid = true;\n\t        this.lengthSmallerThanWidth = false;\n\t        this.plot_width = 600;\n\t        this.dataInFlight = false;\n\t        window.onresize = function (e) {\n\t            ngZone.run(function () {\n\t                _this.updatePlotWidth();\n\t            });\n\t        };\n\t    }\n\t    CreateModelComponent.prototype.ngOnDestroy = function () {\n\t        window.onresize = null;\n\t    };\n\t    CreateModelComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.myTitleService.setTitle('Create Model');\n\t        this.dataPersistenceService.loadServerUrl('model')\n\t            .then(function (serverUrl) {\n\t            if (serverUrl == null) {\n\t                _this.modelURL = 'http://electronapi.simonbiggs.net/model';\n\t            }\n\t            else {\n\t                _this.modelURL = serverUrl.url;\n\t            }\n\t        });\n\t        this.updatePlotWidth();\n\t    };\n\t    CreateModelComponent.prototype.updatePlotWidth = function () {\n\t        this.plot_width = this.plotContainer.nativeElement.clientWidth;\n\t    };\n\t    CreateModelComponent.prototype.currentMachineSettingsUpdated = function (newSettings) {\n\t        this.currentSettings = newSettings;\n\t        this.loadMeasuredData();\n\t        this.checkLengthSmallerThanWidth();\n\t    };\n\t    CreateModelComponent.prototype.loadMeasuredData = function () {\n\t        var _this = this;\n\t        this.dataPersistenceService.loadModelData(this.modelData, this.currentSettings).then(function () {\n\t            _this.textboxInputs.triggerUpdate = true;\n\t        });\n\t    };\n\t    CreateModelComponent.prototype.saveModel = function () {\n\t        this.dataPersistenceService.saveModelData(this.modelData, this.currentSettings);\n\t    };\n\t    CreateModelComponent.prototype.checkLengthSmallerThanWidth = function () {\n\t        this.lengthSmallerThanWidth = false;\n\t        for (var i = 0; i < this.modelData.measurement.width.length; i++) {\n\t            if (this.modelData.measurement.width[i] > this.modelData.measurement.length[i]) {\n\t                this.lengthSmallerThanWidth = true;\n\t                return;\n\t            }\n\t        }\n\t    };\n\t    CreateModelComponent.prototype.onValidTextboxChange = function () {\n\t        this.modelData.model.reset();\n\t        this.checkLengthSmallerThanWidth();\n\t        this.saveModel();\n\t    };\n\t    CreateModelComponent.prototype.basicServerSubmit = function () {\n\t        var _this = this;\n\t        this.dataInFlight = true;\n\t        this.electronApiService.sendToServer(this.modelURL, JSON.stringify(this.modelData.measurement))\n\t            .then(function (modelResult) {\n\t            _this.modelData.model.width = modelResult.model_width;\n\t            _this.modelData.model.length = modelResult.model_length;\n\t            _this.modelData.model.predictedFactor = modelResult.model_factor;\n\t            _this.dataInFlight = false;\n\t            _this.saveModel();\n\t        });\n\t    };\n\t    CreateModelComponent.prototype.modelServerChange = function (newModelURL) {\n\t        this.dataPersistenceService.saveServerUrl('model', newModelURL);\n\t    };\n\t    CreateModelComponent.prototype.defaultServer = function () {\n\t        this.modelURL = 'http://electronapi.simonbiggs.net/model';\n\t        this.dataPersistenceService.saveServerUrl('model', this.modelURL);\n\t    };\n\t    CreateModelComponent.prototype.loadDemoData = function () {\n\t        for (var _i = 0, _a = ['machine', 'energy', 'applicator', 'ssd']; _i < _a.length; _i++) {\n\t            var key = _a[_i];\n\t            this.currentSettings[key] = null;\n\t        }\n\t        this.settingsPicker.currentSettings = this.currentSettings;\n\t        this.modelData.model.reset();\n\t        this.modelData.measurement.reset();\n\t        this.modelData.measurement.width = [\n\t            3.71, 6.78, 6.3, 7.56, 5.26, 6.53, 7.08, 4.38, 3.66,\n\t            4.21, 4.21, 6.54, 5.86, 3.17, 6., 8.06, 6.31, 5.26,\n\t            4.21, 5.21, 4.59, 5.34, 6.41, 5.26, 5.25, 7.82, 4.2,\n\t            3.16, 7.18, 5.72, 6.08, 6.64, 8.4, 4.59, 3.15, 4.67,\n\t            4.21, 9.45, 7.64, 3.17, 3.17, 7.36];\n\t        this.modelData.measurement.length = [\n\t            4.36, 10.97, 6.33, 10.05, 13.66, 10.99, 10.77, 5.47,\n\t            5.04, 8.41, 13.65, 8.41, 8.62, 9.43, 7.97, 11.85,\n\t            8.24, 10.52, 6.82, 11.4, 5.67, 9.64, 8.69, 8.41,\n\t            5.26, 10.85, 4.21, 5.25, 11.27, 11.6, 6.64, 9.81,\n\t            8.42, 6.54, 3.16, 6.28, 10.51, 9.47, 8.99, 13.64,\n\t            6.83, 7.37];\n\t        this.modelData.measurement.measuredFactor = [\n\t            0.9489, 1.0067, 0.9858, 1.0045, 0.9868, 1.0004, 1.0052,\n\t            0.9634, 0.9437, 0.9708, 0.9757, 0.9931, 0.9896, 0.9492,\n\t            0.9911, 1.0067, 0.9923, 0.9879, 0.9609, 0.9884, 0.9587,\n\t            0.9934, 0.9991, 0.9831, 0.9705, 1.0019, 0.9562, 0.9348,\n\t            0.9987, 0.9989, 0.9933, 0.9991, 1.0067, 0.9683, 0.9296,\n\t            0.9735, 0.9709, 1.0084, 1.0028, 0.953, 0.9484, 1.0032];\n\t        this.modelData.measurement.updateAreaFromLength();\n\t        this.checkLengthSmallerThanWidth();\n\t        this.textboxInputs.triggerUpdate = true;\n\t    };\n\t    __decorate([\n\t        core_1.ViewChild('plotContainer'), \n\t        __metadata('design:type', Object)\n\t    ], CreateModelComponent.prototype, \"plotContainer\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('settingsPicker'), \n\t        __metadata('design:type', Object)\n\t    ], CreateModelComponent.prototype, \"settingsPicker\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('textboxInputs'), \n\t        __metadata('design:type', width_length_area_input_component_1.WidthLengthAreaInputComponent)\n\t    ], CreateModelComponent.prototype, \"textboxInputs\", void 0);\n\t    CreateModelComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-create-model',\n\t            template: __webpack_require__(153)\n\t        }), \n\t        __metadata('design:paramtypes', [model_data_1.ModelData, title_service_1.TitleService, electron_api_service_1.ElectronApiService, data_persistence_service_1.DataPersistenceService, current_settings_1.CurrentSettings, core_1.NgZone])\n\t    ], CreateModelComponent);\n\t    return CreateModelComponent;\n\t}());\n\texports.CreateModelComponent = CreateModelComponent;\n\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar model_data_1 = __webpack_require__(137);\n\tvar text_input_control_1 = __webpack_require__(142);\n\tvar WidthLengthAreaInputComponent = (function () {\n\t    function WidthLengthAreaInputComponent() {\n\t        this.textboxLabels = {\n\t            width: \"Width of ellipse given by diameter of largest encompassed circle (cm @iso)\",\n\t            length: \"Length of ellipse that matches insert shape area (cm @iso)\",\n\t            area: \"Area of insert shape (cm^2 @iso)\",\n\t            measuredFactor: \"Measured insert factor (as per TG 25)\"\n\t        };\n\t        this.disabled = false;\n\t        this.rows = 2;\n\t        this.validTextBoxChange = new core_1.EventEmitter();\n\t        this.texboxValidCheck = new core_1.EventEmitter();\n\t        this.lastEdit = 'length';\n\t    }\n\t    WidthLengthAreaInputComponent.prototype.ngOnInit = function () {\n\t        this.textInputControl = new text_input_control_1.TextInputControl(['width', 'length', 'area', 'measuredFactor'], this.dataInputs);\n\t        this.textInputControl.updateAllTextboxInputs();\n\t    };\n\t    WidthLengthAreaInputComponent.prototype.ngDoCheck = function () {\n\t        if (this.triggerUpdate) {\n\t            this.textInputControl.updateAllTextboxInputs();\n\t            // console.log(this.triggerUpdate)\n\t            this.triggerUpdate = false;\n\t        }\n\t    };\n\t    WidthLengthAreaInputComponent.prototype.onTextboxChange = function (key, newInput) {\n\t        var oldValid = this.textInputControl.textboxValid[key];\n\t        this.textInputControl.validateTextboxInput(key, newInput);\n\t        if (this.textInputControl.textboxValid[key] != oldValid) {\n\t            this.texboxValidCheck.emit(this.textInputControl.checkAllValid());\n\t        }\n\t        if (this.textInputControl.textboxValid[key]) {\n\t            if (key == 'length' || (key == 'width' && this.lastEdit == 'length')) {\n\t                this.dataInputs.updateAreaFromLength();\n\t                this.textInputControl.updateTextboxInput('area');\n\t                this.lastEdit = 'length';\n\t            }\n\t            if (key == 'area' || (key == 'width' && this.lastEdit == 'area')) {\n\t                this.dataInputs.updateLengthFromArea();\n\t                this.textInputControl.updateTextboxInput('length');\n\t                this.lastEdit = 'area';\n\t            }\n\t            this.validTextBoxChange.emit();\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], WidthLengthAreaInputComponent.prototype, \"textboxLabels\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', model_data_1.AreaLengthConversion)\n\t    ], WidthLengthAreaInputComponent.prototype, \"dataInputs\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], WidthLengthAreaInputComponent.prototype, \"triggerUpdate\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], WidthLengthAreaInputComponent.prototype, \"disabled\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], WidthLengthAreaInputComponent.prototype, \"rows\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], WidthLengthAreaInputComponent.prototype, \"validTextBoxChange\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], WidthLengthAreaInputComponent.prototype, \"texboxValidCheck\", void 0);\n\t    WidthLengthAreaInputComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-width-length-area-input',\n\t            template: __webpack_require__(144)\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], WidthLengthAreaInputComponent);\n\t    return WidthLengthAreaInputComponent;\n\t}());\n\texports.WidthLengthAreaInputComponent = WidthLengthAreaInputComponent;\n\n\n/***/ },\n/* 153 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Description</h5>\\n    <p>\\n      Use this component to turn a set of at least 8 measured factors with corresponding equivalent widths and lengths into a spline model.\\n      These widths and lengths need to be determined using the parameterisation method employed within the \\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n        parameterisation component.\\n      </a>\\n    </p>\\n    <p>\\n      You are free to edit the widths, lengths, and factors manually below, or have the       \\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n        parameterisation component\\n      </a>\\n      automatically add the measured factors to the correct model. Both work interchangably.\\n      You may only add shapes via the \\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n        parameterisation component\\n      </a>\\n      if machine ID, applicator, energy, ssd, and measured factor are filled in and they match a machine configuration defined within the \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        specifications component.\\n      </a> \\n    </p>\\n    <p>\\n      A spline model is only valid for a single machine configuration. \\n      Therefore each machine, applicator, energy, ssd has its own model. \\n      Using the machine configuration section below you can change between the configurations.\\n      This will only work if you have already\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        defined your machine configurations.\\n      </a> \\n    </p>\\n\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Choose machine configuration</h5>\\n    <p>\\n      Here is where you select the machine specifications for the model you with to edit. \\n      You will only see options here if you have actually       \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        defined your machine configurations.\\n      </a> \\n    </p>\\n  </div>\\n\\n  <div [style.width]=\\\"'100%'\\\">\\n    <my-choose-specifications #settingsPicker\\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\\n    </my-choose-specifications>\\n  </div>\\n  \\n\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <div [style.width]=\\\"'100%'\\\" [style.height]=\\\"'30px'\\\"></div>\\n    <h5>\\n      The model\\n      <span *ngIf=\\\"currentSettings.machine != null && currentSettings.energy != null && currentSettings.energy != 0 && currentSettings.applicator != null && currentSettings.applicator != '' && currentSettings.ssd != null && currentSettings.ssd != 0\\\">\\n        for machine ID {{currentSettings.machine}}, at an energy of {{currentSettings.energy}} MeV, on the {{currentSettings.applicator}} applicator at {{currentSettings.ssd}} cm SSD\\n      </span>\\n      </h5>    \\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n\\n    <h6>Input widths, lengths, and factors</h6>\\n    <p>\\n      Use the following text boxes to directly edit the measured data used by the spline model.\\n    </p>\\n    <p>\\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\\n      This web app should handle copying and pasting from a range of sources (including excel).\\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\\n    </p>\\n\\n    <my-width-length-area-input #textboxInputs\\n      [dataInputs]=modelData.measurement\\n      [textboxLabels]=textboxLabels\\n      [triggerUpdate]=false\\n      [rows]=4\\n      [disabled]=\\\"dataInFlight\\\"\\n      (texboxValidCheck)=\\\"textboxValid=$event\\\"\\n      (validTextBoxChange)=onValidTextboxChange()></my-width-length-area-input>\\n\\n    <!--<div *ngFor=\\\"let key of ['width', 'length', 'measuredFactor']\\\">\\n      <mdl-textfield \\n        type=\\\"text\\\"\\n        [label]=\\\"textboxLabels[key]\\\"\\n        [(ngModel)]=\\\"this.textboxInput[key]\\\"\\n        (input)=\\\"onTextboxChange(key, $event.target.value)\\\"\\n        rows=4\\n        floating-label\\n        [disabled]=\\\"dataInFlight\\\"\\n        [style.width]=\\\"'100%'\\\"></mdl-textfield>\\n      <p *ngIf=\\\"!textboxValid[key]\\\">\\n        The {{key}} input is invalid\\n      </p>\\n      <span *ngIf=\\\"key=='length'\\\">\\n        \\n      </span>\\n    </div>-->\\n    <p *ngIf=\\\"lengthSmallerThanWidth\\\">\\n      There exists a length value that is smaller than its corresponding width. Spline modelling is disabled as a result.\\n    </p>\\n    <p *ngIf=\\\"modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length\\\">\\n      The lengths of the inputs are not equal. Spline modelling is disabled as a result.\\n    </p>\\n    <p *ngIf=\\\"modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8\\\">\\n      There are currently less than 8 data points. Spline modelling is disabled as a result.\\n    </p>\\n  </div>\\n\\n<div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\" #plotContainer>\\n    <h6>The spline model</h6>\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Model | Load demo data\\\"\\n      [disabled]=\\\"dataInFlight\\\"\\n      (click)=\\\"loadDemoData()\\\">Load demo data         \\n    </button>\\n      \\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Model | Calculate spline model\\\"\\n      [disabled]=\\\"modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8 || dataInFlight || modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length || !textboxValid || lengthSmallerThanWidth\\\"\\n      (click)=\\\"basicServerSubmit()\\\">Calculate Spline Model\\n    </button>\\n    \\n\\n    <div *ngIf=\\\"modelData.measurement.width.length > 0 && modelData.measurement.length.length > 0 && modelData.measurement.measuredFactor.length > 0\\\">\\n      <my-bokeh-create-model\\n        [title]=\\\"'Model Plot'\\\"\\n        [scatter_x]=\\\"modelData.measurement.width\\\"\\n        [scatter_y]=\\\"modelData.measurement.length\\\"\\n        [scatter_z]=\\\"modelData.measurement.measuredFactor\\\"\\n        [pcolour_x]=\\\"modelData.model.width\\\"\\n        [pcolour_y]=\\\"modelData.model.length\\\"\\n        [pcolour_z]=\\\"modelData.model.predictedFactor\\\"\\n        [plot_width]=\\\"plot_width\\\"\\n        [plot_height]=\\\"380\\\">\\n      </my-bokeh-create-model>\\n    </div>\\n    <div *ngIf=\\\"modelData.measurement.width.length == 0 || modelData.measurement.length.length == 0|| modelData.measurement.measuredFactor.length == 0\\\">\\n      <p>\\n        <font color=\\\"red\\\">There is currently no data for this combination.</font> If you wish to load some demo data to see the model in action press the \\\"load demo data\\\" button below.\\n        To set this model up with your own data follow the instructions in the description at the top of this page.\\n      </p>\\n    </div>\\n\\n\\n  </div>\\n\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\">\\n    <h5>Change modelling server url (optional)</h5>\\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default is: <br>\\n      <a (click)=\\\"defaultServer()\\\">http://electronapi.simonbiggs.net/model</a>        \\n    </p>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Spline model server address\\\"\\n      (input)=\\\"modelServerChange($event.target.value)\\\"\\n      floating-label\\n      [(ngModel)]=\\\"modelURL\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n  </div>\\n\\n\\n</div>\";\n\n/***/ },\n/* 154 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar title_service_1 = __webpack_require__(131);\n\tvar model_data_1 = __webpack_require__(137);\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar current_settings_1 = __webpack_require__(140);\n\tvar width_length_area_input_component_1 = __webpack_require__(152);\n\tvar UseModelComponent = (function () {\n\t    function UseModelComponent(modelData, myTitleService, dataPersistenceService, currentSettings, ngZone) {\n\t        var _this = this;\n\t        this.modelData = modelData;\n\t        this.myTitleService = myTitleService;\n\t        this.dataPersistenceService = dataPersistenceService;\n\t        this.currentSettings = currentSettings;\n\t        this.ngZone = ngZone;\n\t        this.textboxLabels = {\n\t            width: \"Width of ellipse given by diameter of largest encompassed circle (cm @iso)\",\n\t            length: \"Length of ellipse that matches insert shape area (cm @iso)\",\n\t            area: \"[Optional] Area of insert shape (cm^2 @iso)\",\n\t            measuredFactor: \"[Optional] Measured insert factor (as per TG 25)\"\n\t        };\n\t        this.modelLookup = {};\n\t        this.predictionDifference = [];\n\t        this.plot_width = 600;\n\t        window.onresize = function (e) {\n\t            ngZone.run(function () {\n\t                _this.updatePlotWidth();\n\t            });\n\t        };\n\t    }\n\t    UseModelComponent.prototype.ngOnDestroy = function () {\n\t        console.log('use-model.component ngOnDestroy');\n\t        window.onresize = null;\n\t    };\n\t    UseModelComponent.prototype.ngOnInit = function () {\n\t        console.log('use-model.component ngOnInit');\n\t        this.myTitleService.setTitle('Use Model');\n\t        this.updatePlotWidth();\n\t        this.updateModelLookup();\n\t    };\n\t    UseModelComponent.prototype.ngAfterViewInit = function () {\n\t        console.log('use-model.component ngAfterViewInit');\n\t        this.loadMeasuredData();\n\t        this.updatePredictedFactors();\n\t    };\n\t    UseModelComponent.prototype.lookupFactor = function (width, length) {\n\t        console.log('use-model.component lookupFactor');\n\t        width = Math.round(width * 10) / 10;\n\t        length = Math.round(length * 10) / 10;\n\t        var key;\n\t        key = String(width) + \",\" + String(length);\n\t        return Math.round(this.modelLookup[key] * 1000) / 1000;\n\t    };\n\t    UseModelComponent.prototype.updatePredictedFactors = function () {\n\t        console.log('use-model.component updatePredictedFactors');\n\t        this.modelData.predictions.predictedFactor = [];\n\t        var amount = Math.min(this.modelData.predictions.width.length, this.modelData.predictions.length.length);\n\t        var predictedFactor;\n\t        var width;\n\t        var length;\n\t        for (var i = 0; i < amount; i++) {\n\t            width = this.modelData.predictions.width[i];\n\t            length = this.modelData.predictions.length[i];\n\t            predictedFactor = this.lookupFactor(width, length);\n\t            this.modelData.predictions.predictedFactor.push(predictedFactor);\n\t        }\n\t        this.updatePredictionDifference();\n\t    };\n\t    UseModelComponent.prototype.updatePredictionDifference = function () {\n\t        console.log('use-model.component updatePredictionDifference');\n\t        this.predictionDifference = [];\n\t        var measuredFactor;\n\t        var predictedFactor;\n\t        var difference;\n\t        for (var i in this.modelData.predictions.measuredFactor) {\n\t            measuredFactor = this.modelData.predictions.measuredFactor[i];\n\t            predictedFactor = this.modelData.predictions.predictedFactor[i];\n\t            difference = predictedFactor - measuredFactor;\n\t            difference = Math.round(difference * 1000) / 1000;\n\t            this.predictionDifference.push(difference);\n\t        }\n\t    };\n\t    UseModelComponent.prototype.updateModelLookup = function () {\n\t        console.log('use-model.component updateModelLookup');\n\t        this.modelLookup = {};\n\t        var key;\n\t        for (var i in this.modelData.model.width) {\n\t            key = String(this.modelData.model.width[i]) + \",\" + String(this.modelData.model.length[i]);\n\t            this.modelLookup[key] = this.modelData.model.predictedFactor[i];\n\t        }\n\t    };\n\t    UseModelComponent.prototype.updatePlotWidth = function () {\n\t        console.log('use-model.component updatePlotWidth');\n\t        this.plot_width = this.plotContainer.nativeElement.clientWidth;\n\t    };\n\t    UseModelComponent.prototype.currentMachineSettingsUpdated = function (newSettings) {\n\t        console.log('use-model.component currentMachineSettingsUpdated');\n\t        this.currentSettings = newSettings;\n\t        this.loadMeasuredData();\n\t    };\n\t    UseModelComponent.prototype.loadMeasuredData = function () {\n\t        var _this = this;\n\t        console.log('use-model.component loadMeasuredData');\n\t        if (this.currentSettings === undefined) {\n\t            throw new RangeError(\"Tried to load measured data but current settings are not defined\");\n\t        }\n\t        this.dataPersistenceService.loadModelData(this.modelData, this.currentSettings).then(function () {\n\t            console.log('use-model.component loadMeasuredData this.dataPersistenceService.loadModelData(this.modelData, this.currentSettings) promise complete');\n\t            _this.updateModelLookup();\n\t            _this.updatePredictedFactors();\n\t            _this.textboxInputs.triggerUpdate = true;\n\t        });\n\t    };\n\t    UseModelComponent.prototype.saveModel = function () {\n\t        console.log('use-model.component saveModel');\n\t        this.dataPersistenceService.saveModelData(this.modelData, this.currentSettings);\n\t    };\n\t    UseModelComponent.prototype.onValidTextboxChange = function () {\n\t        console.log('use-model.component onValidTextboxChange');\n\t        this.updatePredictedFactors();\n\t        this.saveModel();\n\t    };\n\t    __decorate([\n\t        core_1.ViewChild('plotContainer'), \n\t        __metadata('design:type', Object)\n\t    ], UseModelComponent.prototype, \"plotContainer\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('settingsPicker'), \n\t        __metadata('design:type', Object)\n\t    ], UseModelComponent.prototype, \"settingsPicker\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('textboxInputs'), \n\t        __metadata('design:type', width_length_area_input_component_1.WidthLengthAreaInputComponent)\n\t    ], UseModelComponent.prototype, \"textboxInputs\", void 0);\n\t    UseModelComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-use-model',\n\t            template: __webpack_require__(155)\n\t        }), \n\t        __metadata('design:paramtypes', [model_data_1.ModelData, title_service_1.TitleService, data_persistence_service_1.DataPersistenceService, current_settings_1.CurrentSettings, core_1.NgZone])\n\t    ], UseModelComponent);\n\t    return UseModelComponent;\n\t}());\n\texports.UseModelComponent = UseModelComponent;\n\n\n/***/ },\n/* 155 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Use models</h5>\\n    <p>\\n      This component is where created models are used. \\n      Factors for prediction will be able to be inputted using width, and then either length or area, and optionally\\n      a measured factor can be included for the purpose of comparing model results with measurement.\\n    </p>\\n    <p>\\n      You can either use the parameterisation component to parameterise your shapes, or if you have a large data set of \\n      generic shapes you need only determine the diameter of the largest encompassed circle to define width, and then\\n      you may input shape area instead of length.\\n      This allows you to quickly check large data sets of previous measurements on generic shapes.\\n    </p>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Choose machine configuration</h5>\\n    <my-choose-specifications #settingsPicker\\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\\n    </my-choose-specifications>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Inserts being predicted</h5>\\n    <my-width-length-area-input #textboxInputs\\n      [dataInputs]=modelData.predictions\\n      [textboxLabels]=textboxLabels\\n      [triggerUpdate]=false\\n      (validTextBoxChange)=onValidTextboxChange()></my-width-length-area-input>\\n    <p>Predicted factors: {{modelData.predictions.predictedFactor}}</p>\\n    <p>Prediction minus measured: {{predictionDifference}}</p>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\" #plotContainer>\\n    <div *ngIf=\\\"modelData.model.width.length > 0 && modelData.model.length.length > 0 && modelData.model.predictedFactor.length > 0\\\">\\n      <my-bokeh-use-model\\n        [title]=\\\"'Model Plot'\\\"\\n        [scatter_x]=\\\"modelData.predictions.width\\\"\\n        [scatter_y]=\\\"modelData.predictions.length\\\"\\n        [area]=\\\"modelData.predictions.area\\\"\\n        [scatter_z]=\\\"modelData.predictions.measuredFactor\\\"\\n        [predicted_factor]=\\\"modelData.predictions.predictedFactor\\\"\\n        [pcolour_x]=\\\"modelData.model.width\\\"\\n        [pcolour_y]=\\\"modelData.model.length\\\"\\n        [pcolour_z]=\\\"modelData.model.predictedFactor\\\"\\n        [plot_width]=\\\"plot_width\\\"\\n        [plot_height]=\\\"380\\\">\\n      </my-bokeh-use-model>\\n    </div>\\n    <div *ngIf=\\\"modelData.model.width.length == 0 || modelData.model.length.length == 0|| modelData.model.predictedFactor.length == 0\\\">\\n      <p>\\n        A model has not been calculated for this machine specification.\\n        If you do have at least 8 data points please calculate the spline model on the           \\n        <a routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\">\\n          create model component.\\n        </a>\\n      </p>\\n    </div>\\n  </div>\\n</div>\";\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar title_service_1 = __webpack_require__(131);\n\t// import { LocalStorageService } from '../../services/data-services/local-storage.service';\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar StorageManagementComponent = (function () {\n\t    function StorageManagementComponent(myTitleService, dataPersistenceService) {\n\t        var _this = this;\n\t        this.myTitleService = myTitleService;\n\t        this.dataPersistenceService = dataPersistenceService;\n\t        this.reader = new FileReader();\n\t        this.reader.onload = function (event) {\n\t            console.log('storage-management.component this.reader.onload');\n\t            var contents = event.target.result;\n\t            _this.fileJsonObject = JSON.parse(contents);\n\t        };\n\t    }\n\t    StorageManagementComponent.prototype.ngOnInit = function () {\n\t        console.log('storage-management.component ngOnInit');\n\t        this.myTitleService.setTitle('Storage');\n\t    };\n\t    StorageManagementComponent.prototype.exportDataBase = function () {\n\t        console.log('storage-management.component exportDataBase');\n\t        this.dataPersistenceService.databaseDump()\n\t            .then(function (stringDump) {\n\t            var element = document.createElement('a');\n\t            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(stringDump));\n\t            element.setAttribute('download', 'databaseDump.json');\n\t            element.style.display = 'none';\n\t            document.body.appendChild(element);\n\t            element.click();\n\t            document.body.removeChild(element);\n\t        });\n\t    };\n\t    StorageManagementComponent.prototype.openFile = function (event) {\n\t        console.log('storage-management.component openFile');\n\t        if (typeof event.target !== 'undefined') {\n\t            var file = event.target.files[0];\n\t            if (file) {\n\t                this.reader.readAsText(file);\n\t            }\n\t        }\n\t        else {\n\t            console.log(event);\n\t        }\n\t    };\n\t    StorageManagementComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-storage-management',\n\t            template: __webpack_require__(157)\n\t        }), \n\t        __metadata('design:paramtypes', [title_service_1.TitleService, data_persistence_service_1.DataPersistenceService])\n\t    ], StorageManagementComponent);\n\t    return StorageManagementComponent;\n\t}());\n\texports.StorageManagementComponent = StorageManagementComponent;\n\n\n/***/ },\n/* 157 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Storage management</h5>\\n    <p>\\n      This component is for the management of the data stored within this browser's database.\\n    </p>\\n\\n    <h5>Export browser database</h5>\\n    <p>\\n      The following button will export the browser database to a .json file.\\n    </p>\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Storage | Export browser database\\\"\\n      (click)=\\\"exportDataBase()\\\">Export browser database\\n    </button>\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Empty current database</h5>\\n    <p>\\n      The following button will wipe your browser database.\\n      This is not reversable. The browser database will need to be restored from a prior .json file.\\n    </p>\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Storage | Empty current database\\\"\\n      [disabled]=\\\"false\\\"\\n      (click)=\\\"dataPersistenceService.emptyDatabase()\\\">Empty browser database\\n    </button>\\n\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n\\n\\n    <h5>Append to database from file</h5>\\n    <p>\\n      The following button will append the contents of the given .json file to your browser database.\\n      If a key within your .json file matches that of your browser database then the database entry will be overwritten.\\n      This is not reversable.\\n    </p>\\n    <input type='file' (change)='openFile($event)'>\\n\\n    <button      \\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Storage | Empty current database\\\"\\n      [disabled]=\\\"fileJsonObject == null\\\"\\n      (click)=\\\"dataPersistenceService.appendJsonToDatabase(fileJsonObject)\\\">Append file to database\\n    </button>\\n  </div>\\n</div>\";\n\n/***/ },\n/* 158 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar title_service_1 = __webpack_require__(131);\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar specifications_data_service_1 = __webpack_require__(139);\n\tvar SpecificationsComponent = (function () {\n\t    function SpecificationsComponent(myTitleService, dataPersistenceService, machineSpecificationService) {\n\t        this.myTitleService = myTitleService;\n\t        this.dataPersistenceService = dataPersistenceService;\n\t        this.machineSpecificationService = machineSpecificationService;\n\t        this.newMachineIDValid = false;\n\t        this.newModelValid = false;\n\t        this.newMachineValid = false;\n\t        this.edittingMachine = null;\n\t        this.newEnergyValid = false;\n\t        this.newR50Valid = false;\n\t        this.newEnergySetValid = false;\n\t        this.edittingEnergy = null;\n\t        this.newApplicatorValid = false;\n\t        this.edittingApplicator = null;\n\t        this.newSSDValid = false;\n\t        this.edittingSSD = null;\n\t    }\n\t    SpecificationsComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        console.log('specifications.component ngOnInit');\n\t        this.myTitleService.setTitle('Specifications');\n\t        this.machineSpecificationService.loadData()\n\t            .then(function () {\n\t            console.log('specifications.component ngOnInit this.machineSpecificationService.loadData() promise complete');\n\t            _this.currentSettings = _this.machineSpecificationService.currentSettings;\n\t        });\n\t    };\n\t    SpecificationsComponent.prototype.checkNewMachineIDInput = function () {\n\t        console.log('specifications.component checkNewMachineIDInput');\n\t        if (this.machineSpecificationService.machineList.indexOf(this.newMachineID) == -1 &&\n\t            this.newMachineID != null && this.newMachineID != \"\") {\n\t            this.newMachineIDValid = true;\n\t        }\n\t        else {\n\t            this.newMachineIDValid = false;\n\t        }\n\t        this.checkNewMachineValid();\n\t    };\n\t    SpecificationsComponent.prototype.checkNewModelInput = function () {\n\t        console.log('specifications.component checkNewModelInput');\n\t        if (this.newModel != null && this.newModel != \"\") {\n\t            this.newModelValid = true;\n\t        }\n\t        else {\n\t            this.newModelValid = false;\n\t        }\n\t        this.checkNewMachineValid();\n\t    };\n\t    SpecificationsComponent.prototype.checkNewMachineValid = function () {\n\t        console.log('specifications.component checkNewMachineValid');\n\t        this.newMachineValid = (this.newMachineIDValid && this.newModelValid);\n\t    };\n\t    SpecificationsComponent.prototype.addMachineID = function () {\n\t        console.log('specifications.component addMachineID');\n\t        if (!this.newMachineValid) {\n\t            throw new RangeError('The new machine being added is not a valid input');\n\t        }\n\t        this.machineSpecificationService.newMachine(this.newMachineID, this.newModel);\n\t        this.newMachineID = null;\n\t        this.newModel = null;\n\t        this.newMachineIDValid = false;\n\t        this.newModelValid = false;\n\t        this.newMachineValid = false;\n\t        this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification);\n\t    };\n\t    SpecificationsComponent.prototype.checkNewEnergyInput = function () {\n\t        console.log('specifications.component checkNewEnergyInput');\n\t        if (this.machineSpecificationService.currentSpecification.energy.indexOf(Number(this.newEnergy)) < 0 &&\n\t            this.newEnergy != null && !isNaN(Number(this.newEnergy))) {\n\t            this.newEnergyValid = true;\n\t        }\n\t        else {\n\t            this.newEnergyValid = false;\n\t        }\n\t        this.checkNewEnergySetValid();\n\t    };\n\t    SpecificationsComponent.prototype.checkNewR50Input = function () {\n\t        console.log('specifications.component checkNewR50Input');\n\t        if (this.newR50 != null && !isNaN(Number(this.newR50))) {\n\t            this.newR50Valid = true;\n\t        }\n\t        else {\n\t            this.newR50Valid = false;\n\t        }\n\t        this.checkNewEnergySetValid();\n\t    };\n\t    SpecificationsComponent.prototype.checkNewEnergySetValid = function () {\n\t        console.log('specifications.component checkNewEnergySetValid');\n\t        this.newEnergySetValid = (this.newEnergyValid && this.newR50Valid);\n\t    };\n\t    SpecificationsComponent.prototype.addEnergy = function () {\n\t        console.log('specifications.component addEnergy');\n\t        if (!this.newEnergySetValid) {\n\t            throw new RangeError('The new energy set being added is not valid');\n\t        }\n\t        this.machineSpecificationService.currentSpecification.energy.push(Number(this.newEnergy));\n\t        this.machineSpecificationService.currentSpecification.R50.push(Number(this.newR50));\n\t        this.newEnergy = null;\n\t        this.newR50 = null;\n\t        this.newEnergyValid = false;\n\t        this.newR50Valid = false;\n\t        this.newEnergySetValid = false;\n\t        this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification);\n\t    };\n\t    SpecificationsComponent.prototype.checkNewApplicatorInput = function () {\n\t        console.log('specifications.component checkNewApplicatorInput');\n\t        if (this.machineSpecificationService.currentSpecification.applicator.indexOf(this.newApplicator.toLowerCase()) < 0 &&\n\t            this.newApplicator != null && this.newApplicator != \"\") {\n\t            this.newApplicatorValid = true;\n\t        }\n\t        else {\n\t            this.newApplicatorValid = false;\n\t        }\n\t    };\n\t    SpecificationsComponent.prototype.addApplicator = function () {\n\t        console.log('specifications.component addApplicator');\n\t        if (!this.newApplicatorValid) {\n\t            throw new RangeError('The new applicator being added is not valid');\n\t        }\n\t        this.machineSpecificationService.currentSpecification.applicator.push(this.newApplicator.toLowerCase());\n\t        this.newApplicator = null;\n\t        this.newApplicatorValid = false;\n\t        this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification);\n\t    };\n\t    SpecificationsComponent.prototype.checkNewSSDInput = function () {\n\t        console.log('specifications.component checkNewSSDInput');\n\t        if (this.machineSpecificationService.currentSpecification.ssd.indexOf(Number(this.newSSD)) < 0 &&\n\t            this.newSSD != null && !isNaN(Number(this.newSSD))) {\n\t            this.newSSDValid = true;\n\t        }\n\t        else {\n\t            this.newSSDValid = false;\n\t        }\n\t    };\n\t    SpecificationsComponent.prototype.addSSD = function () {\n\t        console.log('specifications.component addSSD');\n\t        if (!this.newSSDValid) {\n\t            throw new RangeError('The new ssd being added is not valid');\n\t        }\n\t        if (this.newSSDValid) {\n\t            this.machineSpecificationService.currentSpecification.ssd.push(Number(this.newSSD));\n\t            this.newSSD = null;\n\t            this.newSSDValid = false;\n\t            this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification);\n\t        }\n\t    };\n\t    SpecificationsComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-specifications',\n\t            template: __webpack_require__(159)\n\t        }), \n\t        __metadata('design:paramtypes', [title_service_1.TitleService, data_persistence_service_1.DataPersistenceService, specifications_data_service_1.MachineSpecificationsService])\n\t    ], SpecificationsComponent);\n\t    return SpecificationsComponent;\n\t}());\n\texports.SpecificationsComponent = SpecificationsComponent;\n\n\n/***/ },\n/* 159 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\n\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Machine specifications editing</h5>\\n    <p>\\n      Use this component to define your centre's machine specifications. \\n      These will be used throughout this web app to silo each model into its own specific machine ID, applicator, energy, ssd combination.\\n    </p>\\n    <p>\\n      <font color=\\\"#d3d3d3\\\">\\n        Currently specifcations can only be added. At this current time they cannot be edited nor deleted once they have been defined.\\n      </font>\\n    </p>\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\" *ngIf=\\\"machineSpecificationService != null && currentSettings != null\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\" style=\\\"width:100%\\\">\\n      <mdl-card-title>\\n        <h2 mdl-card-title-text>Machine IDs</h2>\\n      </mdl-card-title>\\n\\n      <mdl-list>\\n        \\n        <div *ngFor=\\\"let machine of machineSpecificationService.machineList\\\">\\n        \\n          <div *ngIf=\\\"machine!=edittingMachine\\\">\\n            <mdl-list-item lines=\\\"3\\\">\\n              <mdl-list-item-primary-content>\\n                <!--<div (click)=\\\"editMachine(machine)\\\">-->\\n                <div>\\n                  <span>{{machine}}</span>\\n                  <mdl-list-item-text-body>{{machineSpecificationService.returnMachineSpecification(machine).makeAndModel}}</mdl-list-item-text-body>\\n                </div>\\n              </mdl-list-item-primary-content>\\n              <mdl-list-item-secondary-action>\\n                <button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"machine==currentSettings.machine || edittingMachine!=null\\\"\\n                  (click)=\\\"machineSpecificationService.changeMachine(machine)\\\"><mdl-icon>dashboard</mdl-icon>       \\n                </button>\\n                <!--<button\\n                  mdl-button *ngIf=\\\"machine!=edittingMachine\\\"\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"false\\\"\\n                  (click)=\\\"editMachine(machine)\\\"><mdl-icon>edit</mdl-icon>       \\n                </button>-->\\n              </mdl-list-item-secondary-action>\\n            </mdl-list-item>\\n\\n          </div>\\n\\n          <div *ngIf=\\\"machine==edittingMachine\\\">\\n            <mdl-list-item lines=\\\"3\\\">\\n              <mdl-list-item-primary-content>\\n                <mdl-textfield #machineIDTextField\\n                  type=\\\"text\\\"\\n                  label=\\\"Machine ID\\\"\\n                  [value]=\\\"machine\\\"\\n                  (keyup.enter)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"\\n                  floating-label\\n                  style=\\\"display:inline;\\\"></mdl-textfield>\\n                <mdl-textfield #modelTextField\\n                  type=\\\"text\\\"\\n                  label=\\\"Model\\\"\\n                  [value]=\\\"machineSpecificationService.returnMachineSpecification(machine).makeAndModel\\\"\\n                  (keyup.enter)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"\\n                  floating-label\\n                  style=\\\"display:inline;\\\"></mdl-textfield>\\n              </mdl-list-item-primary-content>\\n\\n              <mdl-list-item-secondary-action>\\n                <!--<button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"machine!=edittingMachine\\\"\\n                  (click)=\\\"deleteMachine(machine)\\\"><mdl-icon>delete</mdl-icon>       \\n                </button>-->\\n                <button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"true\\\"><mdl-icon>delete</mdl-icon>       \\n                </button>\\n                <button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  mdl-colored=\\\"primary\\\" \\n                  [disabled]=\\\"machine==currentSettings.machine || edittingMachine!=null\\\"\\n                  (click)=\\\"changeCurrentMachine(machine)\\\"><mdl-icon>dashboard</mdl-icon>       \\n                </button>\\n                <button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"false\\\"\\n                  (click)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"><mdl-icon>done</mdl-icon>       \\n                </button>\\n              </mdl-list-item-secondary-action>\\n            </mdl-list-item>\\n\\n          </div>\\n        </div>\\n\\n\\n      </mdl-list>\\n      <mdl-card-actions mdl-card-border>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"New Machine ID\\\"\\n          [(ngModel)]=\\\"newMachineID\\\"\\n          (input)=\\\"checkNewMachineIDInput()\\\"\\n          (keyup.enter)=\\\"addMachineID()\\\"\\n          floating-label\\n          style=\\\"width:100%\\\"></mdl-textfield>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"Machine Make and Model\\\"\\n          [(ngModel)]=\\\"newModel\\\"\\n          (input)=\\\"checkNewModelInput()\\\"\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add machine ID\\\"\\n          (keyup.enter)=\\\"addMachineID()\\\"\\n          floating-label\\n          style=\\\"width:70%\\\"></mdl-textfield>\\n        <button \\n          [disabled]=\\\"!newMachineValid\\\"\\n          mdl-button \\n          mdl-button-type=\\\"mini-fab\\\"\\n          mdl-ripple\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add machine ID\\\"\\n          (click)=\\\"addMachineID()\\\">\\n          <mdl-icon>add</mdl-icon>\\n        </button>\\n      </mdl-card-actions>\\n\\n    </mdl-card>\\n  </div>\\n\\n  <div *ngIf=\\\"edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\n      <mdl-card-title>\\n        <h2 mdl-card-title-text>Energies for {{currentSettings.machine}}</h2>\\n      </mdl-card-title>\\n        <mdl-list>\\n          <mdl-list-item *ngFor=\\\"let energy of machineSpecificationService.currentSpecification.energy\\\" lines=\\\"3\\\">\\n            <mdl-list-item-primary-content>\\n              <span>{{energy}} MeV</span>\\n              <mdl-list-item-text-body>R50: {{machineSpecificationService.returnCurrentR50(energy)}} cm</mdl-list-item-text-body>\\n            </mdl-list-item-primary-content>\\n            <mdl-list-item-secondary-action>\\n              <!--<button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\n              </button>-->\\n            </mdl-list-item-secondary-action>\\n          </mdl-list-item>\\n        </mdl-list>\\n\\n      <mdl-card-actions mdl-card-border>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"New Energy (MeV)\\\"\\n          [(ngModel)]=\\\"newEnergy\\\"\\n          (input)=\\\"checkNewEnergyInput()\\\"\\n          (keyup.enter)=\\\"addEnergy()\\\"\\n          floating-label\\n          style=\\\"width:100%\\\"></mdl-textfield>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"R50 for New Energy (cm)\\\"\\n          [(ngModel)]=\\\"newR50\\\"\\n          (input)=\\\"checkNewR50Input()\\\"\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add energy\\\"\\n          (keyup.enter)=\\\"addEnergy()\\\"\\n          floating-label\\n          style=\\\"width:70%\\\"></mdl-textfield>\\n        <button \\n          [disabled]=\\\"!newEnergySetValid\\\" \\n          mdl-button \\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add energy\\\"\\n          mdl-button-type=\\\"mini-fab\\\"\\n          (click)=\\\"addEnergy()\\\">\\n          <mdl-icon>add</mdl-icon>\\n        </button>\\n      </mdl-card-actions>\\n    </mdl-card>\\n  </div>\\n\\n  <div *ngIf=\\\"edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\n      <mdl-card-title>\\n        <h2 mdl-card-title-text>Applicators for {{currentSettings.machine}}</h2>\\n      </mdl-card-title>\\n        <mdl-list>\\n          <mdl-list-item *ngFor=\\\"let applicator of machineSpecificationService.currentSpecification.applicator\\\">\\n            <mdl-list-item-primary-content>\\n              <mdl-list-item-text-body>{{applicator}}</mdl-list-item-text-body>\\n            </mdl-list-item-primary-content>\\n            <mdl-list-item-secondary-action>\\n              <!--<button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\n              </button>-->\\n            </mdl-list-item-secondary-action>\\n          </mdl-list-item>\\n        </mdl-list>\\n\\n      <mdl-card-actions mdl-card-border>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"New Applicator\\\"\\n          [(ngModel)]=\\\"newApplicator\\\"\\n          (input)=\\\"checkNewApplicatorInput()\\\"\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add applicator\\\"\\n          (keyup.enter)=\\\"addApplicator()\\\"\\n          floating-label\\n          style=\\\"width:70%\\\"></mdl-textfield>\\n        <button \\n          [disabled]=\\\"!newApplicatorValid\\\" \\n          mdl-button \\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add applicator\\\"\\n          mdl-button-type=\\\"mini-fab\\\"\\n          (click)=\\\"addApplicator()\\\">\\n          <mdl-icon>add</mdl-icon>\\n        </button>\\n      </mdl-card-actions>\\n    </mdl-card>\\n  </div>\\n\\n  <div *ngIf=\\\"edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\n      <mdl-card-title>\\n        <h2 mdl-card-title-text>SSDs for {{currentSettings.machine}}</h2>\\n      </mdl-card-title>\\n        <mdl-list>\\n          <mdl-list-item *ngFor=\\\"let ssd of this.machineSpecificationService.currentSpecification.ssd\\\">\\n            <mdl-list-item-primary-content>\\n              <mdl-list-item-text-body>{{ssd}} cm</mdl-list-item-text-body>\\n            </mdl-list-item-primary-content>\\n            <mdl-list-item-secondary-action>\\n              <!--<button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\n              </button>-->\\n            </mdl-list-item-secondary-action>\\n          </mdl-list-item>\\n        </mdl-list>\\n\\n      <mdl-card-actions mdl-card-border>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"New SSD (cm)\\\"\\n          [(ngModel)]=\\\"newSSD\\\"\\n          (input)=\\\"checkNewSSDInput()\\\"\\n          (keyup.enter)=\\\"addSSD()\\\"\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add ssd\\\"\\n          floating-label\\n          style=\\\"width:70%\\\"></mdl-textfield>\\n        <button \\n          [disabled]=\\\"!newSSDValid\\\" \\n          mdl-button \\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add ssd\\\"\\n          mdl-button-type=\\\"mini-fab\\\"\\n          (click)=\\\"addSSD()\\\">\\n          <mdl-icon>add</mdl-icon>\\n        </button>\\n      </mdl-card-actions>\\n    </mdl-card>\\n  </div>\\n\\n\\n  <!--<div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Raw specification data editing (optional)</h5>\\n    <p>\\n      If you desire you may edit the raw machine specifications in its raw format below. \\n      Currently error checking on this raw input is not implemented.\\n      Incorrectly editing the data below may cause the web app not to function.\\n      Input data above to determine the data structure required.</p>\\n    <my-json-edit\\n      [input]=\\\"specifications\\\"\\n      (inputUpdated)=\\\"changeSpecifications($event)\\\"\\n      buttonText=\\\"Update Specifications\\\">\\n    </my-json-edit>\\n  </div>-->\\n\\n</div>\\n\\n\";\n\n/***/ },\n/* 160 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(41);\n\tvar insert_data_1 = __webpack_require__(128);\n\tvar title_service_1 = __webpack_require__(131);\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar js_yaml_1 = __webpack_require__(161);\n\t// declare var yaml: any;\n\t// declare var pypyjs: any;\n\tvar DicomComponent = (function () {\n\t    function DicomComponent(myTitleService, dataPersistenceService, router) {\n\t        this.myTitleService = myTitleService;\n\t        this.dataPersistenceService = dataPersistenceService;\n\t        this.router = router;\n\t        this.dicomExitCode = 1;\n\t        this.reader = new FileReader();\n\t    }\n\t    DicomComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        window['dicomData'] = ' ';\n\t        window['dicomLoadStatus'] = 0;\n\t        this.reader.onload = function () { return _this.onceFileIsLoaded(); };\n\t        this.dataPersistenceService.loadDicomInsertList()\n\t            .then(function (result) {\n\t            _this.insertList = result;\n\t        });\n\t        Module.print = this.sendDicomDumpToGlobalVariable;\n\t        this.myTitleService.setTitle('Dicom');\n\t        // pypyjs.exec(\"import json; print json.dumps({'hello': 'world'})\")\n\t        // pypyjs.exec(\"import dicom; print json.dumps({'hello': 'world'})\")\n\t    };\n\t    DicomComponent.prototype.sendDicomDumpToGlobalVariable = function (print) {\n\t        window['dicomData'] = window['dicomData'] + '\\n' + print;\n\t    };\n\t    DicomComponent.prototype.updateDicomWarning = function () {\n\t        var status = Number(window['dicomLoadStatus']);\n\t        if (status == 0) {\n\t            this.getBlockDataButton.disabled = false;\n\t            this.dicomWarning = null;\n\t        }\n\t        else {\n\t            this.getBlockDataButton.disabled = true;\n\t            this.dicomWarning = 'An error occured while trying to find the block data within the provided Dicom file.';\n\t        }\n\t    };\n\t    DicomComponent.prototype.onceFileIsLoaded = function () {\n\t        var content = new Int8Array(this.reader.result);\n\t        console.log(content.length);\n\t        var fileName = 'dicomfile';\n\t        if (FS.isFile(fileName)) {\n\t            FS.unlink(fileName);\n\t        }\n\t        FS.writeFile(fileName, content, { encoding: \"binary\" });\n\t        var exit_orig = Module.exit;\n\t        Module.exit = function (status) {\n\t            window['dicomLoadStatus'] = status;\n\t            exit_orig(status);\n\t        };\n\t        Module.callMain(['dcmdump', fileName, '--print-all']);\n\t        Module.exit = exit_orig;\n\t        console.log(Module);\n\t        this.updateDicomWarning();\n\t        FS.unlink(fileName);\n\t    };\n\t    DicomComponent.prototype.openFile = function (event) {\n\t        if (typeof event.target !== 'undefined') {\n\t            console.log(event.target.files);\n\t            var file = event.target.files[0];\n\t            window['dicomData'] = ' ';\n\t            this.reader.readAsArrayBuffer(file);\n\t        }\n\t        else {\n\t            console.log(event);\n\t        }\n\t    };\n\t    DicomComponent.prototype.convertDicomDumpToDict = function (dump) {\n\t        // console.log(dump)\n\t        var yamlConvert = dump.replace(/\\s*#[^#\\n]*\\n/g, '\\n');\n\t        yamlConvert = yamlConvert.replace(/\\s*#[^#\\n]*$/g, '');\n\t        yamlConvert = yamlConvert.replace(/^\\n*/, '');\n\t        yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\))/g, '$1:');\n\t        yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) SQ \\(Sequence with \\w+ length #=\\d+\\)/g, '$1');\n\t        yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) na \\(Item with \\w+ length #=\\d+\\)/g, '$1');\n\t        yamlConvert = yamlConvert.replace(/ *\\(fffe,e00d\\): na \\(ItemDelimitationItem[ \\w-]*\\) *\\n/g, '');\n\t        yamlConvert = yamlConvert.replace(/ *\\(fffe,e0dd\\): na \\(SequenceDelimitationItem[ \\w-\\.]*\\) *\\n/g, '');\n\t        yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) (.*)/g, '$1 \"$2\"');\n\t        yamlConvert = yamlConvert.replace(/\\\\/g, ', ');\n\t        yamlConvert = yamlConvert.replace(/\\(fffe,e000\\):/g, ' - ');\n\t        yamlConvert = js_yaml_1.safeLoad(yamlConvert);\n\t        return yamlConvert;\n\t    };\n\t    DicomComponent.prototype.convertBlockDataToCoords = function (blockData) {\n\t        var listString = /\\[[, \\d\\.-]*\\]/.exec(blockData).toString();\n\t        var parsedData = JSON.parse('{ \"data\": ' + listString + '}');\n\t        var x = [];\n\t        var y = [];\n\t        var i = 0;\n\t        for (var _i = 0, _a = parsedData['data']; _i < _a.length; _i++) {\n\t            var num = _a[_i];\n\t            if (i % 2 == 0) {\n\t                x.push(parseFloat((num / 10).toFixed(2)));\n\t            }\n\t            else {\n\t                y.push(parseFloat((num / 10).toFixed(2)));\n\t            }\n\t            i++;\n\t        }\n\t        var insert = {\n\t            x: x,\n\t            y: y\n\t        };\n\t        return insert;\n\t    };\n\t    DicomComponent.prototype.dicomPullNumber = function (input) {\n\t        return Number(input.replace(/.*\\[([\\d\\.-]*)\\].*/, \"$1\"));\n\t    };\n\t    DicomComponent.prototype.dicomPullString = function (input) {\n\t        return input.replace(/.*\\[(.*)\\].*/, \"$1\");\n\t    };\n\t    DicomComponent.prototype.getBlockData = function () {\n\t        var _this = this;\n\t        var dicomPrint = window['dicomData'];\n\t        var dicomDict = this.convertDicomDumpToDict(dicomPrint);\n\t        // console.log(dicomDict)\n\t        var i = 0;\n\t        this.insertList = [];\n\t        var promiseList = [];\n\t        var beamSequence = dicomDict[\"(300a,00b0)\"];\n\t        for (var _i = 0, beamSequence_1 = beamSequence; _i < beamSequence_1.length; _i++) {\n\t            var beam = beamSequence_1[_i];\n\t            var temp = beam[\"(300a,00f4)\"];\n\t            if (temp != undefined) {\n\t                var insertData = new insert_data_1.InsertData();\n\t                insertData.id = i;\n\t                i++;\n\t                var blockData = beam[\"(300a,00f4)\"][0][\"(300a,0106)\"];\n\t                insertData.parameterisation.insert = this.convertBlockDataToCoords(blockData);\n\t                insertData.parameterisation.insertUpdated();\n\t                promiseList.push(this.dataPersistenceService.loadParameterisationCache(insertData.parameterisation));\n\t                try {\n\t                    insertData.applicator = this.dicomPullString(beam[\"(300a,0107)\"][0][\"(300a,0108)\"]).toLowerCase();\n\t                }\n\t                catch (err) {\n\t                    insertData.applicator = null;\n\t                    console.log(err);\n\t                }\n\t                try {\n\t                    insertData.energy = this.dicomPullNumber(beam[\"(300a,0111)\"][0][\"(300a,0114)\"]);\n\t                }\n\t                catch (err) {\n\t                    insertData.energy = null;\n\t                    console.log(err);\n\t                }\n\t                try {\n\t                    insertData.ssd = this.dicomPullNumber(beam[\"(300a,0111)\"][0][\"(300a,0130)\"]) / 10;\n\t                }\n\t                catch (err) {\n\t                    insertData.ssd = null;\n\t                    console.log(err);\n\t                }\n\t                try {\n\t                    insertData.machine = this.dicomPullString(beam[\"(300a,00b2)\"]);\n\t                }\n\t                catch (err) {\n\t                    insertData.machine = null;\n\t                    console.log(err);\n\t                }\n\t                this.insertList.push(insertData);\n\t            }\n\t        }\n\t        Promise.all(promiseList)\n\t            .then(function () {\n\t            _this.dataPersistenceService.saveDicomInsertList(_this.insertList);\n\t        });\n\t    };\n\t    DicomComponent.prototype.sendToParameterisation = function (insertData) {\n\t        var _this = this;\n\t        insertData.id = 0;\n\t        this.dataPersistenceService.saveCurrentInsertData(insertData)\n\t            .then(function () {\n\t            _this.router.navigate([\"/parameterise\"]);\n\t        });\n\t    };\n\t    __decorate([\n\t        core_1.ViewChild('dicomOutput'), \n\t        __metadata('design:type', Object)\n\t    ], DicomComponent.prototype, \"dicomOutputDir\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('getBlockDataButton'), \n\t        __metadata('design:type', Object)\n\t    ], DicomComponent.prototype, \"getBlockDataButton\", void 0);\n\t    DicomComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-dicom',\n\t            template: __webpack_require__(196),\n\t            styles: ['./dicom.component.css']\n\t        }), \n\t        __metadata('design:paramtypes', [title_service_1.TitleService, data_persistence_service_1.DataPersistenceService, router_1.Router])\n\t    ], DicomComponent);\n\t    return DicomComponent;\n\t}());\n\texports.DicomComponent = DicomComponent;\n\n\n/***/ },\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */,\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */,\n/* 189 */,\n/* 190 */,\n/* 191 */,\n/* 192 */,\n/* 193 */,\n/* 194 */,\n/* 195 */,\n/* 196 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <h5>Locally reading Dicom patient plan files</h5>\\n    <p>\\n      Use this component to read a dicom patient plan file and extract the electron insert shape. \\n      Export a dicom patient plan file that containts an electron plan from your planning system then open it using the file input box below.\\n    </p>\\n    <p>\\n      For testing purposes you can download a demo dicom file from <a href=\\\"webapp/30x16x30_RandomElectronShapes.dcm\\\">here</a>.\\n    </p>\\n    <p>\\n      This has currently been tested with Dicom files exported from Monaco and Pinnacle. \\n      If you find this doesn't work with Dicom files from your TPS please produce a dummy plan that contains at least two electron beams and one photon beam and email it to me at <a href=\\\"mailto:mail@simonbiggs.net\\\">mail@simonbiggs.net</a> so that I can implement importing from that Dicom header structure.\\n    </p>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\n    <input type='file' (change)='openFile($event)'>\\n    <div *ngIf=\\\"dicomWarning\\\">{{dicomWarning}}</div>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\n    <button #getBlockDataButton\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      [disabled]=\\\"true\\\"\\n      (click)=\\\"getBlockData()\\\">Get Dicom Insert Data\\n    </button>\\n\\n    \\n  </div>\\n\\n  <div *ngFor=\\\"let insertData of insertList\\\" class=\\\"mdl-cell mdl-cell--6-col\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\">\\n      <my-send-to-parameterisation\\n        [insertData]=insertData>\\n      </my-send-to-parameterisation>\\n\\n      <mdl-card-actions mdl-card-border>\\n        <button\\n          mdl-button \\n          mdl-ripple\\n          (click)=\\\"sendToParameterisation(insertData)\\\">Send to parameterisation           \\n        </button>\\n      </mdl-card-actions>\\n    </mdl-card>\\n    \\n\\n\\n    <!--<p>{{insert | json}}</p>-->\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <h5>Further information</h5>\\n    <p>This Dicom loader does not send the Dicom file off to a server. The entire reading of the dicom file is done within javascript.\\n    You can confirm this yourself by using the chrome web browser, pressing 'Ctrl + Shift + I'\\n    and then clicking on the network tab. When the file is chosen, then the block data is pulled and sent to parameterisation,\\n    at no point in this interaction is there network traffic.</p>\\n\\n    <p>The only data that will be sent to the server will be on either the paremeterisation tab or the model tab, and this data will\\n      just consist of x and y coordinates or widths, lengths, and factors.\\n    </p>\\n  </div>\\n</div>\";\n\n/***/ },\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(41);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar angulartics2_1 = __webpack_require__(69);\n\tvar angulartics2_google_analytics_1 = __webpack_require__(29);\n\tvar electron_api_service_1 = __webpack_require__(129);\n\tvar title_service_1 = __webpack_require__(131);\n\tvar AppComponent = (function () {\n\t    function AppComponent(electronApiService, myTitleService, router, title, angulartics2, angulartics2GoogleAnalytics) {\n\t        var _this = this;\n\t        this.electronApiService = electronApiService;\n\t        this.myTitleService = myTitleService;\n\t        this.router = router;\n\t        this.title = title;\n\t        router.events\n\t            .filter(function (event) { return event instanceof router_1.NavigationEnd; })\n\t            .subscribe(function () {\n\t            _this.pageTitle = _this.myTitleService.getTitle();\n\t            _this.title.setTitle(_this.myTitleService.getTitle() +\n\t                ' | Electron Insert Factor Modelling');\n\t        });\n\t    }\n\t    AppComponent.prototype.ngOnInit = function () {\n\t        var redirect = sessionStorage['redirect'];\n\t        delete sessionStorage['redirect'];\n\t        if (redirect && redirect != location.href) {\n\t            history.replaceState(null, null, redirect);\n\t            this.router.navigate([redirect]);\n\t        }\n\t        this.electronApiService.wakeUpServer();\n\t        this.pageTitle = this.myTitleService.getTitle();\n\t        this.title.setTitle(this.myTitleService.getTitle() +\n\t            ' | Electron Insert Factor Modelling');\n\t    };\n\t    AppComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-app',\n\t            template: __webpack_require__(198),\n\t        }), \n\t        __metadata('design:paramtypes', [electron_api_service_1.ElectronApiService, title_service_1.TitleService, router_1.Router, platform_browser_1.Title, angulartics2_1.Angulartics2, angulartics2_google_analytics_1.Angulartics2GoogleAnalytics])\n\t    ], AppComponent);\n\t    return AppComponent;\n\t}());\n\texports.AppComponent = AppComponent;\n\n\n/***/ },\n/* 198 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\\n<!--<md-sidenav-layout>\\n\\n  <md-sidenav #sidenav mode=\\\"side\\\" class=\\\"app-sidenav\\\">\\n    <nav class=\\\"mdl-navigation\\\">\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" href>Home</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/export-import\\\" routerLinkActive=\\\"active\\\" href>Export / Import</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\" href>Machine specifications</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\" href>Dicom shape extraction</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\" href>Parameterise inserts</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\" href>Model insert factors</a>\\n    </nav>\\n  </md-sidenav>\\n\\n  <md-toolbar color=\\\"primary\\\">\\n    <button class=\\\"app-icon-button\\\" (click)=\\\"sidenav.toggle()\\\">\\n      <i class=\\\"material-icons app-toolbar-menu\\\">menu</i>\\n    </button>\\n\\n    {{pageTitle}}\\n\\n    <span class=\\\"app-toolbar-filler\\\"></span>\\n    <button md-button (click)=\\\"isDarkTheme = !isDarkTheme\\\">TOGGLE DARK THEME</button>\\n  </md-toolbar>\\n\\n  <div class=\\\"app-content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n\\n\\n</md-sidenav-layout>-->\\n\\n\\n<mdl-layout mdl-layout-fixed-drawer mdl-layout-fixed-header>\\n  <mdl-layout-header>\\n    <mdl-layout-header-row>\\n      <mdl-layout-title>{{pageTitle}}</mdl-layout-title>\\n    </mdl-layout-header-row>\\n  </mdl-layout-header>\\n  <mdl-layout-drawer>\\n    <mdl-layout-title>Electron Factors</mdl-layout-title>\\n    <nav class=\\\"mdl-navigation\\\">\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" href>Home</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\" href>Machine specifications</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\" href>Dicom shape extraction</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\" href>Parameterise inserts</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\" href>Create electron model</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/use-model\\\" routerLinkActive=\\\"active\\\" href>Use electron model</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/storage\\\" routerLinkActive=\\\"active\\\" href>Storage management</a>\\n    </nav>\\n  </mdl-layout-drawer>\\n  <mdl-layout-content>\\n\\n    <router-outlet></router-outlet>\\n\\n  </mdl-layout-content>\\n</mdl-layout>\";\n\n/***/ },\n/* 199 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar insert_data_1 = __webpack_require__(128);\n\tvar PlotComponent = (function () {\n\t    function PlotComponent() {\n\t        this.insert_x = null;\n\t        this.insert_y = null;\n\t        this.circle = null;\n\t        this.ellipse = null;\n\t        this.enabled = true;\n\t        this.plot_width = 300;\n\t        this.plot_height = 300;\n\t        this.jsonValid = true;\n\t        this.plt = Bokeh.Plotting;\n\t        this.tools = 'pan,crosshair,wheel_zoom,box_zoom,reset,save';\n\t        this.xrange = Bokeh.Range1d(-6, 6);\n\t        this.yrange = Bokeh.Range1d(-6, 6);\n\t        this.fig = this.plt.figure({\n\t            title: 'Electron Insert Plot', tools: this.tools,\n\t            x_range: this.xrange, y_range: this.yrange,\n\t            plot_width: 300, plot_height: 300\n\t        });\n\t        this.source = new Bokeh.ColumnDataSource();\n\t        this.doc = new Bokeh.Document();\n\t    }\n\t    PlotComponent.prototype.ngOnChanges = function () {\n\t        this.jsonValid = false;\n\t        this.tempSource = {\n\t            \"xs\": [[0], [0], [0]],\n\t            \"ys\": [[0], [0], [0]],\n\t            \"colour\": [\"navy\", \"firebrick\", \"green\"]\n\t        };\n\t        var xAll = [];\n\t        var yAll = [];\n\t        if (this.enabled) {\n\t            if (this.insert_x != null && this.insert_y != null) {\n\t                this.tempSource.xs[0] = this.insert_x.concat(this.insert_x[0]);\n\t                this.tempSource.ys[0] = this.insert_y.concat(this.insert_y[0]);\n\t                xAll = xAll.concat(this.tempSource.xs[0]);\n\t                yAll = yAll.concat(this.tempSource.ys[0]);\n\t            }\n\t            if (this.circle) {\n\t                if ('x' in this.circle && 'y' in this.circle) {\n\t                    this.tempSource.xs[1] = this.circle.x;\n\t                    this.tempSource.ys[1] = this.circle.y;\n\t                    xAll = xAll.concat(this.tempSource.xs[1]);\n\t                    yAll = yAll.concat(this.tempSource.ys[1]);\n\t                }\n\t            }\n\t            if (this.ellipse) {\n\t                if ('x' in this.ellipse && 'y' in this.ellipse) {\n\t                    this.tempSource.xs[2] = this.ellipse.x;\n\t                    this.tempSource.ys[2] = this.ellipse.y;\n\t                    xAll = xAll.concat(this.tempSource.xs[2]);\n\t                    yAll = yAll.concat(this.tempSource.ys[2]);\n\t                }\n\t            }\n\t        }\n\t        var xMax = Math.max.apply(Math, xAll);\n\t        var xMin = Math.min.apply(Math, xAll);\n\t        var yMax = Math.max.apply(Math, yAll);\n\t        var yMin = Math.min.apply(Math, yAll);\n\t        var range = Math.max(xMax - xMin, yMax - yMin) * 1.1;\n\t        var sqXMax = (xMax + xMin) / 2 + range / 2;\n\t        var sqXMin = (xMax + xMin) / 2 - range / 2;\n\t        var sqYMax = (yMax + yMin) / 2 + range / 2;\n\t        var sqYMin = (yMax + yMin) / 2 - range / 2;\n\t        this.fig.attributes.x_range.start = sqXMin;\n\t        this.fig.attributes.x_range.end = sqXMax;\n\t        this.fig.attributes.y_range.start = sqYMin;\n\t        this.fig.attributes.y_range.end = sqYMax;\n\t        // this.fig.update_range();\n\t        // console.log(this.fig);\n\t        this.source.data = this.tempSource;\n\t    };\n\t    PlotComponent.prototype.ngAfterViewInit = function () {\n\t        // this.ngOnChanges();\n\t        this.fig.multi_line({ field: 'xs' }, { field: 'ys' }, {\n\t            source: this.source,\n\t            line_width: 2,\n\t            color: { field: 'colour' }\n\t        });\n\t        this.doc.add_root(this.fig);\n\t        Bokeh.embed.add_document_standalone(this.doc, this.bokehplot.nativeElement);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], PlotComponent.prototype, \"insert_x\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], PlotComponent.prototype, \"insert_y\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', insert_data_1.Coordinates)\n\t    ], PlotComponent.prototype, \"circle\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', insert_data_1.Coordinates)\n\t    ], PlotComponent.prototype, \"ellipse\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], PlotComponent.prototype, \"enabled\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], PlotComponent.prototype, \"plot_width\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], PlotComponent.prototype, \"plot_height\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('bokehplot'), \n\t        __metadata('design:type', Object)\n\t    ], PlotComponent.prototype, \"bokehplot\", void 0);\n\t    PlotComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-plot',\n\t            template: __webpack_require__(200)\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], PlotComponent);\n\t    return PlotComponent;\n\t}());\n\texports.PlotComponent = PlotComponent;\n\n\n/***/ },\n/* 200 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div \\n    class=\\\"bk-root\\\" \\n    [style.width]=\\\"plot_width + 'px'\\\" \\n    [style.height]=\\\"plot_height + 'px'\\\">\\n  <div #bokehplot></div>\\n</div>\\n\";\n\n/***/ },\n/* 201 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar bokeh_pcolour_1 = __webpack_require__(202);\n\tvar BokehCreateModelComponent = (function (_super) {\n\t    __extends(BokehCreateModelComponent, _super);\n\t    function BokehCreateModelComponent() {\n\t        _super.apply(this, arguments);\n\t        this.title = \"Figure Title\";\n\t        this.plot_width = 300;\n\t        this.plot_height = 300;\n\t        this.scatter_z = [0.5];\n\t        this.enabled = true;\n\t    }\n\t    BokehCreateModelComponent.prototype.ngOnChanges = function () {\n\t        this.updateHoverData();\n\t        this.runAllUpdates();\n\t    };\n\t    BokehCreateModelComponent.prototype.updateHoverData = function () {\n\t        if (this.pcolour_data.x != this.pcolour_x) {\n\t            this.pcolour_hover_width = [];\n\t            for (var _i = 0, _a = this.pcolour_x; _i < _a.length; _i++) {\n\t                var x = _a[_i];\n\t                this.pcolour_hover_width.push(x.toFixed(1));\n\t            }\n\t        }\n\t        if (this.pcolour_data.y != this.pcolour_y) {\n\t            this.pcolour_hover_length = [];\n\t            for (var _b = 0, _c = this.pcolour_y; _b < _c.length; _b++) {\n\t                var y = _c[_b];\n\t                this.pcolour_hover_length.push(y.toFixed(1));\n\t            }\n\t        }\n\t        if (this.pcolour_data.z != this.pcolour_z) {\n\t            this.pcolour_hover_predicted_factor = [];\n\t            for (var _d = 0, _e = this.pcolour_z; _d < _e.length; _d++) {\n\t                var z = _e[_d];\n\t                this.pcolour_hover_predicted_factor.push((Math.round(z * 1000) / 1000).toFixed(3));\n\t            }\n\t        }\n\t    };\n\t    BokehCreateModelComponent.prototype.ngAfterViewInit = function () {\n\t        var hover_tool = new Bokeh.HoverTool({\n\t            tooltips: [\n\t                [\"Width\", \" @hover_width cm\"],\n\t                [\"Length\", \" @hover_length cm\"],\n\t                [\"Predicted Factor\", \" @hover_predicted_factor\"]\n\t            ],\n\t            renderers: [\n\t                this.pcolour_renderer\n\t            ]\n\t        });\n\t        this.fig.add_tools(hover_tool);\n\t        this.doc.add_root(this.fig);\n\t        Bokeh.embed.add_document_standalone(this.doc, this.bokehplot.nativeElement);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], BokehCreateModelComponent.prototype, \"title\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], BokehCreateModelComponent.prototype, \"plot_width\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], BokehCreateModelComponent.prototype, \"plot_height\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehCreateModelComponent.prototype, \"scatter_x\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehCreateModelComponent.prototype, \"scatter_y\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehCreateModelComponent.prototype, \"scatter_z\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehCreateModelComponent.prototype, \"pcolour_x\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehCreateModelComponent.prototype, \"pcolour_y\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehCreateModelComponent.prototype, \"pcolour_z\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], BokehCreateModelComponent.prototype, \"enabled\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('bokehplot'), \n\t        __metadata('design:type', Object)\n\t    ], BokehCreateModelComponent.prototype, \"bokehplot\", void 0);\n\t    BokehCreateModelComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-bokeh-create-model',\n\t            template: __webpack_require__(200)\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], BokehCreateModelComponent);\n\t    return BokehCreateModelComponent;\n\t}(bokeh_pcolour_1.BokehPcolour));\n\texports.BokehCreateModelComponent = BokehCreateModelComponent;\n\n\n/***/ },\n/* 202 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar BokehPcolour = (function () {\n\t    function BokehPcolour() {\n\t        this.title = \"Figure Title\";\n\t        this.plot_width = 300;\n\t        this.plot_height = 300;\n\t        this.scatter_z = [0.5];\n\t        this.enabled = true;\n\t        this.pcolour_hover_width = [];\n\t        this.pcolour_hover_length = [];\n\t        this.pcolour_hover_predicted_factor = [];\n\t        this.scatter_hover_width = [];\n\t        this.scatter_hover_length = [];\n\t        this.scatter_hover_area = [];\n\t        this.scatter_hover_measured_factor = [];\n\t        this.scatter_hover_predicted_factor = [];\n\t        this.plt = Bokeh.Plotting;\n\t        this.tools = 'pan,crosshair,wheel_zoom,box_zoom,reset,save';\n\t        this.old_scatter_z = [];\n\t        this.old_pcolour_z = [];\n\t        this.scatter_c = [];\n\t        this.pcolour_c = [];\n\t        this.scatter_data = {\n\t            x: [],\n\t            y: [],\n\t            z: [],\n\t            hover_width: [],\n\t            hover_length: [],\n\t            hover_area: [],\n\t            hover_measured_factor: [],\n\t            hover_predicted_factor: [],\n\t            c: []\n\t        };\n\t        this.scatter_source = new Bokeh.ColumnDataSource({\n\t            data: this.scatter_data\n\t        });\n\t        this.pcolour_data = {\n\t            x: [],\n\t            y: [],\n\t            z: [],\n\t            hover_width: [],\n\t            hover_length: [],\n\t            hover_predicted_factor: [],\n\t            c: []\n\t        };\n\t        this.pcolour_source = new Bokeh.ColumnDataSource({\n\t            data: this.pcolour_data\n\t        });\n\t        this.doc = new Bokeh.Document();\n\t        this.viridis_hex = [\n\t            \"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"];\n\t        this.colour_mapper = new Bokeh.LinearColorMapper({\n\t            palette: this.viridis_hex\n\t        });\n\t        this.ticker = new Bokeh.BasicTicker();\n\t        this.colour_bar = new Bokeh.ColorBar({\n\t            ticker: this.ticker,\n\t            label_standoff: 7,\n\t            location: [-6, 0]\n\t        });\n\t    }\n\t    BokehPcolour.prototype.ngOnInit = function () {\n\t        this.figureInitialise();\n\t    };\n\t    BokehPcolour.prototype.figureInitialise = function () {\n\t        this.fig = this.plt.figure({\n\t            title: this.title, tools: this.tools,\n\t            plot_width: this.plot_width, plot_height: this.plot_height\n\t        });\n\t        this.pcolour_renderer = this.fig.rect({ field: 'x' }, { field: 'y' }, 0.1, 0.1, {\n\t            source: this.pcolour_source,\n\t            color: { field: 'c' }\n\t        });\n\t        this.scatter_renderer = this.fig.circle({ field: 'x' }, { field: 'y' }, {\n\t            source: this.scatter_source,\n\t            size: 15,\n\t            line_color: 'black',\n\t            fill_color: { field: 'c' },\n\t            line_width: 2\n\t        });\n\t        this.fig.add_layout(this.colour_bar, 'left');\n\t    };\n\t    BokehPcolour.prototype.runAllUpdates = function () {\n\t        this.updateScatterData();\n\t        this.updatePcolourData();\n\t        this.updateScatterColour();\n\t        this.updateSourceData();\n\t        this.updateFigureDimensions();\n\t    };\n\t    BokehPcolour.prototype.updateScatterData = function () {\n\t        this.scatter_data = {\n\t            x: this.scatter_x,\n\t            y: this.scatter_y,\n\t            z: this.scatter_z,\n\t            hover_width: this.scatter_hover_width,\n\t            hover_length: this.scatter_hover_length,\n\t            hover_area: this.scatter_hover_area,\n\t            hover_measured_factor: this.scatter_hover_measured_factor,\n\t            hover_predicted_factor: this.scatter_hover_predicted_factor,\n\t            c: this.scatter_c\n\t        };\n\t    };\n\t    BokehPcolour.prototype.updatePcolourData = function () {\n\t        this.pcolour_data = {\n\t            x: this.pcolour_x,\n\t            y: this.pcolour_y,\n\t            z: this.pcolour_z,\n\t            hover_width: this.pcolour_hover_width,\n\t            hover_length: this.pcolour_hover_length,\n\t            hover_predicted_factor: this.pcolour_hover_predicted_factor,\n\t            c: this.pcolour_c\n\t        };\n\t    };\n\t    BokehPcolour.prototype.updateScatterColour = function () {\n\t        if (this.old_scatter_z != this.scatter_z || this.old_pcolour_z != this.pcolour_z) {\n\t            var allZ = this.scatter_z.concat(this.pcolour_z);\n\t            this.vmin = Math.min.apply(Math, allZ);\n\t            this.vmax = Math.max.apply(Math, allZ);\n\t            this.colour_mapper.low = this.vmin;\n\t            this.colour_mapper.high = this.vmax;\n\t            this.colour_bar.color_mapper = this.colour_mapper;\n\t            this.scatter_c = this.colour_mapper.v_compute(this.scatter_z);\n\t            this.pcolour_c = this.colour_mapper.v_compute(this.pcolour_z);\n\t            this.scatter_data.c = this.scatter_c;\n\t            this.pcolour_data.c = this.pcolour_c;\n\t            this.old_scatter_z = this.scatter_z;\n\t            this.old_pcolour_z = this.pcolour_z;\n\t            if (this.scatter_data.c.length < this.scatter_data.x.length) {\n\t                var difference = this.scatter_data.x.length - this.scatter_data.c.length;\n\t                for (var i = 0; i < difference; i++) {\n\t                    this.scatter_data.c.push('#ffffff');\n\t                }\n\t            }\n\t        }\n\t    };\n\t    BokehPcolour.prototype.updateSourceData = function () {\n\t        if (this.scatter_source.data != this.scatter_data) {\n\t            this.scatter_source.data = this.scatter_data;\n\t        }\n\t        if (this.pcolour_source.data != this.pcolour_data) {\n\t            this.pcolour_source.data = this.pcolour_data;\n\t        }\n\t    };\n\t    BokehPcolour.prototype.updateFigureDimensions = function () {\n\t        if (this.fig != null) {\n\t            if (this.fig.width != this.plot_width) {\n\t                if (this.plot_width < 200) {\n\t                    this.fig.width = 200;\n\t                }\n\t                else {\n\t                    this.fig.width = this.plot_width;\n\t                }\n\t            }\n\t            if (this.fig.height != this.plot_height) {\n\t                this.fig.height = this.plot_height;\n\t            }\n\t        }\n\t    };\n\t    return BokehPcolour;\n\t}());\n\texports.BokehPcolour = BokehPcolour;\n\n\n/***/ },\n/* 203 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar bokeh_pcolour_1 = __webpack_require__(202);\n\tvar BokehUseModelComponent = (function (_super) {\n\t    __extends(BokehUseModelComponent, _super);\n\t    function BokehUseModelComponent() {\n\t        _super.apply(this, arguments);\n\t        this.title = \"Figure Title\";\n\t        this.plot_width = 300;\n\t        this.plot_height = 300;\n\t        this.scatter_z = [0.5];\n\t        this.enabled = true;\n\t        this.predicted_factor = [];\n\t        this.area = [];\n\t        this.old_area = [];\n\t        this.old_predicted_factor = [];\n\t    }\n\t    BokehUseModelComponent.prototype.ngOnChanges = function () {\n\t        this.updateHoverData();\n\t        this.runAllUpdates();\n\t    };\n\t    BokehUseModelComponent.prototype.updateHoverData = function () {\n\t        if (this.scatter_data.x != this.scatter_x) {\n\t            this.scatter_hover_width = [];\n\t            for (var _i = 0, _a = this.scatter_x; _i < _a.length; _i++) {\n\t                var x = _a[_i];\n\t                this.scatter_hover_width.push((Math.round(x * 10) / 10).toFixed(1));\n\t            }\n\t        }\n\t        if (this.scatter_data.y != this.scatter_y) {\n\t            this.scatter_hover_length = [];\n\t            for (var _b = 0, _c = this.scatter_y; _b < _c.length; _b++) {\n\t                var y = _c[_b];\n\t                this.scatter_hover_length.push((Math.round(y * 10) / 10).toFixed(1));\n\t            }\n\t        }\n\t        if (this.scatter_data.z != this.scatter_z) {\n\t            this.scatter_hover_measured_factor = [];\n\t            for (var _d = 0, _e = this.scatter_z; _d < _e.length; _d++) {\n\t                var z = _e[_d];\n\t                this.scatter_hover_measured_factor.push((Math.round(z * 1000) / 1000).toFixed(3));\n\t            }\n\t            if (this.scatter_hover_measured_factor.length < this.scatter_x.length) {\n\t                var difference = this.scatter_x.length - this.scatter_hover_measured_factor.length;\n\t                for (var i = 0; i < difference; i++) {\n\t                    this.scatter_hover_measured_factor.push('Not given');\n\t                }\n\t            }\n\t        }\n\t        if (this.old_predicted_factor != this.predicted_factor) {\n\t            this.scatter_hover_predicted_factor = [];\n\t            for (var _f = 0, _g = this.predicted_factor; _f < _g.length; _f++) {\n\t                var z = _g[_f];\n\t                this.scatter_hover_predicted_factor.push((Math.round(z * 1000) / 1000).toFixed(3));\n\t            }\n\t            this.old_predicted_factor = this.predicted_factor;\n\t        }\n\t        if (this.old_area != this.area) {\n\t            this.scatter_hover_area = [];\n\t            for (var _h = 0, _j = this.area; _h < _j.length; _h++) {\n\t                var a = _j[_h];\n\t                this.scatter_hover_area.push((Math.round(a * 10) / 10).toFixed(1));\n\t            }\n\t            this.old_area = this.area;\n\t        }\n\t    };\n\t    // hover_width: <string[]> [],\n\t    // hover_length: <string[]> [],\n\t    // hover_area: <string[]> [],\n\t    // hover_measured_factor: <string[]> [],\n\t    // hover_predicted_factor: <string[]> [],\n\t    BokehUseModelComponent.prototype.ngAfterViewInit = function () {\n\t        var hover_tool = new Bokeh.HoverTool({\n\t            tooltips: [\n\t                [\"Width\", \" @hover_width cm\"],\n\t                [\"Length\", \" @hover_length cm\"],\n\t                [\"Area\", \" @hover_area cm^2\"],\n\t                [\"Measured factor\", \" @hover_measured_factor\"],\n\t                [\"Predicted factor\", \" @hover_predicted_factor\"],\n\t            ],\n\t            renderers: [\n\t                this.scatter_renderer\n\t            ]\n\t        });\n\t        this.fig.add_tools(hover_tool);\n\t        this.doc.add_root(this.fig);\n\t        Bokeh.embed.add_document_standalone(this.doc, this.bokehplot.nativeElement);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], BokehUseModelComponent.prototype, \"title\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], BokehUseModelComponent.prototype, \"plot_width\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], BokehUseModelComponent.prototype, \"plot_height\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehUseModelComponent.prototype, \"scatter_x\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehUseModelComponent.prototype, \"scatter_y\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehUseModelComponent.prototype, \"scatter_z\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehUseModelComponent.prototype, \"pcolour_x\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehUseModelComponent.prototype, \"pcolour_y\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehUseModelComponent.prototype, \"pcolour_z\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], BokehUseModelComponent.prototype, \"enabled\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehUseModelComponent.prototype, \"predicted_factor\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Array)\n\t    ], BokehUseModelComponent.prototype, \"area\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('bokehplot'), \n\t        __metadata('design:type', Object)\n\t    ], BokehUseModelComponent.prototype, \"bokehplot\", void 0);\n\t    BokehUseModelComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-bokeh-use-model',\n\t            template: __webpack_require__(200)\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], BokehUseModelComponent);\n\t    return BokehUseModelComponent;\n\t}(bokeh_pcolour_1.BokehPcolour));\n\texports.BokehUseModelComponent = BokehUseModelComponent;\n\n\n/***/ },\n/* 204 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar data_persistence_service_1 = __webpack_require__(132);\n\tvar specifications_data_service_1 = __webpack_require__(139);\n\tvar ChooseSpecificationsComponent = (function () {\n\t    function ChooseSpecificationsComponent(dataPersistenceService, machineSpecificationService) {\n\t        this.dataPersistenceService = dataPersistenceService;\n\t        this.machineSpecificationService = machineSpecificationService;\n\t        this.settingsUpdated = new core_1.EventEmitter();\n\t    }\n\t    ChooseSpecificationsComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        console.log('choose-specifications.component ngOnInit');\n\t        this.machineSpecificationService.loadData()\n\t            .then(function () {\n\t            _this.settingsUpdated.emit(_this.machineSpecificationService.currentSettings);\n\t        });\n\t    };\n\t    ChooseSpecificationsComponent.prototype.updateMachineID = function (newCurrentMachine) {\n\t        console.log('choose-specifications.component updateMachineID');\n\t        this.machineSpecificationService.currentSettings.machine = newCurrentMachine;\n\t        this.machineSpecificationService.updateCurrentSpecification();\n\t        this.machineSpecificationService.refreshCurrentSettings();\n\t        this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings);\n\t        this.settingsUpdated.emit(this.machineSpecificationService.currentSettings);\n\t    };\n\t    ChooseSpecificationsComponent.prototype.updateEnergy = function (newCurrentEnergy) {\n\t        console.log('choose-specifications.component updateEnergy');\n\t        this.machineSpecificationService.currentSettings.energy = Number(newCurrentEnergy);\n\t        this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings);\n\t        this.settingsUpdated.emit(this.machineSpecificationService.currentSettings);\n\t    };\n\t    ChooseSpecificationsComponent.prototype.updateApplicator = function (newCurrentApplicator) {\n\t        console.log('choose-specifications.component updateApplicator');\n\t        this.machineSpecificationService.currentSettings.applicator = newCurrentApplicator;\n\t        this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings);\n\t        this.settingsUpdated.emit(this.machineSpecificationService.currentSettings);\n\t    };\n\t    ChooseSpecificationsComponent.prototype.updateSSD = function (newCurrentSSD) {\n\t        console.log('choose-specifications.component updateSSD');\n\t        this.machineSpecificationService.currentSettings.ssd = Number(newCurrentSSD);\n\t        this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings);\n\t        this.settingsUpdated.emit(this.machineSpecificationService.currentSettings);\n\t    };\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], ChooseSpecificationsComponent.prototype, \"settingsUpdated\", void 0);\n\t    ChooseSpecificationsComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-choose-specifications',\n\t            template: __webpack_require__(205)\n\t        }), \n\t        __metadata('design:paramtypes', [data_persistence_service_1.DataPersistenceService, specifications_data_service_1.MachineSpecificationsService])\n\t    ], ChooseSpecificationsComponent);\n\t    return ChooseSpecificationsComponent;\n\t}());\n\texports.ChooseSpecificationsComponent = ChooseSpecificationsComponent;\n\n\n/***/ },\n/* 205 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\" *ngIf=\\\"machineSpecificationService != null && machineSpecificationService.currentSettings != null && machineSpecificationService.currentSpecification != null\\\">\\n  <div \\n      *ngIf=\\\"machineSpecificationService.machineList.length > 0\\\" \\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>Machine ID</h6>\\n    <select\\n        [(ngModel)]=\\\"machineSpecificationService.currentSettings.machine\\\"\\n        (input)=\\\"updateMachineID($event.target.value)\\\">\\n      <option *ngFor=\\\"let machine of machineSpecificationService.machineList\\\">{{machine}}</option>\\n    </select>\\n  </div>\\n\\n  <div \\n      *ngIf=\\\"machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null\\\" \\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>Energy</h6>\\n    <div *ngIf=\\\"machineSpecificationService.currentSpecification.energy != null\\\">\\n      <select\\n          [(ngModel)]=\\\"machineSpecificationService.currentSettings.energy\\\"\\n          (input)=\\\"updateEnergy($event.target.value)\\\"\\n          *ngIf=\\\"machineSpecificationService.currentSpecification.energy.length > 0\\\">\\n        <option *ngFor=\\\"let energy of machineSpecificationService.currentSpecification.energy\\\" value=\\\"{{energy}}\\\">{{energy}} MeV</option>\\n      </select>\\n    </div>\\n    <p *ngIf=\\\"machineSpecificationService.currentSpecification.energy.length == 0\\\">\\n      This machine doesn't have any energies defined. Please \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        define at least one energy.\\n      </a>\\n    </p>\\n  </div>\\n\\n  <div \\n      *ngIf=\\\"machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null\\\" \\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>Applicator</h6>\\n    <div *ngIf=\\\"machineSpecificationService.currentSpecification.applicator != null\\\">\\n      <select \\n          [(ngModel)]=\\\"machineSpecificationService.currentSettings.applicator\\\"\\n          (input)=\\\"updateApplicator($event.target.value)\\\"\\n          *ngIf=\\\"machineSpecificationService.currentSpecification.applicator.length > 0\\\">\\n        <option *ngFor=\\\"let applicator of machineSpecificationService.currentSpecification.applicator\\\">{{applicator}}</option>\\n      </select>\\n    </div>\\n    <p *ngIf=\\\"machineSpecificationService.currentSpecification.applicator.length == 0\\\">\\n      This machine doesn't have any applicators defined. Please \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        define at least one applicator.\\n      </a>\\n    </p>\\n  </div>\\n\\n  <div \\n      *ngIf=\\\"machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null\\\" \\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>SSD</h6>\\n    <div *ngIf=\\\"machineSpecificationService.currentSpecification.ssd != null\\\">\\n      <select  \\n          [(ngModel)]=\\\"machineSpecificationService.currentSettings.ssd\\\"\\n          (input)=\\\"updateSSD($event.target.value)\\\"\\n          *ngIf=\\\"machineSpecificationService.currentSpecification.ssd.length > 0\\\">\\n        <option *ngFor=\\\"let ssd of machineSpecificationService.currentSpecification.ssd\\\">{{ssd}}</option>\\n      </select>\\n    </div>\\n    <p *ngIf=\\\"machineSpecificationService.currentSpecification.ssd.length == 0\\\">\\n      This machine doesn't have an ssd defined. Please \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        define at least one ssd.\\n      </a>\\n    </p>\\n  </div>\\n</div>\\n  \\n<div class=\\\"mdl-grid\\\" *ngIf=\\\"machineSpecificationService == null || machineSpecificationService.currentSettings == null || machineSpecificationService.currentSpecification == null\\\">\\n  <div class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>Machine ID</h6>\\n    <select></select>\\n  </div>\\n</div>\";\n\n/***/ },\n/* 206 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar my_json_pipe_1 = __webpack_require__(207);\n\tvar common_1 = __webpack_require__(22);\n\tvar JsonEditComponent = (function () {\n\t    function JsonEditComponent() {\n\t        this.buttonText = \"Button\";\n\t        this.inputUpdated = new core_1.EventEmitter();\n\t        this.validationCheck = function (parsedJSON) { };\n\t        this.useMyJsonPipe = false;\n\t        this.lines = 10;\n\t        this.jsonValid = true;\n\t    }\n\t    JsonEditComponent.prototype.onInput = function (jsonInput) {\n\t        this.parseAndCheckJSON(jsonInput);\n\t    };\n\t    JsonEditComponent.prototype.ngOnInit = function () {\n\t        var value = \"\";\n\t        if (this.useMyJsonPipe) {\n\t            value = new my_json_pipe_1.MyJsonPipe().transform(this.input);\n\t        }\n\t        else {\n\t            value = new common_1.JsonPipe().transform(this.input);\n\t        }\n\t        this.lines = value.split(/\\r\\n|\\r|\\n/).length;\n\t        this.editedInput = this.input;\n\t    };\n\t    JsonEditComponent.prototype.updateInput = function () {\n\t        this.input = this.editedInput;\n\t        this.inputUpdated.emit(this.input);\n\t    };\n\t    JsonEditComponent.prototype.parseAndCheckJSON = function (jsonInput) {\n\t        var oldJsonValid = this.jsonValid;\n\t        this.jsonValid = false;\n\t        try {\n\t            var parsedJSON = JSON.parse(jsonInput);\n\t            this.validationCheck(parsedJSON);\n\t            this.editedInput = parsedJSON;\n\t            this.jsonValid = true;\n\t        }\n\t        catch (err) {\n\t            this.jsonErrorMessage = 'Error in JSON input. ' + err;\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], JsonEditComponent.prototype, \"input\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], JsonEditComponent.prototype, \"buttonText\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], JsonEditComponent.prototype, \"inputUpdated\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Function)\n\t    ], JsonEditComponent.prototype, \"validationCheck\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], JsonEditComponent.prototype, \"useMyJsonPipe\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('jsonInput'), \n\t        __metadata('design:type', Object)\n\t    ], JsonEditComponent.prototype, \"jsonInputDir\", void 0);\n\t    JsonEditComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-json-edit',\n\t            template: __webpack_require__(208),\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], JsonEditComponent);\n\t    return JsonEditComponent;\n\t}());\n\texports.JsonEditComponent = JsonEditComponent;\n\n\n/***/ },\n/* 207 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar MyJsonPipe = (function () {\n\t    function MyJsonPipe() {\n\t    }\n\t    MyJsonPipe.prototype.transform = function (input) {\n\t        var jsonText = JSON.stringify(input, null, 4);\n\t        jsonText = jsonText.replace(/(-?\\d+(\\.\\d+)?),\\n\\s*/g, \"$1, \");\n\t        jsonText = jsonText.replace(/null,\\n\\s*/g, \"null, \");\n\t        // jsonText = jsonText.replace(/:/g, \":\\n\");\n\t        return jsonText;\n\t    };\n\t    MyJsonPipe = __decorate([\n\t        core_1.Pipe({ name: 'myJson', pure: false }), \n\t        __metadata('design:paramtypes', [])\n\t    ], MyJsonPipe);\n\t    return MyJsonPipe;\n\t}());\n\texports.MyJsonPipe = MyJsonPipe;\n\n\n/***/ },\n/* 208 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<button\\n  mdl-button mdl-button-type=\\\"raised\\\" \\n  mdl-colored=\\\"primary\\\" \\n  mdl-ripple\\n  [disabled]=\\\"!jsonValid || input==editedInput\\\"\\n  (click)=\\\"updateInput()\\\">{{buttonText}} \\n</button>\\n<div *ngIf=\\\"!jsonValid\\\">\\n  {{jsonErrorMessage}}\\n</div>\\n<mdl-textfield *ngIf=\\\"!useMyJsonPipe\\\" #jsonInput\\n  [value]=\\\"input | json\\\"\\n  (input)=\\\"onInput($event.target.value)\\\"\\n  [rows]=\\\"20\\\" \\n  style=\\\"width:100%\\\">\\n</mdl-textfield>\\n<mdl-textfield *ngIf=\\\"useMyJsonPipe\\\" #jsonInput\\n  [value]=\\\"input | myJson\\\"\\n  (input)=\\\"onInput($event.target.value)\\\"\\n  [rows]=\\\"20\\\" \\n  style=\\\"width:100%\\\">\\n</mdl-textfield>\";\n\n/***/ },\n/* 209 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar insert_data_1 = __webpack_require__(128);\n\tvar angular2_mdl_1 = __webpack_require__(71);\n\tvar SendToParameterisationComponent = (function () {\n\t    function SendToParameterisationComponent() {\n\t        this.tableData = [\n\t            { machine: null, applicator: null, energy: null, ssd: null }\n\t        ];\n\t        this.tableModel = new angular2_mdl_1.MdlDefaultTableModel([\n\t            { key: 'machine', name: 'Machine', sortable: true, numeric: false },\n\t            { key: 'applicator', name: 'App', sortable: true, numeric: false },\n\t            { key: 'energy', name: 'Eng', sortable: true, numeric: true },\n\t            { key: 'ssd', name: 'SSD', sortable: true, numeric: true }\n\t        ]);\n\t    }\n\t    SendToParameterisationComponent.prototype.ngOnInit = function () {\n\t        this.tableData[0].machine = this.insertData.machine;\n\t        this.tableData[0].applicator = this.insertData.applicator;\n\t        this.tableData[0].energy = this.insertData.energy;\n\t        this.tableData[0].ssd = this.insertData.ssd;\n\t        this.tableModel.addAll(this.tableData);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', insert_data_1.InsertData)\n\t    ], SendToParameterisationComponent.prototype, \"insertData\", void 0);\n\t    SendToParameterisationComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-send-to-parameterisation',\n\t            template: __webpack_require__(210),\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], SendToParameterisationComponent);\n\t    return SendToParameterisationComponent;\n\t}());\n\texports.SendToParameterisationComponent = SendToParameterisationComponent;\n\n\n/***/ },\n/* 210 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <my-plot \\n      [insert_x]=\\\"insertData.parameterisation.insert.x\\\"\\n      [insert_y]=\\\"insertData.parameterisation.insert.y\\\"\\n      [circle]=\\\"insertData.parameterisation.circle\\\"\\n      [ellipse]=\\\"insertData.parameterisation.ellipse\\\">\\n    </my-plot>\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <mdl-table mdl-shadow=\\\"2\\\"\\n      [table-model]=\\\"tableModel\\\">\\n    </mdl-table>\\n  </div>\\n</div>\\n\\n\";\n\n/***/ },\n/* 211 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar angular2_mdl_1 = __webpack_require__(71);\n\tvar WidthLengthTableComponent = (function () {\n\t    function WidthLengthTableComponent() {\n\t        this.tableData = [\n\t            { width: null, length: null }\n\t        ];\n\t        this.tableModel = new angular2_mdl_1.MdlDefaultTableModel([\n\t            { key: 'width', name: 'Width', sortable: true, numeric: true },\n\t            { key: 'length', name: 'Length', sortable: true, numeric: true }\n\t        ]);\n\t    }\n\t    WidthLengthTableComponent.prototype.ngOnChanges = function () {\n\t        if (this.enabled) {\n\t            this.tableData[0].width = this.width;\n\t            this.tableData[0].length = this.length;\n\t        }\n\t        else {\n\t            this.tableData[0].width = null;\n\t            this.tableData[0].length = null;\n\t        }\n\t    };\n\t    WidthLengthTableComponent.prototype.ngOnInit = function () {\n\t        this.tableModel.addAll(this.tableData);\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], WidthLengthTableComponent.prototype, \"width\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], WidthLengthTableComponent.prototype, \"length\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], WidthLengthTableComponent.prototype, \"enabled\", void 0);\n\t    WidthLengthTableComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-width-length-table',\n\t            template: __webpack_require__(212),\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], WidthLengthTableComponent);\n\t    return WidthLengthTableComponent;\n\t}());\n\texports.WidthLengthTableComponent = WidthLengthTableComponent;\n\n\n/***/ },\n/* 212 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<mdl-table mdl-shadow=\\\"2\\\"\\n  [table-model]=\\\"tableModel\\\">\\n</mdl-table>\";\n\n/***/ },\n/* 213 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar localstoragemodule_1 = __webpack_require__(214);\n\tvar LocalStorageService = (function () {\n\t    function LocalStorageService() {\n\t        this.isSupported = localstoragemodule_1.LocalStorage.isSupported;\n\t        this.hasItem = localstoragemodule_1.LocalStorage.hasItem;\n\t        this.getRemainingSpace = localstoragemodule_1.LocalStorage.getRemainingSpace;\n\t        this.getMaximumSpace = localstoragemodule_1.LocalStorage.getMaximumSpace;\n\t        this.getUsedSpace = localstoragemodule_1.LocalStorage.getUsedSpace;\n\t        this.getItemUsedSpace = localstoragemodule_1.LocalStorage.getItemUsedSpace;\n\t        this.getBackup = localstoragemodule_1.LocalStorage.getBackup;\n\t        this.applyBackup = localstoragemodule_1.LocalStorage.applyBackup;\n\t        this.consoleInfo = localstoragemodule_1.LocalStorage.consoleInfo;\n\t    }\n\t    LocalStorageService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], LocalStorageService);\n\t    return LocalStorageService;\n\t}());\n\texports.LocalStorageService = LocalStorageService;\n\n\n/***/ },\n/* 214 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t/**\n\t * Check if localStorage is supported                       const isSupported: boolean\n\t * Check if localStorage has an Item                        function hasItem(key: string): boolean\n\t * Get the amount of space left in localStorage             function getRemainingSpace(): number\n\t * Get the maximum amount of space in localStorage          function getMaximumSpace(): number\n\t * Get the used space in localStorage                       function getUsedSpace(): number\n\t * Get the used space of an item in localStorage            function getItemUsedSpace(): number\n\t * Backup Assosiative Array                                 interface Backup\n\t * Get a Backup of localStorage                             function getBackup(): Backup\n\t * Apply a Backup to localStorage                           function applyBackup(backup: Backup, fClear: boolean = true, fOverwriteExisting: boolean = true)\n\t * Dump all information of localStorage in the console      function consoleInfo(fShowMaximumSize: boolean = false)\n\t */\n\tvar LocalStorage;\n\t(function (LocalStorage) {\n\t    // Copied from https://gist.github.com/CodeiSir/1fb8bd9154dfde7eb0c7\n\t    // found from http://stackoverflow.com/a/34245594\n\t    /**\n\t     * Flag set true if the Browser supports localStorage, widthout affecting it\n\t     */\n\t    LocalStorage.isSupported = (function () {\n\t        try {\n\t            var itemBackup = localStorage.getItem(\"\");\n\t            localStorage.removeItem(\"\");\n\t            localStorage.setItem(\"\", itemBackup);\n\t            if (itemBackup === null)\n\t                localStorage.removeItem(\"\");\n\t            else\n\t                localStorage.setItem(\"\", itemBackup);\n\t            return true;\n\t        }\n\t        catch (e) {\n\t            return false;\n\t        }\n\t    })();\n\t    /**\n\t     * Check if localStorage has an Item / exists with the give key\n\t     * @param key the key of the Item\n\t     */\n\t    function hasItem(key) {\n\t        return localStorage.getItem(key) !== null;\n\t    }\n\t    LocalStorage.hasItem = hasItem;\n\t    /**\n\t     * This will return the left space in localStorage without affecting it's content\n\t     * Might be slow !!!\n\t     */\n\t    function getRemainingSpace() {\n\t        var itemBackup = localStorage.getItem(\"\");\n\t        var increase = true;\n\t        var data = \"1\";\n\t        var totalData = \"\";\n\t        var trytotalData = \"\";\n\t        while (true) {\n\t            try {\n\t                trytotalData = totalData + data;\n\t                localStorage.setItem(\"\", trytotalData);\n\t                totalData = trytotalData;\n\t                if (increase)\n\t                    data += data;\n\t            }\n\t            catch (e) {\n\t                if (data.length < 2) {\n\t                    break;\n\t                }\n\t                increase = false;\n\t                data = data.substr(data.length / 2);\n\t            }\n\t        }\n\t        if (itemBackup === null)\n\t            localStorage.removeItem(\"\");\n\t        else\n\t            localStorage.setItem(\"\", itemBackup);\n\t        return totalData.length;\n\t    }\n\t    LocalStorage.getRemainingSpace = getRemainingSpace;\n\t    /**\n\t     * This function returns the maximum size of localStorage without affecting it's content\n\t     * Might be slow !!!\n\t     */\n\t    function getMaximumSpace() {\n\t        var backup = getBackup();\n\t        localStorage.clear();\n\t        var max = getRemainingSpace();\n\t        applyBackup(backup);\n\t        return max;\n\t    }\n\t    LocalStorage.getMaximumSpace = getMaximumSpace;\n\t    /**\n\t     * This will return the currently used size of localStorage\n\t     */\n\t    function getUsedSpace() {\n\t        var sum = 0;\n\t        for (var i = 0; i < localStorage.length; ++i) {\n\t            var key = localStorage.key(i);\n\t            var value = localStorage.getItem(key);\n\t            sum += key.length + value.length;\n\t        }\n\t        return sum;\n\t    }\n\t    LocalStorage.getUsedSpace = getUsedSpace;\n\t    /**\n\t     * This will return the currently used size of a given Item, returns NaN if key is not found\n\t     * @param key\n\t     */\n\t    function getItemUsedSpace(key) {\n\t        var value = localStorage.getItem(key);\n\t        if (value === null) {\n\t            return NaN;\n\t        }\n\t        else {\n\t            return key.length + value.length;\n\t        }\n\t    }\n\t    LocalStorage.getItemUsedSpace = getItemUsedSpace;\n\t    /**\n\t     * This will return a localStorage-backup (Associative-Array key->value)\n\t     */\n\t    function getBackup() {\n\t        var backup = {};\n\t        for (var i = 0; i < localStorage.length; ++i) {\n\t            var key = localStorage.key(i);\n\t            var value = localStorage.getItem(key);\n\t            backup[key] = value;\n\t        }\n\t        return backup;\n\t    }\n\t    LocalStorage.getBackup = getBackup;\n\t    /**\n\t     * This will apply a localStorage-Backup (Associative-Array key->value)\n\t     * @param backup            associative-array\n\t     * @param fClear             optional flag to clear all existing storage first. Default: true\n\t     * @param fOverwriteExisting optional flag to replace existing keys. Default: true\n\t     */\n\t    function applyBackup(backup, fClear, fOverwriteExisting) {\n\t        if (fClear === void 0) { fClear = true; }\n\t        if (fOverwriteExisting === void 0) { fOverwriteExisting = true; }\n\t        if (fClear == true) {\n\t            localStorage.clear();\n\t        }\n\t        for (var key in backup) {\n\t            if (fOverwriteExisting === false && backup[key] !== undefined) {\n\t                continue;\n\t            }\n\t            var value = backup[key];\n\t            localStorage.setItem(key, value);\n\t        }\n\t    }\n\t    LocalStorage.applyBackup = applyBackup;\n\t    /**\n\t     * This functions dumps all keys and values of the local Storage to the console,\n\t     * as well as the current size and number of items\n\t     * @param fShowMaximumSize optional, flag show maximum size of localStorage. Default: false\n\t     */\n\t    function consoleInfo(fShowMaximumSize) {\n\t        if (fShowMaximumSize === void 0) { fShowMaximumSize = false; }\n\t        var amount = 0;\n\t        var size = 0;\n\t        for (var i = 0; i < localStorage.length; ++i) {\n\t            var key = localStorage.key(i);\n\t            var value = localStorage.getItem(key);\n\t            console.log(amount, key, value);\n\t            size += key.length + value.length;\n\t            amount++;\n\t        }\n\t        console.log(\"Total entries:\", amount);\n\t        console.log(\"Total size:\", size);\n\t        if (fShowMaximumSize === true) {\n\t            var maxSize = getMaximumSpace();\n\t            console.log(\"Total size:\", maxSize);\n\t        }\n\t    }\n\t    LocalStorage.consoleInfo = consoleInfo;\n\t})(LocalStorage = exports.LocalStorage || (exports.LocalStorage = {}));\n\t/*\n\t    // Example\n\t    console.log(\"LocalStorage supported:\", LocalStorage.isSupported)// true - I hope so anyways 😉\n\t    localStorage.setItem(\"asd\", \"ASDASD\")                           // sets / overwrites the item \"asd\"\n\t    localStorage.setItem(\"asd\" + Math.random(), \"ASDASD\")           // set another item each time you refresh the page\n\t    var backup = LocalStorage.getBackup()                           // creates a backup, we will need it later!\n\t    console.log(JSON.stringify(backup))                             // this is how the backup looks like\n\t    var usedSpace = LocalStorage.getUsedSpace()                     // amount of space used right now\n\t    console.log(\"Used Space:\", usedSpace)\n\t    var maxSpace = LocalStorage.getMaximumSpace()                   // amount of maximum space aviable\n\t    console.log(\"Maximum Space:\", maxSpace)\n\t    var remSpace = LocalStorage.getRemainingSpace()                 // amount of remaining space\n\t    console.log(\"Remaining Space:\", remSpace)\n\t    console.log(\"SpaceCheck\", maxSpace === usedSpace + remSpace)    // true\n\t    console.log(\"hasItem\", LocalStorage.hasItem(\"nothis0ne\"))       // we don't have this one in our localStorage\n\t    localStorage.clear()                                            // oops, we deleted the localStorage!\n\t    console.log(\"has asd\",LocalStorage.hasItem(\"asd\"))              // item asd is lost 😒\n\t    LocalStorage.applyBackup(backup)                                // but we have a backup, restore it!\n\t    LocalStorage.consoleInfo()                                      // show all the info we have, see the backup worked 😊\n\t*/ \n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** webapp/app.e93b810c042e60aac412.js\n **/","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\n\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/main.ts\n **/","// Angular2 imports\nimport { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { FormsModule } from '@angular/forms'\nimport { HttpModule } from '@angular/http'\nimport { Title } from '@angular/platform-browser'\nimport { NgZone } from '@angular/core'\n// import {MaterialModule} from '@angular/material'\n\n// Angularitics\nimport { Angulartics2 } from 'angulartics2'\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/src/providers/angulartics2-google-analytics'\nimport { Angulartics2Module } from 'angulartics2'\nimport { Angulartics2On } from 'angulartics2/src/core/angulartics2On'\n\n// Angular2 Material Design Lite\nimport { MdlModule } from 'angular2-mdl'\n\n// My router\nimport { routing } from './app.routing'\n\n// My components\n// Root component\nimport { AppComponent }  from './app.component'\n// Bokeh components\nimport { PlotComponent } from './components/bokeh-components/plot.component'\nimport { BokehCreateModelComponent } from './components/bokeh-components/bokeh-create-model.component'\nimport { BokehUseModelComponent } from './components/bokeh-components/bokeh-use-model.component'\n// Home components\nimport { HomeComponent } from './components/home-components/home.component'\n// Speciation components\nimport { SpecificationsComponent } from './components/specification-components/specifications.component'\nimport { ChooseSpecificationsComponent } from './components/model-components/choose-specifications.component'\nimport { JsonEditComponent } from './components/specification-components/json-edit.component'\n// Dicom components\nimport { DicomComponent } from './components/dicom-components/dicom.component'\nimport { SendToParameterisationComponent } from './components/dicom-components/send-to-parameterisation.component'\n// Parameterise components\nimport { ParameteriseComponent } from './components/parameterise-components/parameterise.component'\nimport { WidthLengthTableComponent } from './components/parameterise-components/width-length-table.component'\nimport { XYInputComponent } from './components/parameterise-components/x-y-input.component'\n// Model components\nimport { WidthLengthAreaInputComponent } from './components/model-components/width-length-area-input.component'\nimport { CreateModelComponent } from './components/model-components/create-model.component'\nimport { UseModelComponent } from './components/model-components/use-model.component'\n// Storage components\nimport { StorageManagementComponent } from './components/storage-components/storage-management.component'\n// Misc components\nimport { PageNotFoundComponent } from './components/misc-components/page-not-found.component'\n\n// My pipes\n// Custom json pipe\nimport { MyJsonPipe } from './pipes/my-json.pipe'\n\n// My services\n// Data services\nimport { ModelData, ModelMeasurement, ModelGrid, Predictions, AreaLengthConversion } from './services/data-services/model-data'\nimport { CurrentSettings } from './services/data-services/current-settings'\nimport { DataPersistenceService } from './services/data-services/data-persistence.service'\nimport { LocalStorageService } from './services/data-services/local-storage.service'\nimport { MachineSpecificationsService } from './services/data-services/specifications-data.service'\n// Server api services\nimport { ElectronApiService } from './services/server-api-services/electron-api.service'\n// Utility services\nimport { TitleService } from './services/utility-services/title.service'\n\n\n@NgModule({\n  imports: [\n     BrowserModule,\n     FormsModule,\n     HttpModule,\n     MdlModule,\n    //  MaterialModule.forRoot(),\n     routing,\n     Angulartics2Module.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    ParameteriseComponent,\n    PlotComponent,\n    PageNotFoundComponent,\n    WidthLengthTableComponent,\n    MyJsonPipe,\n    HomeComponent,\n    CreateModelComponent,\n    UseModelComponent,\n    StorageManagementComponent,\n    SpecificationsComponent,\n    DicomComponent,\n    SendToParameterisationComponent,\n    JsonEditComponent,\n    BokehCreateModelComponent,\n    BokehUseModelComponent,\n    ChooseSpecificationsComponent,\n    WidthLengthAreaInputComponent,\n    XYInputComponent\n  ],\n  providers: [\n    ElectronApiService,\n    TitleService,\n    Title,\n    LocalStorageService,\n    Angulartics2GoogleAnalytics,\n    ModelData, ModelMeasurement, ModelGrid, Predictions, AreaLengthConversion,\n    DataPersistenceService,\n    CurrentSettings,\n    MachineSpecificationsService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/app.module.ts\n **/","\"use strict\";\nvar core_1 = require('@angular/core');\nvar angulartics2_1 = require('../core/angulartics2');\nvar Angulartics2GoogleAnalytics = (function () {\n    function Angulartics2GoogleAnalytics(angulartics2) {\n        var _this = this;\n        this.angulartics2 = angulartics2;\n        this.angulartics2.settings.pageTracking.trackRelativePath = true;\n        this.angulartics2.settings.ga = {\n            additionalAccountNames: [],\n            userId: null\n        };\n        this.angulartics2.pageTrack.subscribe(function (x) { return _this.pageTrack(x.path); });\n        this.angulartics2.eventTrack.subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });\n        this.angulartics2.exceptionTrack.subscribe(function (x) { return _this.exceptionTrack(x); });\n        this.angulartics2.setUsername.subscribe(function (x) { return _this.setUsername(x); });\n        this.angulartics2.setUserProperties.subscribe(function (x) { return _this.setUserProperties(x); });\n        this.angulartics2.userTimings.subscribe(function (x) { return _this.userTimings(x); });\n    }\n    Angulartics2GoogleAnalytics.prototype.pageTrack = function (path) {\n        if (typeof _gaq !== 'undefined' && _gaq) {\n            _gaq.push(['_trackPageview', path]);\n            for (var _i = 0, _a = this.angulartics2.settings.ga.additionalAccountNames; _i < _a.length; _i++) {\n                var accountName = _a[_i];\n                _gaq.push([accountName + '._trackPageview', path]);\n            }\n            ;\n        }\n        if (typeof ga !== 'undefined' && ga) {\n            if (this.angulartics2.settings.ga.userId) {\n                ga('set', '&uid', this.angulartics2.settings.ga.userId);\n            }\n            ga('send', 'pageview', path);\n            for (var _b = 0, _c = this.angulartics2.settings.ga.additionalAccountNames; _b < _c.length; _b++) {\n                var accountName = _c[_b];\n                ga(accountName + '.send', 'pageview', path);\n            }\n            ;\n        }\n    };\n    Angulartics2GoogleAnalytics.prototype.eventTrack = function (action, properties) {\n        if (!properties || !properties.category) {\n            properties = properties || {};\n            properties.category = 'Event';\n        }\n        if (properties.value) {\n            var parsed = parseInt(properties.value, 10);\n            properties.value = isNaN(parsed) ? 0 : parsed;\n        }\n        if (ga) {\n            var eventOptions = {\n                eventCategory: properties.category,\n                eventAction: action,\n                eventLabel: properties.label,\n                eventValue: properties.value,\n                nonInteraction: properties.noninteraction,\n                page: properties.page || location.hash.substring(1) || location.pathname,\n                userId: this.angulartics2.settings.ga.userId\n            };\n            this.setDimensionsAndMetrics(properties);\n            if (this.angulartics2.settings.ga.transport) {\n                ga('send', 'event', eventOptions, { transport: this.angulartics2.settings.ga.transport });\n            }\n            else {\n                ga('send', 'event', eventOptions);\n            }\n            for (var _i = 0, _a = this.angulartics2.settings.ga.additionalAccountNames; _i < _a.length; _i++) {\n                var accountName = _a[_i];\n                ga(accountName + '.send', 'event', eventOptions);\n            }\n        }\n        else if (_gaq) {\n            _gaq.push(['_trackEvent', properties.category, action, properties.label, properties.value, properties.noninteraction]);\n        }\n    };\n    Angulartics2GoogleAnalytics.prototype.exceptionTrack = function (properties) {\n        if (!properties || !properties.appId || !properties.appName || !properties.appVersion) {\n            console.error('Must be setted appId, appName and appVersion.');\n            return;\n        }\n        if (properties.fatal === undefined) {\n            console.log('No \"fatal\" provided, sending with fatal=true');\n            properties.exFatal = true;\n        }\n        properties.exDescription = properties.description;\n        ga('send', 'exception', properties);\n    };\n    Angulartics2GoogleAnalytics.prototype.setUsername = function (userId) {\n        this.angulartics2.settings.ga.userId = userId;\n    };\n    Angulartics2GoogleAnalytics.prototype.setUserProperties = function (properties) {\n        this.setDimensionsAndMetrics(properties);\n    };\n    Angulartics2GoogleAnalytics.prototype.userTimings = function (properties) {\n        if (!properties || !properties.timingCategory || !properties.timingVar || !properties.timingValue) {\n            console.error('Properties timingCategory, timingVar, and timingValue are required to be set.');\n            return;\n        }\n        if (ga) {\n            ga('send', 'timing', properties);\n        }\n    };\n    Angulartics2GoogleAnalytics.prototype.setDimensionsAndMetrics = function (properties) {\n        if (ga) {\n            for (var idx = 1; idx <= 200; idx++) {\n                if (properties['dimension' + idx.toString()]) {\n                    ga('set', 'dimension' + idx.toString(), properties['dimension' + idx.toString()]);\n                }\n                if (properties['metric' + idx.toString()]) {\n                    ga('set', 'metric' + idx.toString(), properties['metric' + idx.toString()]);\n                }\n            }\n        }\n    };\n    Angulartics2GoogleAnalytics.decorators = [\n        { type: core_1.Injectable },\n    ];\n    Angulartics2GoogleAnalytics.ctorParameters = [\n        { type: angulartics2_1.Angulartics2, },\n    ];\n    return Angulartics2GoogleAnalytics;\n}());\nexports.Angulartics2GoogleAnalytics = Angulartics2GoogleAnalytics;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angulartics2/src/providers/angulartics2-google-analytics.js\n ** module id = 29\n ** module chunks = 0\n **/","import { ModuleWithProviders }  from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/src/providers/angulartics2-google-analytics';\n\nimport { ParameteriseComponent } from './components/parameterise-components/parameterise.component';\nimport { PageNotFoundComponent } from './components/misc-components/page-not-found.component';\nimport { HomeComponent } from './components/home-components/home.component';\nimport { CreateModelComponent } from './components/model-components/create-model.component';\nimport { UseModelComponent } from './components/model-components/use-model.component'\nimport { StorageManagementComponent } from './components/storage-components/storage-management.component';\nimport { SpecificationsComponent } from './components/specification-components/specifications.component';\nimport { DicomComponent } from './components/dicom-components/dicom.component';\n\n\nconst appRoutes: Routes = [\n  {\n    path: 'home',\n    component: HomeComponent,\n    data: {\n      title: 'Home'\n    }\n  },\n  {\n    path: 'storage',\n    component: StorageManagementComponent\n  },\n  {\n    path: 'specifications',\n    component: SpecificationsComponent\n  },\n  {\n    path: 'dicom',\n    component: DicomComponent\n  },\n  {\n    path: 'parameterise',\n    component: ParameteriseComponent\n  },\n  {\n    path: 'create-model',\n    component: CreateModelComponent\n  },\n  {\n    path: 'use-model',\n    component: UseModelComponent\n  },\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'model',\n    redirectTo: 'create-model'\n  },\n  {\n    path: '**', component: PageNotFoundComponent\n  }\n];\n\nexport const appRoutingProviders: any[] = [\n  //Angulartics2GoogleAnalytics\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/app.routing.ts\n **/","import { Component, OnInit, Input, ViewChild, AfterViewInit, ApplicationRef, AfterContentInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { Parameterisation, InsertData } from '../../services/data-services/insert-data'\n\nimport { ElectronApiService } from '../../services/server-api-services/electron-api.service';\nimport { TitleService } from '../../services/utility-services/title.service';\nimport { DataPersistenceService } from '../../services/data-services/data-persistence.service'\nimport { CurrentSettings } from '../../services/data-services/current-settings'\nimport { MachineSpecification, MachineSpecificationsService } from '../../services/data-services/specifications-data.service'\nimport { ServerURLs } from '../../services/data-services/dexie.service'\n\nimport { XYInputComponent } from './x-y-input.component'\n\nimport { ModelData } from '../../services/data-services/model-data'\n\nimport { DEMO_PARAMETERISE_INPUT } from '../../services/data-services/demo-data';\n\n@Component({\n  selector: 'my-parameterise',\n  template: require('./parameterise.component.html'),\n})\nexport class ParameteriseComponent implements OnInit, AfterViewInit, AfterContentInit {\n  textInputsValid: boolean = true;\n  equalLengths: boolean = true;\n\n  serverResponseValid: boolean = true;\n  serverErrorMessage: string;\n\n  dataInFlight: boolean = false\n\n  submitDisabled: boolean = false\n\n  parameteriseURL: string\n\n  machineExists: boolean = false\n  machineSettingsExist: boolean = false\n\n  ableToAddDataToModel: boolean = false;\n  dataAlreadyExistsOnModel: boolean = false;\n\n  serverError: boolean = false;\n\n  insertData = new InsertData()\n  machineSettings: CurrentSettings\n\n  dataLoaded = false\n  viewInitialised = false\n  initialTextBoxUpdate = false\n\n  constructor(\n    private electronApiService: ElectronApiService,\n    private myTitleService: TitleService,\n    private router: Router,\n    private modelData: ModelData,\n    private dataPersistenceService: DataPersistenceService,\n    private machineSpecificationService: MachineSpecificationsService,\n    private applicationRef: ApplicationRef\n  ) { }\n\n  @ViewChild('textboxInputs') textboxInputs: XYInputComponent\n\n  ngOnInit() {\n    console.log('parameterisation.component ngOnInit')\n\n    this.myTitleService.setTitle('Parameterisation')\n    this.dataPersistenceService.loadServerUrl('parameterisation')\n    .then((serverUrl: ServerURLs) => {\n      if (serverUrl == null) {\n        this.parameteriseURL = 'http://electronapi.simonbiggs.net/parameterise'\n      }\n      else {\n        this.parameteriseURL = serverUrl.url\n      } \n    })\n\n    this.dataPersistenceService.loadCurrentInsertData(this.insertData)\n    .then(() => {\n      this.checkIfEqualLengths()\n      return this.machineSpecificationService.loadData()\n    })\n    .then(() => {\n      console.log('specifications.component ngOnInit this.machineSpecificationService.loadData() promise complete')\n      this.machineSettings = this.machineSpecificationService.currentSettings\n      this.checkMachineSettings()\n      this.checkIfCanBeSentToModel()\n      if (this.viewInitialised && !this.initialTextBoxUpdate) {\n        this.textboxInputs.triggerUpdate = true\n        this.initialTextBoxUpdate = true\n      }\n      this.dataLoaded = true\n    })\n  }\n\n  ngAfterViewInit() {\n    if (this.dataLoaded && !this.initialTextBoxUpdate) {\n      this.textboxInputs.triggerUpdate = true\n      this.initialTextBoxUpdate = true\n    }\n    this.viewInitialised = true \n\n    // this.sleep(10)\n    // .then(() => {\n    //   this.textboxInputs.triggerUpdate = true\n    //   this.applicationRef.tick()\n    // })\n  }\n\n  ngAfterContentInit() {\n    // this.sleep(10)\n    // .then(() => {\n    //   this.textboxInputs.triggerUpdate = true\n    //   this.applicationRef.tick()\n    // })\n  }\n\n  checkMachineSettings() {\n    console.log('parameterisation.component checkMachineSettings')\n    if (this.machineSpecificationService.doesMachineExist(this.insertData.machine)) {\n      this.machineExists = true\n      this.machineSettingsExist = this.machineSpecificationService.checkInsertSettingsExist(this.insertData) \n    }\n    else {\n      this.machineExists = false;\n      this.machineSettingsExist = false;\n    }\n    console.log(this.machineSettingsExist)\n  }\n\n  checkIfCanBeSentToModel() {\n    console.log('parameterisation.component checkIfCanBeSentToModel')\n    if (this.machineSettingsExist) {\n      for (let key of Object.keys(this.machineSettings)) {\n        this.machineSettings[key] = this.insertData[key]\n      }\n      this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings).then(() => {\n        console.log('parameterisation.component checkIfCanBeSentToModel this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete')\n        if (\n            this.modelData.measurement.width.indexOf(Number(this.insertData.parameterisation.width)) > -1 &&\n            this.modelData.measurement.length.indexOf(Number(this.insertData.parameterisation.length)) > -1 &&\n            this.modelData.measurement.measuredFactor.indexOf(Number(this.insertData.measuredFactor)) > -1) {\n          this.dataAlreadyExistsOnModel = true\n          this.ableToAddDataToModel = false\n        }\n        else {\n          this.dataAlreadyExistsOnModel = false\n          if (\n            Number(this.insertData.parameterisation.width) == 0 || \n            Number(this.insertData.parameterisation.length) == 0 ||\n            Number(this.insertData.measuredFactor) == 0\n          )\n          {\n            this.ableToAddDataToModel = false\n          }\n          else {\n            this.ableToAddDataToModel = true\n          }\n        }\n      })\n    }\n    else {\n      this.ableToAddDataToModel = false\n      this.dataAlreadyExistsOnModel = false\n    }\n  }\n\n  onValidTextboxChange() {\n    console.log('parameterisation.component onValidTextboxChange')\n    this.insertData.parameterisation.insertUpdated()\n    this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation)\n    .then(() => {\n      console.log('parameterisation.component onValidTextboxChange this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation) promise complete')\n      this.checkIfEqualLengths()\n      this.checkIfCanBeSentToModel()\n      return this.dataPersistenceService.saveCurrentInsertData(this.insertData)      \n    })\n    .then(() => {\n      console.log('parameterisation.component onValidTextboxChange this.dataPersistenceService.saveCurrentInsertData(this.insertData)  promise complete')\n    })\n\n  }\n\n  checkIfEqualLengths() {\n    console.log('parameterisation.component checkIfEqualLengths')\n    if (this.insertData.parameterisation.insert.x.length == this.insertData.parameterisation.insert.y.length) {\n      this.equalLengths = true\n    }\n    else {\n      this.equalLengths = false\n    }\n  }\n\n  addMeasuredFactor(measuredFactor: number) {\n    console.log('parameterisation.component addMeasuredFactor')\n    this.dataAlreadyExistsOnModel = true\n    this.ableToAddDataToModel = false\n\n    for (let key of Object.keys(this.machineSettings)) {\n      this.machineSettings[key] = this.insertData[key]\n    }\n\n    this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings)\n    .then(() => {\n      console.log('parameterisation.component addMeasuredFactor this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete')\n      this.modelData.model.reset()\n\n      this.modelData.measurement.width.push(Number(this.insertData.parameterisation.width))\n      this.modelData.measurement.length.push(Number(this.insertData.parameterisation.length))\n      this.modelData.measurement.measuredFactor.push(Number(measuredFactor))\n\n      return this.dataPersistenceService.saveModelData(this.modelData, this.machineSettings)\n    })\n    .then(() => {\n      console.log('parameterisation.component addMeasuredFactor this.dataPersistenceService.saveModelData(this.modelData, this.machineSettings) promise complete')\n      return this.dataPersistenceService.saveCurrentSettings(this.machineSettings)\n        \n    })\n    .then(() => {\n      console.log('parameterisation.component addMeasuredFactor this.dataPersistenceService.saveCurrentSettings(this.machineSettings) promise complete')\n    })\n\n  }\n\n  predictFactor() {\n    console.log('parameterisation.component predictFactor')\n    for (let key of Object.keys(this.machineSettings)) {\n      this.machineSettings[key] = this.insertData[key]\n    }\n    this.dataPersistenceService.saveCurrentSettings(this.machineSettings)\n    .then(() => {\n      console.log('parameterisation.component predictFactor this.dataPersistenceService.saveCurrentSettings(this.machineSettings) promise complete')\n      return this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings)\n    })\n    .then(() => {\n      console.log('parameterisation.component predictFactor this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete')\n      this.modelData.predictions.width.unshift(this.insertData.parameterisation.width)\n      this.modelData.predictions.length.unshift(this.insertData.parameterisation.length)\n      if (this.insertData.measuredFactor != 0 && this.insertData.measuredFactor != null) {\n        this.modelData.predictions.measuredFactor.unshift(this.insertData.measuredFactor)\n      }\n\n      return this.dataPersistenceService.saveModelData(this.modelData, this.machineSettings)\n    })\n    .then(() => {\n      console.log('parameterisation.component predictFactor this.dataPersistenceService.saveModelData(this.modelData, this.machineSettings) promise complete')\n      this.router.navigate([\"/use-model\"])\n    })\n\n\n  }\n\n  loadDemoData(): void {\n    console.log('parameterisation.component loadDemoData')\n    let insert = this.insertData.parameterisation.insert\n    this.insertData.reset()\n    this.insertData.parameterisation.insert = insert\n\n    let demoData = JSON.parse(JSON.stringify(DEMO_PARAMETERISE_INPUT));\n    this.insertData.parameterisation.insert.x = demoData.insert.x\n    this.insertData.parameterisation.insert.y = demoData.insert.y\n    this.insertData.parameterisation.insertUpdated()\n    this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation)\n    .then(() => {\n      console.log('parameterisation.component loadDemoData this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation) promise complete')\n      this.textboxInputs.triggerUpdate = true\n      this.checkIfEqualLengths()\n\n      return this.dataPersistenceService.saveCurrentInsertData(this.insertData)\n    })\n    .then(() => {\n      console.log('parameterisation.component loadDemoData this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete')\n    })\n  }\n\n  sleep(time: number) {\n    console.log('parameterisation.component sleep')\n    return new Promise((resolve) => setTimeout(resolve, time));\n  }\n\n  recursiveServerSubmit() {\n    console.log('parameterisation.component recursiveServerSubmit')\n    this.serverError = false\n\n    this.electronApiService.sendToServer(\n      this.parameteriseURL,\n      JSON.stringify(this.insertData.parameterisation.insert)\n    )\n      .then((parameterisationResult: any) => {\n        this.insertData.parameterisation.circle = parameterisationResult.circle;\n        this.insertData.parameterisation.ellipse = parameterisationResult.ellipse;\n        this.insertData.parameterisation.width = parameterisationResult.width;\n        this.insertData.parameterisation.length = parameterisationResult.length;\n        let complete = parameterisationResult.complete;\n        if (complete) {\n          this.dataInFlight = false;\n          this.serverResponseValid = true;\n          this.checkSubmitButton()\n          this.dataPersistenceService.saveParameterisationCache(this.insertData.parameterisation)\n          .then(() => {\n            console.log('parameterisation.component recursiveServerSubmit this.dataPersistenceService.saveParameterisationCache(this.insertData.parameterisation) promise complete')\n          })\n          this.dataPersistenceService.saveCurrentInsertData(this.insertData)\n          .then(() => {\n            console.log('parameterisation.component recursiveServerSubmit this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete')\n          })\n          this.checkIfCanBeSentToModel()\n          if (this.insertData.parameterisation.width == null) {\n            this.serverError = true\n          }\n        }\n        else {\n          this.sleep(500).then(() => this.recursiveServerSubmit());\n        }\n      })\n  }\n\n  insertDataChange() {\n    console.log('parameterisation.component insertDataChange')\n    this.dataPersistenceService.saveCurrentInsertData(this.insertData)\n    .then(() => {\n      console.log('parameterisation.component insertDataChange this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete')\n    })\n    this.checkMachineSettings()\n    this.checkIfCanBeSentToModel()\n  }\n\n  onSubmit() {\n    console.log('parameterisation.component onSubmit')\n    this.dataInFlight = true\n    this.checkSubmitButton()\n    this.recursiveServerSubmit()\n  }\n\n\n  onTextInputChange(testInputStatus: boolean) {\n    console.log('parameterisation.component onTextInputChange')\n    this.textInputsValid = testInputStatus;\n    this.checkSubmitButton();\n  }\n\n  checkSubmitButton() {\n    console.log('parameterisation.component checkSubmitButton')\n    if (this.dataInFlight || !this.textInputsValid ) {\n      this.submitDisabled = true;\n    }\n    else {\n      this.submitDisabled = false;\n    }\n  }\n\n  parameterisationServerChange(serverUrl: string) {\n    console.log('parameterisation.component parameterisationServerChange')\n    this.dataPersistenceService.saveServerUrl('parameterisation', serverUrl)\n    .then(() => {\n\n    })\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/parameterise-components/parameterise.component.ts\n **/","\nexport class Coordinates {\n  public x: number[]\n  public y: number[]\n\n  constructor() {\n    this.x = [0]\n    this.y = [0]\n  }\n}\n\n\nexport class Parameterisation {\n  public id: number\n  public width: number\n  public length: number\n\n  insert: Coordinates\n  circle: Coordinates\n  ellipse: Coordinates\n\n  constructor() {\n    this.insert = new Coordinates()\n    this.circle = new Coordinates()\n    this.ellipse = new Coordinates()\n  }\n\n  hash(input: string) {\n    let hash = 0, i: number, chr: number, len: number\n    if (input.length === 0) return hash\n    for (i = 0, len = input.length; i < len; i++) {\n      chr   = input.charCodeAt(i)\n      hash  = ((hash << 5) - hash) + chr\n      hash |= 0 // Convert to 32bit integer\n    }\n    return hash\n  }\n\n  insertUpdated() {\n    if (this.insert != null) {\n      this.id = this.hash(\n        '{\"x\":' + JSON.stringify(this.insert.x) + ',' +\n        '\"y\":' + JSON.stringify(this.insert.y) +\n        '}')\n    }\n    else {\n      throw new RangeError('Insert was not defined. Cannot run insert updated.')\n    }\n\n  }\n\n  reset() {\n    this.id = null\n\n    for (let key of ['insert', 'circle', 'ellipse']) {\n      this[key] = new Coordinates()\n      this[key].x = [0]\n      this[key].y = [0]\n    }\n\n    this.width = null\n    this.length = null\n  }\n}\n\n\nexport class InsertData {\n  public id: number\n  public machine: string\n  public energy: number\n  public applicator: string\n  public ssd: number\n  public measuredFactor: number\n\n  public parameterisation: Parameterisation\n\n  constructor(inputId?: number) {\n    this.parameterisation = new Parameterisation()\n    if (inputId != null) {\n      this.id = inputId\n    }\n    else {\n      this.id = 0\n    }    \n  }\n\n  reset() {\n    this.machine = null\n    this.parameterisation.reset()\n    this.energy = null\n    this.applicator = null\n    this.ssd = null\n    this.measuredFactor = null\n  }\n\n  fillFromObject(object: {}) {\n    if (object == null) {\n      this.reset()\n    }\n    else {\n      for (let key of ['machine', 'energy', 'applicator', 'ssd', 'measuredFactor']) {\n        this[key] = object[key]\n      }\n      this.parameterisation.insert = object['parameterisation'].insert\n      this.parameterisation.insertUpdated()\n      this.parameterisation.circle = object['parameterisation'].circle\n      this.parameterisation.ellipse = object['parameterisation'].ellipse\n      this.parameterisation.width = object['parameterisation'].width\n      this.parameterisation.length = object['parameterisation'].length\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/insert-data.ts\n **/","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class ElectronApiService {\n  // private parameteriseURL = 'http://electronapi.simonbiggs.net/parameterise';\n  // private modelURL = 'http://electronapi.simonbiggs.net/model';\n  private wakeUpURL = 'http://electronapi.simonbiggs.net/wakeup';\n\n  constructor(private http: Http) { }\n  // Initial get from server to wake it up\n  wakeUpServer() {\n    return this.http\n      .get(this.wakeUpURL).toPromise();\n  }\n\n  sendToServer(URL:string, input: string): Promise<any> {\n    return this.http\n            .post(URL, input)\n            .toPromise()\n            .then((res) => {\n              let nan: number = null;\n              return res.json()})\n            .catch(this.handleError);\n  }\n\n  private handleError(error: any) {\n    console.error('An error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/server-api-services/electron-api.service.ts\n **/","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TitleService {\n  title = 'Home';\n\n  getTitle(): string {\n    return this.title;\n  }\n\n  setTitle(title: string) {\n    this.title = title;\n  }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/utility-services/title.service.ts\n **/","import { Injectable } from '@angular/core';\n\n// import Dexie from 'dexie'\n\nimport { db, PulledFromLocalStorage, ServerURLs } from './dexie.service'\n\nimport { ModelData, ModelDataLite } from './model-data'\nimport { CurrentSettings } from './current-settings'\nimport { MachineSpecification } from './specifications-data.service'\nimport { Coordinates, Parameterisation, InsertData } from './insert-data'\n\n\n@Injectable()\nexport class DataPersistenceService {\n\n  loadCurrentSettings() {\n    console.log('data-persistence.service loadCurrentSettings')\n    let currentSettings = new CurrentSettings()\n    return db.currentSettings.toArray()\n    .then((result: CurrentSettings[]) => {\n      console.log('data-persistence.service loadCurrentSettings db.currentSettings.toArray() promise complete')\n      if (result.length == 0) {\n        for (let key of ['machine', 'energy', 'applicator', 'ssd']) {\n          currentSettings[key] = null\n        }\n      }\n      else {\n        currentSettings = result[0]\n      }\n      // console.log(currentSettings)\n      return currentSettings\n    })\n  }\n\n  saveCurrentSettings(currentSettings: CurrentSettings) {\n    console.log('data-persistence.service saveCurrentSettings')\n    return db.currentSettings.put(currentSettings)\n    .then(() => {\n      console.log('data-persistence.service saveCurrentSettings db.currentSettings.put(currentSettings) promise complete')\n    })\n  }\n\n  loadSpecificationsData() {\n    console.log('data-persistence.service loadSpecificationsData')\n    return db.specifications.toArray()\n    .then((result: MachineSpecification[]): MachineSpecification[] => {\n      console.log('data-persistence.service loadSpecificationsData db.specifications.toArray() promise complete')\n      return result\n    })\n  }\n\n  saveSpecificationsData(specification: MachineSpecification) {\n    console.log('data-persistence.service saveSpecificationsData')\n    return db.specifications.put(specification)\n    .then(() => {\n      console.log(\"data-persistence.service saveSpecificationsData db.specifications.put(specification) promise complete\")\n    })\n  }\n\n  loadModelData(modelData: ModelData, currentSettings: CurrentSettings) {\n    console.log('data-persistence.service loadModelData')\n    let storageKey = currentSettings.returnKey()\n    modelData.machineSettingsKey = storageKey\n\n    return db.modelData.get(storageKey)\n    .then((result: ModelDataLite) => {\n      console.log(\"data-persistence.service loadModelData db.modelData.get(storageKey) promise complete\")\n      if (result == null) {\n        modelData.fillFromObject({})\n      }\n      else {\n        modelData.fillFromObject(result)\n      }\n    })\n  }\n\n  saveModelData(modelData: ModelData, currentSettings: CurrentSettings) {\n    console.log('data-persistence.service saveModelData')\n    let storageKey = currentSettings.returnKey()\n    modelData.machineSettingsKey = storageKey\n\n    let modelDataLite = modelData.exportLite()\n\n    return db.modelData.put(modelDataLite)\n    .then(() => {\n      console.log(\"data-persistence.service loadModelData db.modelData.put(modelDataLite) promise complete\")\n    })\n  }\n\n  loadParameterisationCache(parameterisation: Parameterisation) {\n    console.log('data-persistence.service loadParameterisationCache')\n\n    return db.parameterisationCache.get(parameterisation.id)\n    .then((result: Parameterisation) => {\n      console.log(\"data-persistence.service loadParameterisationCache db.parameterisationCache.get(parameterisation.parameterisationKey) promise complete\")\n      if (result == null) {\n        for (let key of ['width', 'length', 'circle', 'ellipse']) {\n          parameterisation[key] = null\n        }\n      }\n      else {\n        for (let key of ['width', 'length', 'circle', 'ellipse']) {\n          parameterisation[key] = result[key]\n        }\n      }\n    })\n\n    // let localStorageObject = JSON.parse(localStorage.getItem(parameterisation.parameterisationKey))\n    // if (localStorageObject) {\n    //   for (let key of ['circle', 'ellipse']) {\n    //     parameterisation[key] = new Coordinates()\n    //     if (localStorageObject[key]) {\n          \n    //       parameterisation[key].x = localStorageObject[key].x\n    //       parameterisation[key].y = localStorageObject[key].y\n    //     }\n    //     else {\n    //       parameterisation[key].x = [0]\n    //       parameterisation[key].y = [0] \n    //     }\n    //   }\n      \n    //   parameterisation.width = localStorageObject['width']\n    //   parameterisation.length = localStorageObject['length']\n    // }\n    // else {\n    //   for (let key of ['width', 'length', 'circle', 'ellipse']) {\n    //     parameterisation[key] = null\n    //   }\n    // }\n  }\n\n  saveParameterisationCache(parameterisation: Parameterisation) {\n    console.log('data-persistence.service saveParameterisationCache')\n    return db.parameterisationCache.put(parameterisation)\n    .then(() => {\n      console.log(\"data-persistence.service saveParameterisationCache db.parameterisationCache.put(parameterisation) promise complete\")\n    })\n\n    // localStorage.setItem(\n    //   JSON.stringify(parameterisation.insert), \n    //   JSON.stringify(parameterisation)\n    // )\n  }\n\n  loadCurrentInsertData(insertData: InsertData) {\n    console.log('data-persistence.service loadCurrentInsertData')\n    // This is required because the coodinate inputs to the text boxes are not using ngModel.\n    // This work around is brittle.\n    let insert = insertData.parameterisation.insert\n\n    // let parameterisation = new Parameterisation()\n    // parameterisation.insert = insertData.parameterisation.insert\n    // parameterisation.insertUpdated()\n    // insertData.parameterisation = parameterisation\n    // this.loadParameterisationCache(insertData.parameterisation)\n\n    return db.currentInsertData.get(0)\n    .then((result: InsertData) => {\n      if (result == null) {\n        insertData.reset()\n      }\n      else {\n        insert.x = result.parameterisation.insert.x\n        insert.y = result.parameterisation.insert.y\n\n        insertData.fillFromObject(result)\n      }\n\n      insertData.parameterisation.insert = insert\n    })\n\n\n    // let localStorageInsertDataString = localStorage['last_insertData']\n    // let object = JSON.parse(localStorageInsertDataString)\n    // if (object != null) {      \n    //   insertData.fillFromObject(object)\n    //   this.loadParameterisationCache(insertData.parameterisation)\n    // }\n  }\n\n  saveCurrentInsertData(insertData: InsertData) {\n    console.log('data-persistence.service saveCurrentInsertData')\n\n    return db.currentInsertData.put(insertData)\n    .then(() => {\n      console.log(\"data-persistence.service saveCurrentInsertData db.currentInsertData.put(insertData)) promise complete\")\n    })\n\n    // localStorage.setItem(\n    //   \"last_insertData\", JSON.stringify(insertData))\n  }\n\n  loadServerUrl(purpose: string) {\n    console.log('data-persistence.service loadServerUrl')\n\n    return db.serverURLs.get(purpose)\n\n\n\n    // let url: string\n    // if (purpose == 'parameterisation') {\n    //   url = localStorage.getItem(\"parameteriseURL\")\n    //   if (url == null) {\n    //     url = 'http://electronapi.simonbiggs.net/parameterise';\n    //   }\n    // }\n\n    // if (purpose == 'model') {\n    //   url = localStorage.getItem(\"modelURL\")\n    //   if (url == null) {\n    //     url = 'http://electronapi.simonbiggs.net/model';\n    //   }\n    // }\n\n    // if (url == null) {\n    //   throw new Error(\"Url was null\")\n    // }\n\n    // return url\n\n  }\n\n  saveServerUrl(purpose:string, url: string) {\n    console.log('data-persistence.service saveServerUrl')\n    let serverUrl = new ServerURLs()\n    serverUrl.purpose = purpose\n    serverUrl.url = url\n\n    return db.serverURLs.put(serverUrl)\n\n    // if (purpose == 'parameterisation') {\n    //   localStorage.setItem(\"parameteriseURL\", url)\n    // }\n\n    // if (purpose == 'model') {\n    //   localStorage.setItem(\"modelURL\", url)\n    // }\n  }\n  \n  loadDicomInsertList() {\n    console.log('data-persistence.service loadDicomInsertList')\n\n    return db.dicomInsertList.toArray()\n    .then((result: InsertData[]): InsertData[] => {\n      console.log('data-persistence.service loadDicomInsertList db.dicomInsertList.toArray() promise complete')\n      for (let insertData of result) {\n        let parameterisation = new Parameterisation()\n        parameterisation.insert = insertData.parameterisation.insert\n        parameterisation.insertUpdated()\n        insertData.parameterisation = parameterisation\n        this.loadParameterisationCache(insertData.parameterisation)\n      }\n      return result\n    })\n    // let insertList: InsertData[]\n\n    // let insertListString = localStorage.getItem('dicom_insertList')\n    // if (insertListString) {\n    //   insertList = JSON.parse(insertListString);\n    // }\n    // else {\n    //   insertList = []\n    // }\n    // return insertList\n  }\n\n  saveDicomInsertList(insertList: InsertData[]) {\n    console.log('data-persistence.service saveDicomInsertList')\n    return db.dicomInsertList.bulkPut(insertList)\n    .then(() => {\n      console.log('data-persistence.service saveDicomInsertList db.dicomInsertList.bulkPut(insertList) promise complete')\n    })\n\n    // localStorage.setItem('dicom_insertList', JSON.stringify(insertList));\n  }\n\n  jsonTransform(input: {}): string {\n    console.log('data-persistence.service jsonTransform')\n    let jsonText = JSON.stringify(input, null, 2)\n    jsonText = jsonText.replace(/,\\s*(-?\\d+(\\.\\d+)?)/g, \", $1\");\n    jsonText = jsonText.replace(/\\n/g, \"\\n  \");\n\n    return jsonText\n  }\n\n  databaseDump() {\n    console.log('data-persistence.service databaseDump')\n    let schemaString = \"\"\n    let tablesString = \"\"\n    let tableDumps: {} = {}\n    let stringDump = \"\"\n    let promiseList: any[] = []\n\n    db.tables.forEach((table, i) => {\n      let primKeyAndIndexes = [table.schema.primKey].concat(table.schema.indexes)\n      let schemaSyntax = primKeyAndIndexes.map(function (index) { return index.src; }).join(', ')\n      schemaString = schemaString.concat(`\n` + \"      \\\"\" + table.name + \"\\\": \" + \"\\\"\" +\n        schemaSyntax + \"\\\"\" + (i < db.tables.length - 1 ? \",\" : \"\"))\n\n      tableDumps[table.name] = {}\n      promiseList.push(table.toArray((objectArray) => {\n        tableDumps[table.name] = objectArray\n      }))\n    })\n\n    return Promise.all(promiseList)\n    .then(() => {\n        stringDump = `{\n  \"databaseDetails\": {\n    \"name\": \"` + db.name +`\",\n    \"version\": ` + db.verno + `,\n    \"schema\": {` + schemaString + `\n    }\n  },\n  \"databaseContents\": ` + this.jsonTransform(tableDumps) + `\n}\n    `\n        // console.log(stringDump)\n        return stringDump\n      })\n  }\n\n  emptyDatabase() {\n    console.log('data-persistence.service emptyDatabase')\n    let promiseList: any[] = []\n    let pulledFromLocalStorage: PulledFromLocalStorage\n    db.tables.forEach((table, i) => {\n      promiseList.push(table.clear())\n    })\n\n    Promise.all(promiseList)\n    .then(() => {\n      pulledFromLocalStorage = {\n        id: 0,\n        pulledFromLocalStorage: true\n      }\n      db.pulledFromLocalStorage.add(pulledFromLocalStorage)\n    })\n  }\n\n  appendJsonToDatabase(object: {}) {\n    console.log('data-persistence.service appendJsonToDatabase')\n    let databaseContents = object['databaseContents']\n    db.tables.forEach((table, i) => {\n      table.bulkPut(databaseContents[table.name])\n    })\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/data-persistence.service.ts\n **/","import Dexie from 'dexie'\n\nimport { InsertData, Parameterisation } from './insert-data'\nimport { ModelData, ModelDataLite } from './model-data'\nimport { MachineSpecification } from './specifications-data.service'\nimport { CurrentSettings } from './current-settings'\n\n\nexport class PulledFromLocalStorage {\n  id: number\n  pulledFromLocalStorage: boolean\n}\n\n\nexport class ServerURLs {\n  purpose: string\n  url: string\n}\n\n\nexport class DexieDatabase extends Dexie {  \n  pulledFromLocalStorage: Dexie.Table<PulledFromLocalStorage, number>\n  modelData: Dexie.Table<ModelDataLite, string>\n  specifications: Dexie.Table<MachineSpecification, string>\n  currentSettings: Dexie.Table<CurrentSettings, number>\n  parameterisationCache: Dexie.Table<Parameterisation, number>\n  currentInsertData: Dexie.Table<InsertData, number>\n  serverURLs: Dexie.Table<ServerURLs, string>\n  dicomInsertList: Dexie.Table<InsertData, number>\n\n  constructor() {\n    super(\"DefaultDatabase\")\n    let db = this\n    // db.delete()\n\n    db.version(1).stores({\n      specifications: 'machine, makeAndModel, energy, R50, applicator, ssd',\n      currentSettings: 'id, machine, energy, applicator, ssd',\n      currentInsertData: 'id, machine, parameterisation, energy, applicator, ssd, measuredFactor',      \n      modelData: 'machineSettingsKey, measurement, model, predictions',\n      dicomInsertList: 'id, machine, parameterisation, energy, applicator, ssd, measuredFactor',\n      serverURLs: 'purpose, url',\n      parameterisationCache: 'id, insert, width, length, circle, ellipse',\n      pulledFromLocalStorage: 'id, pulledFromLocalStorage'\n    })\n\n    db.pulledFromLocalStorage.mapToClass(PulledFromLocalStorage)\n    db.modelData.mapToClass(ModelData)\n    db.specifications.mapToClass(MachineSpecification)\n    db.currentSettings.mapToClass(CurrentSettings)\n    db.parameterisationCache.mapToClass(Parameterisation)\n    db.currentInsertData.mapToClass(InsertData)\n    db.serverURLs.mapToClass(ServerURLs)\n    db.dicomInsertList.mapToClass(InsertData)\n    \n\n    db.pulledFromLocalStorage.toArray()\n      .then((result: PulledFromLocalStorage[]) => {\n        if (result[0] == null) {\n          this.fillDatabaseFromLocalStorage()\n        }\n        else if(result[0].pulledFromLocalStorage == false) {\n          db.specifications.clear()\n          db.modelData.clear()          \n          this.fillDatabaseFromLocalStorage()\n        }\n      })\n  }\n\n  fillDatabaseFromLocalStorage() {\n    console.log('dexie.service fillDatabaseFromLocalStorage')\n    let specifications = this.loadSpecificationsFromLocalStorage()\n    let machineList: string[] = []\n    for (let specification of specifications) {\n      machineList.push(specification.machine)\n    }\n    machineList.sort()\n    for (let i = 0; i < machineList.length - 1; i++) {\n      if (machineList[i] == machineList[i+1]) {\n        console.log(machineList)\n        throw new RangeError(\"Local storage specifications contain duplicate Machine IDs\")\n      }\n    }\n\n    let modelDataLiteArray = this.loadModelDataFromLocalStorage(specifications)\n    let machineSettingsKeys: string[] = []\n    for (let modelDataLite of modelDataLiteArray) {\n      machineSettingsKeys.push(modelDataLite.machineSettingsKey)\n    }\n    machineSettingsKeys.sort()\n    for (let i = 0; i < machineSettingsKeys.length - 1; i++) {\n      if (machineSettingsKeys[i] == machineSettingsKeys[i+1]) {\n        throw new RangeError(\"Local storage specifications contain duplicate models\")\n      }\n    }\n\n    db.specifications.bulkAdd(specifications)\n    .then(() => {\n      console.log('dexie.service fillDatabaseFromLocalStorage db.specification.bulkAdd(specifications) promise complete')\n      return db.modelData.bulkAdd(modelDataLiteArray)\n    })\n    .then(() => {\n      console.log('dexie.service fillDatabaseFromLocalStorage db.modelData.bulkAdd(modelDataLiteArray) promise complete')\n      let pulledFromLocalStorage: PulledFromLocalStorage = {\n        id: 0,\n        pulledFromLocalStorage: true\n      }\n      db.pulledFromLocalStorage.add(pulledFromLocalStorage)\n    })\n  }\n\n  testArrayOfStrings(input: string[]) {\n    console.log('dexie.service testArrayOfStrings')\n    if (input instanceof Array) {\n      input.forEach(function(item){\n        if(typeof item !== 'string'){\n          return false\n        }\n      })\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  testArrayOfNumbers(input: number[]) {\n    console.log('dexie.service testArrayOfNumbers')\n    if (input instanceof Array) {\n      input.forEach(function(item){\n        if(typeof item !== 'number'){\n          return false\n        }\n      })\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  loadSpecificationsFromLocalStorage() {\n    console.log('dexie.service loadSpecificationsFromLocalStorage')\n    let oldSpec = JSON.parse(localStorage.getItem(\"specifications\"))\n    let newSpec: MachineSpecification\n    let newSpecArray: MachineSpecification[] = []\n\n    let makeAndModel: string\n    let energy: number[]\n    let R50: number[]\n    let applicator: string[]\n    let ssd: number[]\n    \n    if (oldSpec != null) {\n      for (let machine of Object.keys(oldSpec)) {\n        makeAndModel = oldSpec[machine]['model']\n        energy = oldSpec[machine]['energy']\n        R50 = []\n        for (let energy of oldSpec[machine]['energy']) {\n          R50.push(oldSpec[machine]['R50'][energy])\n        }\n        applicator = oldSpec[machine]['applicator']\n        ssd = oldSpec[machine]['ssd']\n\n        if (makeAndModel !== undefined && typeof makeAndModel !== \"string\") {\n          console.log(makeAndModel)\n          throw new RangeError(\"Loaded makeAndModel type was not string\")\n        }\n\n        if (energy !== undefined && !this.testArrayOfNumbers(energy)) {\n          console.log(energy)\n          throw new RangeError(\"Loaded energy type was not number[]\")\n        }\n\n        if (R50 !== undefined && !this.testArrayOfNumbers(R50)) {\n          console.log(R50)\n          throw new RangeError(\"Loaded energy type was not number[]\")\n        }\n\n        if (applicator !== undefined && !this.testArrayOfStrings(applicator)) {\n          console.log(applicator)\n          throw new RangeError(\"Loaded applicator type was not string[]\")\n        }\n\n        if (ssd !== undefined && !this.testArrayOfNumbers(ssd)) {\n          console.log(ssd)\n          throw new RangeError(\"Loaded ssd type was not number[]\")\n        }\n        \n        newSpec = {\n          machine: machine,\n          makeAndModel: makeAndModel,\n          energy: energy,\n          R50: R50,\n          applicator: applicator,\n          ssd: ssd\n        }\n        newSpecArray.push(newSpec)\n      }\n    }\n    return newSpecArray\n  }\n\n  loadModelDataFromLocalStorage(specificationsArray: MachineSpecification[]) {\n    console.log('dexie.service loadModelDataFromLocalStorage')\n    let modelData: ModelData\n    let modelDataLiteArray: ModelDataLite[] = []\n    let currentSettings = new CurrentSettings()\n\n    for (let specification of specificationsArray) {\n      currentSettings.machine = specification.machine\n      for (let energy of specification.energy) {\n        currentSettings.energy = energy\n        for (let applicator of specification.applicator) {\n          currentSettings.applicator = applicator\n          for (let ssd of specification.ssd) {\n            currentSettings.ssd = ssd\n            let parsedData = JSON.parse(localStorage.getItem(currentSettings.returnKey()))\n            if (parsedData != null) {\n              modelData = new ModelData()\n              modelData.fillFromObject(parsedData)\n              modelData.updateKey(currentSettings)\n              modelDataLiteArray.push(modelData.exportLite())\n            }\n          }\n        }\n      }\n    }\n    return modelDataLiteArray\n  }\n}\n\n\n\nexport let db = new DexieDatabase()\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/dexie.service.ts\n **/","import { Injectable } from '@angular/core';\nimport { Base } from './base-data'\nimport { CurrentSettings } from './current-settings'\n\n\n@Injectable()\nexport class AreaLengthConversion extends Base {\n  public width: number[] = []\n  public length: number[] = []\n  public area: number[] = []\n  public measuredFactor: number[] = []\n\n  convertLengthToArea(width: number, length: number): number {\n    console.log('model.data AreaLengthConversion convertLengthToArea')\n    let area = Math.PI * width * length / 4\n    return Math.round(area*10)/10\n  }\n\n  convertAreaToLength(width: number, area: number): number {\n    console.log('model.data AreaLengthConversion convertAreaToLength')\n    let length = 4 * area / (Math.PI * width)\n    return Math.round(length*10)/10\n  }\n\n  updateAreaFromLength() {\n    console.log('model.data AreaLengthConversion updateAreaFromLength')\n    let width: number\n    let length: number\n    let area: number\n\n    this.area = []\n\n    for (let i in this.length) {\n      width = this.width[i]\n      length = this.length[i]\n\n      area = this.convertLengthToArea(width, length)\n      this.area.push(area)\n    }\n  }\n\n  updateLengthFromArea() {\n    console.log('model.data AreaLengthConversion updateLengthFromArea')\n    let width: number\n    let length: number\n    let area: number\n\n    this.length = []\n\n    for (let i in this.area) {\n      width = this.width[i]\n      area = this.area[i]\n\n      length = this.convertAreaToLength(width, area)\n      this.length.push(length)\n    }\n  }\n\n  initialLengthAreaUpdate() {\n    console.log('model.data AreaLengthConversion initialLengthAreaUpdate')\n    if (this.length.length < this.area.length) {\n      this.updateLengthFromArea()\n    }\n    else {\n      this.updateAreaFromLength()\n    }\n  }\n}\n\n@Injectable()\nexport class ModelMeasurement extends AreaLengthConversion {\n  protected propNames: string[] = ['width', 'length', 'area', 'measuredFactor']\n  protected keyConversions: {} = {\n    'factor': 'measuredFactor'\n  }\n  \n}\n\n@Injectable()\nexport class ModelGrid extends Base  {\n  protected propNames: string[] = ['width', 'length', 'predictedFactor']\n  protected keyConversions: {} = {\n    'factor': 'predictedFactor'\n  }\n  public width: number[] = []\n  public length: number[] = []\n  public predictedFactor: number[] = []\n}\n\n@Injectable()\nexport class Predictions extends AreaLengthConversion {\n  protected propNames: string[] = ['width', 'length', 'area', 'measuredFactor', 'predictedFactor']\n  public predictedFactor: number[] = []\n}\n\n@Injectable()\nexport class ModelData {\n  protected propNames: string[] = ['measurement', 'model', 'predictions']\n  public machineSettingsKey: string\n  public measurement: ModelMeasurement\n  public model: ModelGrid\n  public predictions: Predictions\n\n  constructor() {\n    this.measurement = new ModelMeasurement()\n    this.model = new ModelGrid()\n    this.predictions = new Predictions()\n  }\n\n  fillFromObject(object: {}) {\n    console.log('model.data ModelData fillFromObject')\n    if (object == null) {\n      for (let propName of this.propNames) {\n        this[propName].reset()\n      }\n    }\n    else {\n      for (let propName of this.propNames) {\n        if (object[propName] == null) {\n          this[propName].reset()\n        }\n        else {\n          this[propName].fillFromObject(object[propName])\n        }\n      }\n    }\n    this.measurement.initialLengthAreaUpdate()\n    this.predictions.initialLengthAreaUpdate()\n  }\n\n  updateKey(currentSettings: CurrentSettings) {\n    this.machineSettingsKey = currentSettings.returnKey()\n  }\n\n  exportLite(): ModelDataLite {\n    console.log('model.data ModelData exportLite')\n    let modelDataLite = <ModelDataLite>{\n      machineSettingsKey: this.machineSettingsKey,\n      measurement: {\n        width: this.measurement.width,\n        length: this.measurement.length,\n        measuredFactor: this.measurement.measuredFactor\n      },\n      model: {\n        width: this.model.width,\n        length: this.model.length,\n        predictedFactor: this.model.predictedFactor\n      },\n      predictions: {\n        width: this.predictions.width,\n        length: this.predictions.length,\n        measuredFactor: this.predictions.measuredFactor,\n        predictedFactor: this.predictions.predictedFactor\n      }\n    }\n    return modelDataLite\n  }\n}\n\nexport interface ModelDataLite {\n  machineSettingsKey: string\n  measurement: {\n    width: number[],\n    length: number[],\n    measuredFactor: number[]\n  }\n  model: {\n    width: number[],\n    length: number[],\n    predictedFactor: number[]\n  }\n  predictions: {\n    width: number[],\n    length: number[],\n    measuredFactor: number[],\n    predictedFactor: number[]\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/model-data.ts\n **/","export class Base {\n  protected propNames: string[]\n  protected keyConversions: {}\n\n  reset() {\n    for (let propName of this.propNames) {\n      this[propName] = []\n    }\n  }\n\n  fillFromObject(object: {}) {\n    object = this.updateOldKeyNames(object)\n    for (let propName of this.propNames) {\n      if (object[propName] == null) {\n        this[propName] = []\n      }\n      else {\n        this[propName] = object[propName]\n      }\n    }\n  }\n\n  updateOldKeyNames(object: {}) {\n    let newKey: string\n\n    for (let oldKey in this.keyConversions) {\n      if (object[oldKey] != null && object[this.keyConversions[oldKey]] == null) {\n        newKey = this.keyConversions[oldKey]\n        Object.defineProperty(object, newKey,\n            Object.getOwnPropertyDescriptor(object, oldKey));\n        delete object[oldKey];\n      }\n    }\n\n    return object\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/base-data.ts\n **/","import { Injectable } from '@angular/core';\n\nimport { CurrentSettings } from './current-settings'\nimport { DataPersistenceService } from './data-persistence.service'\nimport { InsertData } from './insert-data'\n\n@Injectable()\nexport class MachineSpecification {\n  machine: string\n  makeAndModel: string\n  energy: number[]\n  R50: number[]\n  applicator: string[]\n  ssd: number[]\n\n  constructor() {\n    this.machine = \"\"\n    this.makeAndModel = \"\"\n    this.energy = []\n    this.R50 = []\n    this.applicator = []\n    this.ssd = []\n  }\n}\n\n@Injectable()\nexport class MachineSpecificationsService {\n  machineList: string[]  \n\n  specifications: MachineSpecification[]\n  currentSpecification: MachineSpecification\n\n  dataPersistenceService = new DataPersistenceService()\n\n  constructor(\n    public currentSettings: CurrentSettings\n  ) {\n\n  }\n\n  checkInsertSettingsExist(insertData: InsertData) {\n    let specification = this.returnMachineSpecification(insertData.machine)\n    console.log(specification)\n    if (\n      specification.energy.indexOf(Number(insertData.energy)) > -1 &&\n      specification.applicator.indexOf(String(insertData.applicator)) > -1 &&\n      specification.ssd.indexOf(Number(insertData.ssd)) > -1\n    ) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  doesMachineExist(machineID: string) {\n    if (this.machineList.indexOf(machineID) > -1) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  returnMachineSpecification(machineID: string) {\n    let machineSpecification: MachineSpecification\n    let index: number\n\n    index = this.machineList.indexOf(machineID)\n\n    if (index == -1) {\n      // throw new RangeError(\"Requested machine does not exist\")\n      machineSpecification = null\n    }\n    else {\n      machineSpecification = this.specifications[index]\n    }\n\n    return machineSpecification\n  }\n\n  returnCurrentR50(energyLookup: number) {\n    let index: number\n    index = this.currentSpecification.energy.indexOf(energyLookup)\n    if (index == -1) {\n      throw new RangeError(\"Requested energy is not within the current specification\")\n    }\n    return this.currentSpecification.R50[index]\n  }\n\n  loadData() {\n    console.log('specifications-data.service loadData')\n    return this.dataPersistenceService.loadCurrentSettings()\n      .then((currentSettings: CurrentSettings) => {\n        console.log('specifications-data.service loadData this.dataPersistenceService.loadCurrentSettings() promise complete')\n        this.currentSettings = currentSettings\n        return this.dataPersistenceService.loadSpecificationsData()\n      })\n      .then((specificationArray: MachineSpecification[]) => {\n        console.log('specifications-data.service loadData this.dataPersistenceService.loadSpecificationsData() promise complete')\n        this.specifications = specificationArray\n        this.updateSpecifications()\n      })\n  }\n\n  updateSpecifications() {\n    console.log('specifications-data.service updateSpecifications')\n    if (this.specifications == null) {\n      this.specifications = []\n      this.machineList = []\n    }\n    else {\n      this.updateMachineList()\n      this.updateCurrentSpecification()     \n    }\n  }\n\n  updateMachineList() {\n    console.log('specifications-data.service updateMachineList')\n    this.machineList = []\n    for (let specification of this.specifications) {\n      this.machineList.push(specification.machine)\n    }\n  }\n\n  updateCurrentSpecification() {\n    console.log('specifications-data.service updateCurrentSpecification')\n\n    let machineSpecification: MachineSpecification\n    machineSpecification = this.returnMachineSpecification(this.currentSettings.machine)\n\n    if (machineSpecification == null) {      \n      this.currentSpecification = this.specifications[0]\n      this.currentSettings.machine = this.machineList[0]\n    }\n    else {\n      this.currentSpecification = machineSpecification\n    }\n\n    this.refreshCurrentSettings()\n\n    // console.warn(this.currentIndex)\n    // console.warn(this.specifications)\n    // console.warn(this.currentSpecification)\n  }\n\n  refreshCurrentSettings() {\n    console.log('specifications-data.service refreshCurrentSettings')\n    if (this.currentSpecification != null) {\n      for (let item of [\"energy\", \"applicator\", \"ssd\"]) {\n        if (this.currentSpecification[item] == null) {\n          this.currentSettings[item] = null\n        }\n        else {\n          if (this.currentSpecification[item].length > 0) {\n            if (this.currentSpecification[item].indexOf(this.currentSettings[item]) == -1) {\n              this.currentSettings[item] = this.currentSpecification[item][0]\n            } \n          }\n          else {\n            this.currentSettings[item] = null\n          }\n        }\n      }\n    }\n    else {\n      for (let item of [\"energy\", \"applicator\", \"ssd\"]) {\n        this.currentSettings[item] = null\n      }\n    }\n    this.dataPersistenceService.saveCurrentSettings(this.currentSettings)\n  }\n\n  newMachine(newMachineID: string, newMakeAndModel: string) {\n    console.log('specifications-data.service newMachine')\n    if (this.machineList.indexOf(newMachineID) != -1) {\n      throw new RangeError(\"This 'new' machine already exists\")\n    }\n    let newSpecification = new MachineSpecification()\n    newSpecification.machine = newMachineID\n    newSpecification.makeAndModel = newMakeAndModel\n    this.specifications.push(newSpecification)\n    this.updateMachineList()\n    this.changeMachine(newMachineID)\n  }\n\n  changeMachine(swapToMachineID: string) {\n    console.log('specifications-data.service changeMachine')\n    this.currentSettings.machine = swapToMachineID\n    this.updateCurrentSpecification()\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/specifications-data.service.ts\n **/","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CurrentSettings {\n  id: number\n  machine: string\n  energy: number\n  applicator: string\n  ssd: number\n\n  constructor () {\n    this.id = 0\n    this.machine = null\n    this.energy = null\n    this.applicator = null\n    this.ssd = null\n  }\n\n  returnKey() {\n    return (\n      '{\"machine\":' + JSON.stringify(String(this.machine)) + ',' +\n      '\"energy\":' + JSON.stringify(Number(this.energy)) + ',' +\n      '\"applicator\":' + JSON.stringify(String(this.applicator)) + ',' +\n      '\"ssd\":' + JSON.stringify(Number(this.ssd)) +\n      '}')\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/current-settings.ts\n **/","import { Component, OnInit, Input, Output, EventEmitter, DoCheck } from '@angular/core';\n\nimport { Coordinates } from '../../services/data-services/insert-data'\nimport { TextInputControl } from '../../services/utility-services/text-input-control'\n\n\n@Component({\n  selector: 'my-x-y-input',\n  template: require('../misc-components/shared-text-input-template.html')\n})\nexport class XYInputComponent implements OnInit, DoCheck {\n  @Input()\n  textboxLabels = {\n    x: \"X coordinates (cm @iso)\",\n    y: \"Y coordinates (cm @iso)\"\n  }\n  @Input()\n  dataInputs: Coordinates\n  @Input()\n  triggerUpdate: boolean\n  @Input()\n  disabled: boolean = false\n  @Input()\n  rows = 4\n  @Output()\n  validTextBoxChange = new EventEmitter()\n  @Output()\n  texboxValidCheck = new EventEmitter();\n\n  textInputControl: TextInputControl\n  \n  ngOnInit() {\n    this.textInputControl = new TextInputControl(\n      ['x', 'y'],\n      this.dataInputs)\n    this.textInputControl.updateAllTextboxInputs()\n\n  }\n\n  ngDoCheck() {\n    if (this.triggerUpdate) {\n      this.textInputControl.updateAllTextboxInputs()\n      // console.log(this.triggerUpdate)\n      this.triggerUpdate = false\n    }\n  }\n\n  onTextboxChange(key: string, newInput: string) {\n    let oldValid = this.textInputControl.textboxValid[key]\n    this.textInputControl.validateTextboxInput(key, newInput)\n    if (this.textInputControl.textboxValid[key] != oldValid) {\n      this.texboxValidCheck.emit(this.textInputControl.checkAllValid())\n    }\n\n    if (this.textInputControl.textboxValid[key]) {\n      this.validTextBoxChange.emit()\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/parameterise-components/x-y-input.component.ts\n **/","import { validateInput } from './sanitise-validation'\n\nexport class TextInputControl {\n  public textboxInput: {}\n  public textboxValid: {}\n  \n  constructor(\n    public inputNames: string[],\n    public dataInputs: {}\n  ) {\n    this.textboxInput = {}\n    this.textboxValid = {}\n\n    for (let key of this.inputNames) {\n      this.textboxInput[key] = \"\"\n      this.textboxValid[key] = true\n    }\n  }\n\n  updateAllTextboxInputs() {\n    for (let key of this.inputNames) {\n      this.updateTextboxInput(key)\n    }\n  }\n\n  updateTextboxInput(key: string) {\n    this.textboxInput[key] = String(this.dataInputs[key])\n      .replace(/,/g, ', ')\n  }\n\n  validateTextboxInput(key: string, newInput:string) {\n    this.textboxValid[key] = false\n    try {\n      if (validateInput(newInput)) {\n        this.dataInputs[key] = eval('[' + newInput.replace(/[,;\\n\\t]\\s*/g, ', ') + ']')\n        this.textboxValid[key] = true\n      }\n    }\n    catch (err) {\n      console.log(err)\n    }\n  }\n\n  checkAllValid() {\n    for (let key of this.inputNames) {\n      if (!this.textboxValid[key]) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/utility-services/text-input-control.ts\n **/","export function validateInput(input: string): boolean {\n  // return /^(-?\\d*(\\.\\d+)?[,;\\s]+)*-?\\d*(\\.\\d+)?[,;\\s]*$/.test(input)\n  return /^[-\\d\\.,;\\sNa]*$/.test(input)\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/utility-services/sanitise-validation.ts\n **/","module.exports = \"<div *ngFor=\\\"let key of textInputControl.inputNames\\\">\\n  <mdl-textfield \\n    type=\\\"text\\\"\\n    [label]=\\\"textboxLabels[key]\\\"\\n    [(ngModel)]=\\\"textInputControl.textboxInput[key]\\\"\\n    (input)=\\\"onTextboxChange(key, $event.target.value)\\\"\\n    [rows]=rows\\n    floating-label\\n    [disabled]=disabled\\n    [style.width]=\\\"'100%'\\\"></mdl-textfield>\\n  <p *ngIf=\\\"!textInputControl.textboxValid[key]\\\">\\n    The {{key}} input is invalid\\n  </p>\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/misc-components/shared-text-input-template.html\n ** module id = 144\n ** module chunks = 0\n **/","import { Parameterisation } from './insert-data'\nimport { Coordinates } from './insert-data'\n\nconst insert: Coordinates = {\n  x: [\n    0.99, -0.14, -1.0, -1.73, -2.56, -3.17, -3.49,\n    -3.57, -3.17, -2.52, -1.76, -1.04, -0.17,\n    0.77, 1.63, 2.36, 2.79, 2.91, 3.04, 3.22,\n    3.34, 3.37, 3.08, 2.54, 1.88, 1.02, 0.99],\n  y: [\n    5.05, 4.98, 4.42, 3.24, 1.68, 0.6, -0.64,\n    -1.48, -2.38, -3.77, -4.81,  -5.26, -5.51,\n    -5.58, -5.23, -4.64, -3.77, -2.77, -1.68,\n    -0.29, 1.23, 2.68, 3.8, 4.6, 5.01, 5.08, \n    5.05]\n}\n\nlet parameterisation = new Parameterisation()\nparameterisation.reset()\nparameterisation.insert = insert\n\nexport const DEMO_PARAMETERISE_INPUT = parameterisation\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/demo-data.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\" style=\\\"display: flex; align-items: center; flex-flow: row wrap;\\\">\\n    <h5>Equivalent ellipse parameterisation</h5>\\n    <p>This is for the determination of equivalent ellipse widths and lengths as defined in the paper method.</p>\\n\\n    <p>\\n      To begin shape parameterisation you need to define your insert shape. \\n      This can be done by editing the x and y coordinates within the text boxes below or by using a shape       \\n      <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n        pulled from a dicom file.\\n      </a>\\n    </p>\\n\\n    <p>\\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\\n      This web app should handle copying and pasting from a range of sources (including excel).\\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\\n    </p>\\n\\n    <my-x-y-input #textboxInputs\\n      [dataInputs]=\\\"insertData.parameterisation.insert\\\"\\n      [triggerUpdate]=false\\n      [rows]=4\\n      [disabled]=\\\"dataInFlight\\\"\\n      (texboxValidCheck)=\\\"textInputsValid=$event\\\"\\n      (validTextBoxChange)=onValidTextboxChange()\\n      [style.width]=\\\"'100%'\\\"></my-x-y-input>\\n\\n    <!--<mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"X coordinates (cm @iso)\\\"\\n      [(ngModel)]=\\\"textAreaX\\\"\\n      (input)=\\\"inputTextAreaX($event.target.value)\\\"\\n      rows=4\\n      floating-label\\n      [disabled]=\\\"dataInFlight\\\"\\n      [style.width]=\\\"'100%'\\\"></mdl-textfield>\\n\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Y coordinates (cm @iso)\\\"\\n      [(ngModel)]=\\\"textAreaY\\\"\\n      (input)=\\\"inputTextAreaY($event.target.value)\\\"\\n      rows=4\\n      floating-label\\n      [disabled]=\\\"dataInFlight\\\"\\n      [style.width]=\\\"'100%'\\\"></mdl-textfield>-->\\n\\n    <p *ngIf=\\\"!equalLengths\\\">\\n      The x and y coordinate lengths need to be the same as each other.\\n    </p>\\n\\n    <p *ngIf=\\\"insertData.parameterisation.insert.x.length < 3 || insertData.parameterisation.insert.y.length < 3\\\">\\n      You need at least 3 data points to create an insert shape.\\n    </p>\\n\\n    <div style=\\\"width:100%; height:30px\\\"></div>\\n\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Load demo data\\\"\\n      [disabled]=\\\"submitDisabled\\\"\\n      (click)=\\\"loadDemoData()\\\">Load Demo Data         \\n    </button>\\n\\n    <div style=\\\"width:20px; height:30px\\\"></div>\\n\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Parameterise insert\\\"\\n      [disabled]=\\\"submitDisabled || !textInputsValid || !equalLengths\\\"\\n      (click)=\\\"onSubmit()\\\">Parameterise Insert          \\n    </button>\\n\\n\\n\\n    <div [hidden]=\\\"serverResponseValid\\\">\\n      {{serverErrorMessage}}\\n    </div>\\n\\n    <div style=\\\"height:20px; width:100%;\\\"></div>\\n\\n    <my-plot \\n      [insert_x]=\\\"insertData.parameterisation.insert.x\\\"\\n      [insert_y]=\\\"insertData.parameterisation.insert.y\\\"\\n      [circle]=\\\"insertData.parameterisation.circle\\\"\\n      [ellipse]=\\\"insertData.parameterisation.ellipse\\\"\\n      [enabled]=\\\"textInputsValid && equalLengths\\\">\\n    </my-plot>\\n\\n    <div style=\\\"height:20px; width:20px;\\\"></div>\\n\\n    <my-width-length-table\\n      [width]=\\\"insertData.parameterisation.width\\\"\\n      [length]=\\\"insertData.parameterisation.length\\\"\\n      [enabled]=\\\"textInputsValid && equalLengths\\\">\\n    </my-width-length-table>\\n\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Send parameterisation to model</h5>\\n    <p>\\n      Once you have parameterised an insert shape you may either predict this insert with the model, or you may add the insert to the model.\\n    </p>\\n    <p>\\n      To predict the insert with the model you must have filled in the correct machine ID, energy, applicator, and ssd in the text boxes below.\\n      Furthermore these inputs need to correspond to one of the \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        machine specifications you have defined.\\n      </a>\\n    </p>\\n    <p>\\n      To append the current insert shape along with its measured factor to the model you must have filled in the corresponding machine ID, energy, applicator, ssd, and measured factor in the text boxes below.\\n      Once again the machine specifications given need to correspond to one of the \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        machine specifications you have defined.\\n      </a>\\n    </p>\\n\\n\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Machine (ID)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.machine\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n\\n    <p *ngIf=\\\"!machineExists\\\">\\n      This machine ID does not exist within your \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        provided machine specifications.\\n      </a>\\n    </p>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Energy (Nominal or MeV)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.energy\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Applicator (ID)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.applicator\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"SSD (cm)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.ssd\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n\\n    <p *ngIf=\\\"!machineSettingsExist\\\">\\n      These specific machine settings do not exist within your       \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        provided machine specifications.\\n      </a>\\n    </p>\\n\\n    <mdl-textfield #measuredFactorInput\\n      type=\\\"text\\\"\\n      label=\\\"Measured insert factor (as per TG 25)\\\"\\n      (input)=\\\"insertDataChange()\\\"\\n      floating-label\\n      [(ngModel)]=\\\"insertData.measuredFactor\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Add measured factor to model\\\"\\n      [disabled]=\\\"!ableToAddDataToModel || !machineSettingsExist || measuredFactorInput.value==null || measuredFactorInput.value=='' || submitDisabled || !textboxInputs || !equalLengths\\\"\\n      (click)=\\\"addMeasuredFactor(measuredFactorInput.value)\\\">Add Measured Factor to Model            \\n    </button>\\n\\n    <p *ngIf=\\\"dataAlreadyExistsOnModel && !submitDisabled && textInputsValid && equalLengths && machineSettingsExist\\\">\\n      This width, length, and measured factor combination exists within the model.       \\n      <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n        View the model.\\n      </a>\\n    </p>\\n    \\n    <div style=\\\"height:20px; width:20px;\\\"></div>\\n\\n\\n\\n\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\"\\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Predict factor with model\\\"\\n      [disabled]=\\\"!machineSettingsExist || submitDisabled || !textInputsValid || !equalLengths || insertData.parameterisation.width == null || insertData.parameterisation.length == null\\\"\\n      (click)=\\\"predictFactor()\\\">Predict Factor with Model        \\n    </button>\\n\\n\\n\\n\\n  </div>\\n\\n\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\">\\n    <h5>Change parameterisation server url (optional)</h5>\\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default server is: <br>\\n      <a>http://electronapi.simonbiggs.net/parameterise</a>       \\n    </p>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Parameterisation Server Address\\\"\\n      (input)=\\\"parameterisationServerChange($event.target.value)\\\"\\n      floating-label\\n      [(ngModel)]=\\\"parameteriseURL\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n  </div>\\n\\n</div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/parameterise-components/parameterise.component.html\n ** module id = 146\n ** module chunks = 0\n **/","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'my-page-not-found',\n  template: require('./page-not-found.component.html')\n})\nexport class PageNotFoundComponent {\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/misc-components/page-not-found.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    This page has not been found. Please provide feedback ...\\n  </div>\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/misc-components/page-not-found.component.html\n ** module id = 148\n ** module chunks = 0\n **/","import { Component, OnInit } from '@angular/core';\n\nimport { TitleService } from '../../services/utility-services/title.service'\n\n\n@Component({\n  selector: 'my-home',\n  template: require('./home.component.html')\n})\nexport class HomeComponent implements OnInit {\n  constructor(\n    private myTitleService: TitleService\n  ) {}\n  \n  ngOnInit() {\n    this.myTitleService.setTitle('Home');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/home-components/home.component.ts\n **/","module.exports = \"<div itemscope itemtype=\\\"http://schema.org/SoftwareApplication\\\" class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h3 itemprop=\\\"name\\\">Electron insert factor modelling</h3>\\n    <p>\\n      Tags: <span itemprop=\\\"applicationCategory\\\">Medical physics, electron inserts, electron cutouts, Python, Angular2, Bokeh, spline modelling</span><br>\\n      Last update: <span itemprop=\\\"datePublished\\\" content=\\\"2016-10-18\\\">2016-11-03</span><br>\\n      Version: <span itemprop=\\\"softwareVersion\\\">0.2.0-beta</span><br>\\n      Operating system: <span itemprop=\\\"operatingSystem\\\">Windows, Linux, Mac, Android, and iOS</span> <br>\\n      Requirements: <span itemprop=\\\"requirements\\\">A browser such as <a href=\\\"https://www.google.com.au/chrome/browser\\\">Chrome</a> that supports <a href=\\\"http://caniuse.com/#feat=indexeddb\\\">IndexedDB</a> browser database</span><br>\\n      Developed by: <span itemprop=\\\"author\\\" itemscope itemtype=\\\"http://schema.org/Person\\\"><a itemprop=\\\"name\\\" href=\\\"https://github.com/SimonBiggs\\\">Simon Biggs</a></span>\\n    </p>\\n\\n    <h4>Warning</h4>\\n    <p>\\n      This web app is currently under active development.  \\n      On 3-Nov-2016 the underlying data structure of this web app underwent a refactor. This was to facilitate data importing and exporting.\\n      Although I have put methods in place to transfer data across to the new format in a reasonable manner this may not have been successful.\\n      If you suspect that your data has been corrupted during this process please empty your browser database with the \\n      <a routerLink=\\\"/storage\\\" routerLinkActive=\\\"active\\\">\\n        storage component</a>.\\n    </p>\\n    <p>\\n      If you find bugs, or have any usability suggestions please <a href=\\\"mailto:mail@simonbiggs.net\\\">email me</a> so that I may make appropriate fixes and improvements.\\n    </p>\\n    <h4>Description</h4>\\n    <p>\\n      This online web app is for the modelling of the portion of the electron output factor that is dependent on the shape of the shielding insert mounted within the applicator. This allows modelling insert factors using only the measured factors already available at a centre. Should all outliers be removed from the data set the user might expect as low as 0.5% standard uncertainty for factor prediction with as little as 8 data points.\\n    </p>\\n\\n    <h4>Instructions</h4>\\n    <h5>Overview</h5>\\n    <p>This web app is divided into four logical components:</p>\\n      <ul>\\n        <li>   \\n          Defining your centre specific machine specifications within the   \\n          <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n            machine specifications component\\n          </a>\\n        </li>\\n        <li>\\n          Insert shape extraction from a dicom patient plan within the\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n            dicom component\\n          </a>\\n        </li>\\n        <li>\\n          Parameterise the insert shapes into equivalent widths and lengths within the\\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n            parameterisation component\\n          </a>\\n        </li>\\n        <li>\\n          Take at least 8 widths, lengths, and measured factors for a given machine, applicator, energy, ssd combination and create an empirical model within the\\n          <a routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\">\\n            model component\\n          </a>\\n        </li>\\n      </ul>\\n\\n      <p>\\n        All your model and machine data is saved on your local machine within your browser. \\n        Your progress will be saved as long as you do not clear your browser data.\\n        In the future I plan to implement a data export and import feature, as well as the ability to sync models between browsers via a server.\\n        Currently however the only place your web app data is being stored is on your local machine.\\n      </p>\\n\\n       \\n      \\n      <h5>To demo</h5>\\n      <p>\\n        If you wish to simply demo this app these are the following steps you can take:\\n      </p>\\n      <ul>\\n        <li>\\n          Within the \\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n            dicom component \\n          </a>\\n          download the demo dicom file, load it into the web app and see the insert shapes be pulled from the dicom file without any network traffic\\n        </li>\\n        <li>\\n          Within the \\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n            parameterise component\\n          </a>\\n          press the \\\"Load Demo Data\\\" button and then press the \\\"Parameteterise Insert\\\" button to see the parameterisation algorithim in action\\n        </li>\\n        <li>\\n          Within the \\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n            model component\\n          </a>\\n          press the \\\"Load Demo Data\\\" button and then press the \\\"Run Spline Model\\\" to see the spline model being created. \\n          You can then either hover over the model, or tap on the model to view the relevant values.\\n        </li>\\n      </ul>\\n\\n      <h5>To implement in your centre</h5>\\n      <p>\\n        To implement this web app in your centre you need to do the following:\\n      </p>\\n      <ul>\\n        <li>  \\n          Specify the machine models and the corresponding applicators, energies, and ssds within the    \\n          <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n            machine specification component.\\n          </a>\\n        </li>\\n        <li> \\n          Collate / measure your electron insert factor measuremens. These factors are to measured in accordance to TG 25.   \\n        </li>\\n        <li>\\n          If the insert shapes are ellipses, you may directly input the ellipse widths and lengths as projected to the isocentre within the \\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n            model component.\\n          </a>\\n        </li>\\n        <li>\\n          If the insert shape is a generic shape or you know the x and y coordinates of your insert then determine the equivalent ellipse widths and lengths by inputting x and y coordinates as defined at isocentre within the \\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n            parameterisation component.\\n          </a>          \\n        </li>\\n        <li>\\n          If the insert shape is defined within your planning system, export the patient plan to dicom and then read the insert coordinates from the dicom file using the\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n            dicom component.\\n          </a>          \\n        </li>\\n        <li>\\n          Once you have the corresponding equivalent ellipse widths and lengths for your measured factors these may be appended to the relevant machine configuration within the \\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n            model component\\n          </a>\\n        </li>\\n        <li>\\n          Whenever a machine configuration gets at least 8 data points you may press the \\\"Run Spline Model\\\" on the \\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\n            model component\\n          </a>\\n          which will allow the prediction of insert factors for other widths and lengths.\\n        </li>\\n      </ul>\\n\\n      <h5>To use the web app after it has been implemented</h5>\\n      <ul>\\n        <li>\\n          Export the patient plan to dicom and then read the insert coordinates from the dicom file using the\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\n            dicom component.\\n          </a>          \\n        </li>\\n        <li>\\n          Press the \\\"Parameterise Insert\\\" button to determine the equivalent ellipse width and length\\n        </li>\\n        <li>\\n          Press the \\\"Predict Factor with Model\\\" button to automatically change the machine configuration to that which matches your loaded insert\\n        </li>\\n        <li>\\n          Hover your mouse over the relevant width and length within the model to predict your insert factor\\n        </li>\\n      </ul>\\n\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n\\n    <h4>Publications</h4>\\n    <!--<h6>Original paper</h6>-->\\n    <p>The paper detailing the algorithim and its validation:</p>\\n    <p>\\n      S. Biggs, M. Sobolewski, R. Murry, J. Kenny, Spline modelling electron insert factors using routine measurements. Physica Medica (2015), <a href=\\\"http://dx.doi.org/10.1016/j.ejmp.2015.11.002\\\">doi:10.1016/j.ejmp.2015.11.002</a>.\\n    </p>\\n\\n    <!--<h6>EPSM2016 Poster</h6>\\n    <ul>\\n      <li><a href=\\\"https://www.dropbox.com/s/09ij94rqc012ad8/ElectronInsertsWebAppPoster.jpg?dl=1\\\">Low resolution</a></li>\\n      <li><a href=\\\"https://www.dropbox.com/s/ga5e64echv255b8/ElectronsPoster.svg?dl=1\\\">Original SVG file</a></li>\\n    </ul>-->\\n\\n    <h4>Disclaimer</h4>\\n    <p>\\n      Any use of this web app or any of its code has you accepting the AGPL3+ license which includes no warranty that this code is fit for a particular purpose. Attempts have been made to make the code transparent and it is recommended that an experienced python programmer and physicist who understands the procedure outlined in the paper and the requirements of your centre identifies whether or not this method and code is fit for your use.</p>\\n\\n    <h4>Use of Google Analytics</h4>\\n    <p>\\n      To aid in quickly identifying bugs, user experience issues, and documenting app usage the Google Analytics service is employed. \\n      This collates and reports page views, button clicks, and demographic information based upon your IP address.\\n      For more information on privacy regarding Google Analytics <a href=\\\"https://support.google.com/analytics/answer/6004245\\\">click here.</a>\\n      If you wish to opt-out of Google Analytics data collection please <a href=\\\"https://tools.google.com/dlpage/gaoptout\\\">click here.</a>\\n    </p>   \\n\\n\\n    <h4>(Optional) Download this web app and run it locally</h4>\\n      The following commands will set up this web app to work on a fresh install of <a href=\\\"http://releases.ubuntu.com/16.04/\\\">Ubuntu 16.04</a>:\\n      <pre><code class=\\\"bash\\\">    sudo apt install git wget\\n    git clone --recursive \\\\\\n        https://github.com/SimonBiggs/electroninserts-webapp.git \\\\\\n        --branch gh-pages\\n    cd electroninserts-webapp\\n\\n    wget \\\\\\n        https://goo.gl/poeKlL \\\\\\n        -O miniconda.sh\\n    chmod +x miniconda.sh\\n    ./miniconda.sh -p $HOME/miniconda\\n    export PATH=$HOME/miniconda/bin:$PATH\\n\\n    conda update conda\\n    conda env create \\\\\\n        --name electroninserts python=3.5 \\\\\\n        --file ./server/electronfactor-server/conda-requirements.txt\\n    source activate electroninserts\\n\\n    python run_webapp_locally.py</code></pre>\\n\\n    At that point you will be able to access the web app locally at http://localhost:8000.\\n    Make sure the model and parameterisation servers point to http://localhost:5000/model, and http://localhost:5000/parameterise respectively.\\n    You may also replace \\\"localhost\\\" with your IP to access this webapp from other computers on your network.\\n\\n\\n\\n\\n    <h4>Source code</h4>\\n    <p>\\n      For the purpose of coding transparency and to enable the user to take responsibility for the code themselves any redistribution\\n      or derivative works of this web app need to include the source code of any additions made and need to include a way\\n      for users to easily access the source code of each of the components used or linked to.\\n    </p>\\n\\n    <h5>Server Code</h5>\\n\\n    <h6>Base Electron Insert Factor Source Code</h6>\\n    <p>\\n      The python file which does the shape parameterisation and insert factor modelling which is used by the server is found here:\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py\\\">\\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py</a>\\n    </p>\\n\\n    <h6>Tornado REST API</h6>\\n    <p>\\n      The Tornado REST API is found here:\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py\\\">\\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py</a>\\n    </p>\\n\\n    <h6>Heroku App code</h6>\\n    <p>\\n      The code to make the heroku app is found here:\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server\\\">\\n              https://github.com/SimonBiggs/electronfactor-server</a>\\n    </p>\\n\\n    <h5>Web App Code</h5>\\n    <p>\\n      The source code for this web app is found here:\\n      <a itemprop=\\\"downloadUrl\\\" href=\\\"https://github.com/SimonBiggs/electroninserts-webapp\\\">\\n            https://github.com/SimonBiggs/electroninserts-webapp</a>\\n    </p>\\n\\n    <h5>Libraries used</h5>\\n    <h6>Bokehjs</h6>\\n    <p>\\n      The bokehjs library is used for plots. Documentation can be found here:\\n      <a href=\\\"http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs\\\">\\n              http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs</a>\\n    </p>\\n    <p>\\n      Source code can be found here:\\n      <a href=\\\"https://github.com/bokeh/bokeh/tree/master/bokehjs\\\">\\n              https://github.com/bokeh/bokeh/tree/master/bokehjs</a>\\n    </p>\\n\\n    <h6>dcmjs</h6>\\n    <p>\\n      The dcmjs library is used for reading dicom files within javascript. Website can be found here:\\n      <a href=\\\"http://dcmjs.org/\\\">\\n              http://dcmjs.org/</a>\\n    </p>\\n    <p>\\n      Source code can be found here:\\n      <a href=\\\"https://github.com/commontk/dcmjs\\\">\\n              https://github.com/commontk/dcmjs</a>\\n    </p>\\n\\n    <h6>Angular2</h6>\\n    <p>\\n      This interface was built using Angular2. Documentation can be found here:\\n      <a href=\\\"https://angular.io/docs/ts/latest/\\\">\\n              https://angular.io/docs/ts/latest/</a>\\n    </p>\\n    <p>\\n      Source code can be found here:\\n      <a href=\\\"https://github.com/angular/angular\\\">\\n              https://github.com/angular/angular</a>\\n    </p>\\n    <h6>Remaining libraries</h6>\\n    <p>\\n      For all remaining libraries used please see the npm package.json file:\\n      <a href=\\\"https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json\\\">\\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json</a>\\n    </p>\\n    <p>\\n      And the index file for various imports:\\n      <a href=\\\"https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html\\\">\\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html</a>\\n    </p>\\n  </div>\\n\\n\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/home-components/home.component.html\n ** module id = 150\n ** module chunks = 0\n **/","import { Component, OnInit, NgZone, ViewChild, OnDestroy } from '@angular/core';\n\nimport { TitleService } from '../../services/utility-services/title.service'\nimport { ElectronApiService } from '../../services/server-api-services/electron-api.service';\nimport { ModelData } from '../../services/data-services/model-data'\nimport { DataPersistenceService } from '../../services/data-services/data-persistence.service'\nimport { CurrentSettings } from '../../services/data-services/current-settings'\nimport { ServerURLs } from '../../services/data-services/dexie.service'\n\nimport { WidthLengthAreaInputComponent } from './width-length-area-input.component'\n\n@Component({\n  selector: 'my-create-model',\n  template: require('./create-model.component.html')\n})\nexport class CreateModelComponent implements OnInit, OnDestroy{\n  textboxLabels = {\n    width: \"Width of ellipse given by diameter of largest encompassed circle (cm @iso)\",\n    length: \"Length of ellipse that matches insert shape area (cm @iso)\",\n    area: \"[Optional] Area of insert shape (cm^2 @iso)\",\n    measuredFactor: \"Measured insert factor (as per TG 25)\"\n  }\n\n  textboxValid = true  \n\n  lengthSmallerThanWidth: boolean = false\n  \n  plot_width = 600\n\n  modelURL: string\n  dataInFlight: boolean = false\n\n  @ViewChild('plotContainer') plotContainer: any\n  @ViewChild('settingsPicker') settingsPicker: any\n  @ViewChild('textboxInputs') textboxInputs: WidthLengthAreaInputComponent\n\n  constructor(\n    private modelData: ModelData,\n    private myTitleService: TitleService,\n    private electronApiService: ElectronApiService,\n    private dataPersistenceService: DataPersistenceService,\n    private currentSettings: CurrentSettings,\n    private ngZone: NgZone\n  ) {\n    window.onresize = (e) => {\n      ngZone.run(() => {\n        this.updatePlotWidth()\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    window.onresize = null;\n  }\n\n  ngOnInit() {\n    this.myTitleService.setTitle('Create Model')\n\n    this.dataPersistenceService.loadServerUrl('model')\n    .then((serverUrl: ServerURLs) => {\n      if (serverUrl == null) {\n        this.modelURL = 'http://electronapi.simonbiggs.net/model'\n      }\n      else {\n        this.modelURL = serverUrl.url\n      } \n    })\n\n    this.updatePlotWidth()\n\n  }\n\n  updatePlotWidth() {\n    this.plot_width = this.plotContainer.nativeElement.clientWidth\n  }\n\n  currentMachineSettingsUpdated(newSettings: CurrentSettings) {\n    this.currentSettings = newSettings\n    this.loadMeasuredData()\n    this.checkLengthSmallerThanWidth()\n  }\n\n  loadMeasuredData() {\n    this.dataPersistenceService.loadModelData(this.modelData, this.currentSettings).then(() => {\n      this.textboxInputs.triggerUpdate = true\n    })\n    \n  }\n\n  saveModel() {\n    this.dataPersistenceService.saveModelData(this.modelData, this.currentSettings)\n  }\n\n  checkLengthSmallerThanWidth() {\n    this.lengthSmallerThanWidth = false\n    for (let i = 0; i < this.modelData.measurement.width.length; i++) {\n      if (this.modelData.measurement.width[i] > this.modelData.measurement.length[i]) {\n        this.lengthSmallerThanWidth = true\n        return\n      }\n    }\n  }\n\n  onValidTextboxChange() {\n    this.modelData.model.reset()\n    this.checkLengthSmallerThanWidth()\n    this.saveModel()\n  }\n\n  basicServerSubmit() {\n    this.dataInFlight = true\n    this.electronApiService.sendToServer(\n      this.modelURL,\n      JSON.stringify(this.modelData.measurement)\n    )\n      .then((modelResult: any) => {\n        this.modelData.model.width = modelResult.model_width;\n        this.modelData.model.length = modelResult.model_length;\n        this.modelData.model.predictedFactor = modelResult.model_factor;\n        this.dataInFlight = false\n        this.saveModel()\n      })\n  }\n\n  modelServerChange(newModelURL: string) {\n    this.dataPersistenceService.saveServerUrl('model', newModelURL)\n  }\n\n  defaultServer() {\n    this.modelURL = 'http://electronapi.simonbiggs.net/model';\n    this.dataPersistenceService.saveServerUrl('model', this.modelURL)\n  }\n\n  loadDemoData() {\n    for (let key of ['machine', 'energy', 'applicator', 'ssd']) {\n      this.currentSettings[key] = null\n    }\n\n    this.settingsPicker.currentSettings = this.currentSettings\n\n    this.modelData.model.reset()\n    this.modelData.measurement.reset()\n\n    this.modelData.measurement.width = [\n      3.71, 6.78, 6.3, 7.56, 5.26, 6.53, 7.08, 4.38, 3.66,\n      4.21, 4.21, 6.54, 5.86, 3.17, 6., 8.06, 6.31, 5.26,\n      4.21, 5.21, 4.59, 5.34, 6.41, 5.26, 5.25, 7.82, 4.2,\n      3.16, 7.18, 5.72, 6.08, 6.64, 8.4, 4.59, 3.15, 4.67,\n      4.21, 9.45, 7.64, 3.17, 3.17, 7.36]\n    this.modelData.measurement.length = [\n      4.36, 10.97, 6.33, 10.05, 13.66, 10.99, 10.77, 5.47,\n      5.04, 8.41, 13.65, 8.41, 8.62, 9.43, 7.97, 11.85,\n      8.24, 10.52, 6.82, 11.4, 5.67, 9.64, 8.69, 8.41,\n      5.26, 10.85, 4.21, 5.25, 11.27, 11.6, 6.64, 9.81,\n      8.42, 6.54, 3.16, 6.28, 10.51, 9.47, 8.99, 13.64,\n      6.83, 7.37]\n    this.modelData.measurement.measuredFactor = [\n      0.9489, 1.0067, 0.9858, 1.0045, 0.9868, 1.0004, 1.0052,\n      0.9634, 0.9437, 0.9708, 0.9757, 0.9931, 0.9896, 0.9492,\n      0.9911, 1.0067, 0.9923, 0.9879, 0.9609, 0.9884, 0.9587,\n      0.9934, 0.9991, 0.9831, 0.9705, 1.0019, 0.9562, 0.9348,\n      0.9987, 0.9989, 0.9933, 0.9991, 1.0067, 0.9683, 0.9296,\n      0.9735, 0.9709, 1.0084, 1.0028, 0.953, 0.9484, 1.0032]\n\n    this.modelData.measurement.updateAreaFromLength()\n    \n    this.checkLengthSmallerThanWidth()\n    this.textboxInputs.triggerUpdate = true\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/model-components/create-model.component.ts\n **/","import { Component, OnInit, Input, Output, EventEmitter, DoCheck } from '@angular/core';\n\nimport { ModelData, AreaLengthConversion } from '../../services/data-services/model-data'\nimport { TextInputControl } from '../../services/utility-services/text-input-control'\n\n\n@Component({\n  selector: 'my-width-length-area-input',\n  template: require('../misc-components/shared-text-input-template.html')\n})\nexport class WidthLengthAreaInputComponent implements OnInit, DoCheck {\n  @Input()\n  textboxLabels = {\n    width: \"Width of ellipse given by diameter of largest encompassed circle (cm @iso)\",\n    length: \"Length of ellipse that matches insert shape area (cm @iso)\",\n    area: \"Area of insert shape (cm^2 @iso)\",\n    measuredFactor: \"Measured insert factor (as per TG 25)\"\n  }\n  @Input()\n  dataInputs: AreaLengthConversion\n  @Input()\n  triggerUpdate: boolean\n  @Input()\n  disabled: boolean = false\n  @Input()\n  rows = 2\n  @Output()\n  validTextBoxChange = new EventEmitter()\n  @Output()\n  texboxValidCheck = new EventEmitter();\n\n  lastEdit: string = 'length'\n  textInputControl: TextInputControl\n  \n  ngOnInit() {\n    this.textInputControl = new TextInputControl(\n      ['width', 'length', 'area', 'measuredFactor'],\n      this.dataInputs)\n    this.textInputControl.updateAllTextboxInputs()\n\n  }\n\n  ngDoCheck() {\n    if (this.triggerUpdate) {\n      this.textInputControl.updateAllTextboxInputs()\n      // console.log(this.triggerUpdate)\n      this.triggerUpdate = false\n    }\n  }\n\n  onTextboxChange(key: string, newInput: string) {\n    let oldValid = this.textInputControl.textboxValid[key]\n    this.textInputControl.validateTextboxInput(key, newInput)\n    if (this.textInputControl.textboxValid[key] != oldValid) {\n      this.texboxValidCheck.emit(this.textInputControl.checkAllValid())\n    }\n\n    if (this.textInputControl.textboxValid[key]) {\n      if (key == 'length' || (key == 'width' && this.lastEdit == 'length')) {\n        this.dataInputs.updateAreaFromLength()\n        this.textInputControl.updateTextboxInput('area')\n        this.lastEdit = 'length'\n      }\n      if (key == 'area' || (key == 'width' && this.lastEdit == 'area')) {\n        this.dataInputs.updateLengthFromArea()\n        this.textInputControl.updateTextboxInput('length')\n        this.lastEdit = 'area'\n      }\n      this.validTextBoxChange.emit()\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/model-components/width-length-area-input.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Description</h5>\\n    <p>\\n      Use this component to turn a set of at least 8 measured factors with corresponding equivalent widths and lengths into a spline model.\\n      These widths and lengths need to be determined using the parameterisation method employed within the \\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n        parameterisation component.\\n      </a>\\n    </p>\\n    <p>\\n      You are free to edit the widths, lengths, and factors manually below, or have the       \\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n        parameterisation component\\n      </a>\\n      automatically add the measured factors to the correct model. Both work interchangably.\\n      You may only add shapes via the \\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\n        parameterisation component\\n      </a>\\n      if machine ID, applicator, energy, ssd, and measured factor are filled in and they match a machine configuration defined within the \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        specifications component.\\n      </a> \\n    </p>\\n    <p>\\n      A spline model is only valid for a single machine configuration. \\n      Therefore each machine, applicator, energy, ssd has its own model. \\n      Using the machine configuration section below you can change between the configurations.\\n      This will only work if you have already\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        defined your machine configurations.\\n      </a> \\n    </p>\\n\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Choose machine configuration</h5>\\n    <p>\\n      Here is where you select the machine specifications for the model you with to edit. \\n      You will only see options here if you have actually       \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        defined your machine configurations.\\n      </a> \\n    </p>\\n  </div>\\n\\n  <div [style.width]=\\\"'100%'\\\">\\n    <my-choose-specifications #settingsPicker\\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\\n    </my-choose-specifications>\\n  </div>\\n  \\n\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <div [style.width]=\\\"'100%'\\\" [style.height]=\\\"'30px'\\\"></div>\\n    <h5>\\n      The model\\n      <span *ngIf=\\\"currentSettings.machine != null && currentSettings.energy != null && currentSettings.energy != 0 && currentSettings.applicator != null && currentSettings.applicator != '' && currentSettings.ssd != null && currentSettings.ssd != 0\\\">\\n        for machine ID {{currentSettings.machine}}, at an energy of {{currentSettings.energy}} MeV, on the {{currentSettings.applicator}} applicator at {{currentSettings.ssd}} cm SSD\\n      </span>\\n      </h5>    \\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n\\n    <h6>Input widths, lengths, and factors</h6>\\n    <p>\\n      Use the following text boxes to directly edit the measured data used by the spline model.\\n    </p>\\n    <p>\\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\\n      This web app should handle copying and pasting from a range of sources (including excel).\\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\\n    </p>\\n\\n    <my-width-length-area-input #textboxInputs\\n      [dataInputs]=modelData.measurement\\n      [textboxLabels]=textboxLabels\\n      [triggerUpdate]=false\\n      [rows]=4\\n      [disabled]=\\\"dataInFlight\\\"\\n      (texboxValidCheck)=\\\"textboxValid=$event\\\"\\n      (validTextBoxChange)=onValidTextboxChange()></my-width-length-area-input>\\n\\n    <!--<div *ngFor=\\\"let key of ['width', 'length', 'measuredFactor']\\\">\\n      <mdl-textfield \\n        type=\\\"text\\\"\\n        [label]=\\\"textboxLabels[key]\\\"\\n        [(ngModel)]=\\\"this.textboxInput[key]\\\"\\n        (input)=\\\"onTextboxChange(key, $event.target.value)\\\"\\n        rows=4\\n        floating-label\\n        [disabled]=\\\"dataInFlight\\\"\\n        [style.width]=\\\"'100%'\\\"></mdl-textfield>\\n      <p *ngIf=\\\"!textboxValid[key]\\\">\\n        The {{key}} input is invalid\\n      </p>\\n      <span *ngIf=\\\"key=='length'\\\">\\n        \\n      </span>\\n    </div>-->\\n    <p *ngIf=\\\"lengthSmallerThanWidth\\\">\\n      There exists a length value that is smaller than its corresponding width. Spline modelling is disabled as a result.\\n    </p>\\n    <p *ngIf=\\\"modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length\\\">\\n      The lengths of the inputs are not equal. Spline modelling is disabled as a result.\\n    </p>\\n    <p *ngIf=\\\"modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8\\\">\\n      There are currently less than 8 data points. Spline modelling is disabled as a result.\\n    </p>\\n  </div>\\n\\n<div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\" #plotContainer>\\n    <h6>The spline model</h6>\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Model | Load demo data\\\"\\n      [disabled]=\\\"dataInFlight\\\"\\n      (click)=\\\"loadDemoData()\\\">Load demo data         \\n    </button>\\n      \\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Model | Calculate spline model\\\"\\n      [disabled]=\\\"modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8 || dataInFlight || modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length || !textboxValid || lengthSmallerThanWidth\\\"\\n      (click)=\\\"basicServerSubmit()\\\">Calculate Spline Model\\n    </button>\\n    \\n\\n    <div *ngIf=\\\"modelData.measurement.width.length > 0 && modelData.measurement.length.length > 0 && modelData.measurement.measuredFactor.length > 0\\\">\\n      <my-bokeh-create-model\\n        [title]=\\\"'Model Plot'\\\"\\n        [scatter_x]=\\\"modelData.measurement.width\\\"\\n        [scatter_y]=\\\"modelData.measurement.length\\\"\\n        [scatter_z]=\\\"modelData.measurement.measuredFactor\\\"\\n        [pcolour_x]=\\\"modelData.model.width\\\"\\n        [pcolour_y]=\\\"modelData.model.length\\\"\\n        [pcolour_z]=\\\"modelData.model.predictedFactor\\\"\\n        [plot_width]=\\\"plot_width\\\"\\n        [plot_height]=\\\"380\\\">\\n      </my-bokeh-create-model>\\n    </div>\\n    <div *ngIf=\\\"modelData.measurement.width.length == 0 || modelData.measurement.length.length == 0|| modelData.measurement.measuredFactor.length == 0\\\">\\n      <p>\\n        <font color=\\\"red\\\">There is currently no data for this combination.</font> If you wish to load some demo data to see the model in action press the \\\"load demo data\\\" button below.\\n        To set this model up with your own data follow the instructions in the description at the top of this page.\\n      </p>\\n    </div>\\n\\n\\n  </div>\\n\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\">\\n    <h5>Change modelling server url (optional)</h5>\\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default is: <br>\\n      <a (click)=\\\"defaultServer()\\\">http://electronapi.simonbiggs.net/model</a>        \\n    </p>\\n    <mdl-textfield\\n      type=\\\"text\\\"\\n      label=\\\"Spline model server address\\\"\\n      (input)=\\\"modelServerChange($event.target.value)\\\"\\n      floating-label\\n      [(ngModel)]=\\\"modelURL\\\"\\n      style=\\\"width:100%\\\"></mdl-textfield>\\n  </div>\\n\\n\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/model-components/create-model.component.html\n ** module id = 153\n ** module chunks = 0\n **/","import { Component, OnInit, ViewChild, NgZone, OnDestroy, AfterViewInit } from '@angular/core';\n\nimport { TitleService } from '../../services/utility-services/title.service'\nimport { ModelData } from '../../services/data-services/model-data'\nimport { DataPersistenceService } from '../../services/data-services/data-persistence.service'\nimport { CurrentSettings } from '../../services/data-services/current-settings'\n\nimport { WidthLengthAreaInputComponent } from './width-length-area-input.component'\n\nimport { validateInput } from '../../services/utility-services/sanitise-validation'\n\n\n@Component({\n  selector: 'my-use-model',\n  template: require('./use-model.component.html')\n})\nexport class UseModelComponent implements OnInit, OnDestroy, AfterViewInit {\n  textboxLabels = {\n    width: \"Width of ellipse given by diameter of largest encompassed circle (cm @iso)\",\n    length: \"Length of ellipse that matches insert shape area (cm @iso)\",\n    area: \"[Optional] Area of insert shape (cm^2 @iso)\",\n    measuredFactor: \"[Optional] Measured insert factor (as per TG 25)\"\n  }\n\n  modelLookup = {}\n  predictionDifference: number[] = []\n  \n  plot_width = 600\n\n  @ViewChild('plotContainer') plotContainer: any\n  @ViewChild('settingsPicker') settingsPicker: any\n  @ViewChild('textboxInputs') textboxInputs: WidthLengthAreaInputComponent\n\n  constructor(\n    private modelData: ModelData,\n    private myTitleService: TitleService,\n    private dataPersistenceService: DataPersistenceService,\n    private currentSettings: CurrentSettings,\n    private ngZone: NgZone\n  ) {\n    window.onresize = (e) => {\n      ngZone.run(() => {\n        this.updatePlotWidth()\n      })\n    }\n  }\n\n  ngOnDestroy() {\n    console.log('use-model.component ngOnDestroy')\n    window.onresize = null\n  }\n  \n  ngOnInit() {\n    console.log('use-model.component ngOnInit')\n    this.myTitleService.setTitle('Use Model')\n    this.updatePlotWidth()\n    this.updateModelLookup()\n\n  }\n\n  ngAfterViewInit() {\n    console.log('use-model.component ngAfterViewInit')\n    this.loadMeasuredData()\n    this.updatePredictedFactors()\n  }\n\n  lookupFactor(width: number, length: number) {\n    console.log('use-model.component lookupFactor')\n    width = Math.round(width*10)/10\n    length = Math.round(length*10)/10\n\n    let key: string\n    key = String(width) + \",\" + String(length)\n\n    return Math.round(this.modelLookup[key]*1000)/1000\n  }\n\n  updatePredictedFactors() {\n    console.log('use-model.component updatePredictedFactors')\n    this.modelData.predictions.predictedFactor = []\n\n    let amount = Math.min(this.modelData.predictions.width.length, this.modelData.predictions.length.length)\n    let predictedFactor: number\n    let width: number\n    let length: number\n    for (let i = 0; i < amount; i++) {\n      width = this.modelData.predictions.width[i]\n      length = this.modelData.predictions.length[i]\n      predictedFactor = this.lookupFactor(width, length)\n\n      this.modelData.predictions.predictedFactor.push(predictedFactor)\n    }\n    \n    this.updatePredictionDifference()\n  }\n\n  updatePredictionDifference() {\n    console.log('use-model.component updatePredictionDifference')    \n    this.predictionDifference = []\n    let measuredFactor: number\n    let predictedFactor: number\n    let difference: number\n    for (let i in this.modelData.predictions.measuredFactor) {\n      measuredFactor = this.modelData.predictions.measuredFactor[i]\n      predictedFactor = this.modelData.predictions.predictedFactor[i]\n      difference = predictedFactor - measuredFactor\n      difference = Math.round(difference * 1000) / 1000\n\n      this.predictionDifference.push(difference)\n    }\n  }\n  \n  updateModelLookup() {\n    console.log('use-model.component updateModelLookup')        \n    this.modelLookup = {}\n    let key: string\n    for (let i in this.modelData.model.width) {\n      key = String(this.modelData.model.width[i]) + \",\" + String(this.modelData.model.length[i])\n      this.modelLookup[key] = this.modelData.model.predictedFactor[i]\n    }\n  }\n\n  updatePlotWidth() {\n    console.log('use-model.component updatePlotWidth')            \n    this.plot_width = this.plotContainer.nativeElement.clientWidth\n  }\n\n  currentMachineSettingsUpdated(newSettings: CurrentSettings) {\n    console.log('use-model.component currentMachineSettingsUpdated')\n    this.currentSettings = newSettings\n    this.loadMeasuredData()\n  }\n\n  loadMeasuredData() {\n    console.log('use-model.component loadMeasuredData')\n    if (this.currentSettings === undefined) {\n      throw new RangeError(\"Tried to load measured data but current settings are not defined\")\n    }\n\n    this.dataPersistenceService.loadModelData(this.modelData, this.currentSettings).then(() => {\n      console.log('use-model.component loadMeasuredData this.dataPersistenceService.loadModelData(this.modelData, this.currentSettings) promise complete')   \n      this.updateModelLookup()\n      this.updatePredictedFactors()\n      \n      this.textboxInputs.triggerUpdate = true\n    })\n  }\n\n  saveModel() {\n    console.log('use-model.component saveModel')                        \n    this.dataPersistenceService.saveModelData(this.modelData, this.currentSettings)\n  }\n\n  onValidTextboxChange() {\n    console.log('use-model.component onValidTextboxChange')                            \n    this.updatePredictedFactors()\n    this.saveModel()\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/model-components/use-model.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Use models</h5>\\n    <p>\\n      This component is where created models are used. \\n      Factors for prediction will be able to be inputted using width, and then either length or area, and optionally\\n      a measured factor can be included for the purpose of comparing model results with measurement.\\n    </p>\\n    <p>\\n      You can either use the parameterisation component to parameterise your shapes, or if you have a large data set of \\n      generic shapes you need only determine the diameter of the largest encompassed circle to define width, and then\\n      you may input shape area instead of length.\\n      This allows you to quickly check large data sets of previous measurements on generic shapes.\\n    </p>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Choose machine configuration</h5>\\n    <my-choose-specifications #settingsPicker\\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\\n    </my-choose-specifications>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Inserts being predicted</h5>\\n    <my-width-length-area-input #textboxInputs\\n      [dataInputs]=modelData.predictions\\n      [textboxLabels]=textboxLabels\\n      [triggerUpdate]=false\\n      (validTextBoxChange)=onValidTextboxChange()></my-width-length-area-input>\\n    <p>Predicted factors: {{modelData.predictions.predictedFactor}}</p>\\n    <p>Prediction minus measured: {{predictionDifference}}</p>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\" #plotContainer>\\n    <div *ngIf=\\\"modelData.model.width.length > 0 && modelData.model.length.length > 0 && modelData.model.predictedFactor.length > 0\\\">\\n      <my-bokeh-use-model\\n        [title]=\\\"'Model Plot'\\\"\\n        [scatter_x]=\\\"modelData.predictions.width\\\"\\n        [scatter_y]=\\\"modelData.predictions.length\\\"\\n        [area]=\\\"modelData.predictions.area\\\"\\n        [scatter_z]=\\\"modelData.predictions.measuredFactor\\\"\\n        [predicted_factor]=\\\"modelData.predictions.predictedFactor\\\"\\n        [pcolour_x]=\\\"modelData.model.width\\\"\\n        [pcolour_y]=\\\"modelData.model.length\\\"\\n        [pcolour_z]=\\\"modelData.model.predictedFactor\\\"\\n        [plot_width]=\\\"plot_width\\\"\\n        [plot_height]=\\\"380\\\">\\n      </my-bokeh-use-model>\\n    </div>\\n    <div *ngIf=\\\"modelData.model.width.length == 0 || modelData.model.length.length == 0|| modelData.model.predictedFactor.length == 0\\\">\\n      <p>\\n        A model has not been calculated for this machine specification.\\n        If you do have at least 8 data points please calculate the spline model on the           \\n        <a routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\">\\n          create model component.\\n        </a>\\n      </p>\\n    </div>\\n  </div>\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/model-components/use-model.component.html\n ** module id = 155\n ** module chunks = 0\n **/","import { Component, OnInit } from '@angular/core';\n\nimport Dexie from 'dexie'\nimport { db } from '../../services/data-services/dexie.service'\n\nimport { TitleService } from '../../services/utility-services/title.service'\n// import { LocalStorageService } from '../../services/data-services/local-storage.service';\nimport { DataPersistenceService } from '../../services/data-services/data-persistence.service'\n\n@Component({\n  selector: 'my-storage-management',\n  template: require('./storage-management.component.html')\n})\nexport class StorageManagementComponent implements OnInit {\n\n  databaseDump: string\n  reader = new FileReader()\n  fileJsonObject: {}\n\n  constructor(\n    private myTitleService: TitleService,\n    private dataPersistenceService: DataPersistenceService,\n  ) {\n    this.reader.onload = (event: any) => {\n      console.log('storage-management.component this.reader.onload')\n      let contents = event.target.result\n      this.fileJsonObject = JSON.parse(contents)\n    }\n  }\n  \n  ngOnInit() {\n    console.log('storage-management.component ngOnInit')\n    this.myTitleService.setTitle('Storage');\n  }\n\n  exportDataBase() {\n    console.log('storage-management.component exportDataBase')\n    this.dataPersistenceService.databaseDump()\n    .then((stringDump: string) => {\n      let element = document.createElement('a')\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(stringDump))\n      element.setAttribute('download', 'databaseDump.json')\n\n      element.style.display = 'none'\n      document.body.appendChild(element)\n\n      element.click()\n\n      document.body.removeChild(element)\n    })\n  }\n  openFile(event: any) {\n    console.log('storage-management.component openFile')\n    if (typeof event.target !== 'undefined') {\n      let file = event.target.files[0]\n      if (file) {\n        this.reader.readAsText(file)\n      }      \n    }\n    else {\n      console.log(event);\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/storage-components/storage-management.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Storage management</h5>\\n    <p>\\n      This component is for the management of the data stored within this browser's database.\\n    </p>\\n\\n    <h5>Export browser database</h5>\\n    <p>\\n      The following button will export the browser database to a .json file.\\n    </p>\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Storage | Export browser database\\\"\\n      (click)=\\\"exportDataBase()\\\">Export browser database\\n    </button>\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Empty current database</h5>\\n    <p>\\n      The following button will wipe your browser database.\\n      This is not reversable. The browser database will need to be restored from a prior .json file.\\n    </p>\\n    <button\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Storage | Empty current database\\\"\\n      [disabled]=\\\"false\\\"\\n      (click)=\\\"dataPersistenceService.emptyDatabase()\\\">Empty browser database\\n    </button>\\n\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n\\n\\n    <h5>Append to database from file</h5>\\n    <p>\\n      The following button will append the contents of the given .json file to your browser database.\\n      If a key within your .json file matches that of your browser database then the database entry will be overwritten.\\n      This is not reversable.\\n    </p>\\n    <input type='file' (change)='openFile($event)'>\\n\\n    <button      \\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Storage | Empty current database\\\"\\n      [disabled]=\\\"fileJsonObject == null\\\"\\n      (click)=\\\"dataPersistenceService.appendJsonToDatabase(fileJsonObject)\\\">Append file to database\\n    </button>\\n  </div>\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/storage-components/storage-management.component.html\n ** module id = 157\n ** module chunks = 0\n **/","import { Component, OnInit } from '@angular/core';\n\nimport { TitleService } from '../../services/utility-services/title.service'\n\nimport { CurrentSettings } from '../../services/data-services/current-settings'\nimport { DataPersistenceService } from '../../services/data-services/data-persistence.service'\nimport { MachineSpecification, MachineSpecificationsService } from '../../services/data-services/specifications-data.service'\n\n\n@Component({\n  selector: 'my-specifications',\n  template: require('./specifications.component.html')\n})\nexport class SpecificationsComponent implements OnInit {\n  newMachineID: string;\n  newMachineIDValid: boolean = false;\n  newModel: string;\n  newModelValid: boolean = false;\n  newMachineValid: boolean = false;\n  edittingMachine: string = null;\n\n  newEnergy: number;\n  newEnergyValid: boolean = false;\n  newR50: number;\n  newR50Valid: boolean = false;\n  newEnergySetValid: boolean = false;\n  edittingEnergy: string = null;\n\n  newApplicator: string;\n  newApplicatorValid: boolean = false;\n  edittingApplicator: string = null;\n\n  newSSD: number;\n  newSSDValid: boolean = false;\n  edittingSSD: string = null;\n\n  currentSettings: CurrentSettings\n\n  constructor(\n    private myTitleService: TitleService,\n    private dataPersistenceService: DataPersistenceService,\n    private machineSpecificationService: MachineSpecificationsService\n  ) {}\n\n\n  ngOnInit() {\n    console.log('specifications.component ngOnInit')\n    this.myTitleService.setTitle('Specifications');\n    this.machineSpecificationService.loadData()\n      .then(() => {\n        console.log('specifications.component ngOnInit this.machineSpecificationService.loadData() promise complete')\n        this.currentSettings = this.machineSpecificationService.currentSettings\n      })\n  }\n\n  checkNewMachineIDInput() {\n    console.log('specifications.component checkNewMachineIDInput')\n    if (\n      this.machineSpecificationService.machineList.indexOf(this.newMachineID) == -1 && \n      this.newMachineID != null && this.newMachineID != \"\"\n    ) {\n      this.newMachineIDValid = true;\n    }\n    else {\n      this.newMachineIDValid = false;\n    }\n\n    this.checkNewMachineValid()\n  }\n\n  checkNewModelInput() {\n    console.log('specifications.component checkNewModelInput')\n    if (this.newModel != null && this.newModel != \"\") {\n      this.newModelValid = true;\n    }\n    else {\n      this.newModelValid = false;\n    }\n\n    this.checkNewMachineValid()\n  }\n\n  checkNewMachineValid() {\n    console.log('specifications.component checkNewMachineValid')\n    this.newMachineValid = (this.newMachineIDValid && this.newModelValid);\n  }\n\n  addMachineID() {\n    console.log('specifications.component addMachineID')\n    if (!this.newMachineValid) {\n      throw new RangeError('The new machine being added is not a valid input')\n    }\n    this.machineSpecificationService.newMachine(this.newMachineID, this.newModel)\n\n    this.newMachineID = null\n    this.newModel = null\n    this.newMachineIDValid = false\n    this.newModelValid = false\n    this.newMachineValid = false\n\n    this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification)\n  }\n\n  checkNewEnergyInput() {\n    console.log('specifications.component checkNewEnergyInput')\n    if (\n      this.machineSpecificationService.currentSpecification.energy.indexOf(Number(this.newEnergy)) < 0 && \n      this.newEnergy != null && !isNaN(Number(this.newEnergy))\n    ) {\n      this.newEnergyValid = true;\n    }\n    else {\n      this.newEnergyValid = false;\n    }\n\n    this.checkNewEnergySetValid()\n  }\n\n  checkNewR50Input() {\n    console.log('specifications.component checkNewR50Input')\n    if (this.newR50 != null && !isNaN(Number(this.newR50))) {\n      this.newR50Valid = true;\n    }\n    else {\n      this.newR50Valid = false;\n    }\n\n    this.checkNewEnergySetValid()\n  }\n\n  checkNewEnergySetValid() {\n    console.log('specifications.component checkNewEnergySetValid')\n    this.newEnergySetValid = (this.newEnergyValid && this.newR50Valid);\n  }\n\n  addEnergy() {\n    console.log('specifications.component addEnergy')\n    if (!this.newEnergySetValid) {\n      throw new RangeError('The new energy set being added is not valid')\n    }\n    this.machineSpecificationService.currentSpecification.energy.push(Number(this.newEnergy))\n    this.machineSpecificationService.currentSpecification.R50.push(Number(this.newR50))\n\n    this.newEnergy = null\n    this.newR50 = null\n    this.newEnergyValid = false\n    this.newR50Valid = false\n    this.newEnergySetValid = false\n\n    this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification)\n  }\n\n  checkNewApplicatorInput() {\n    console.log('specifications.component checkNewApplicatorInput')\n    if (\n      this.machineSpecificationService.currentSpecification.applicator.indexOf(this.newApplicator.toLowerCase()) < 0 && \n      this.newApplicator != null && this.newApplicator != \"\"\n    ) {\n      this.newApplicatorValid = true\n    }\n    else {\n      this.newApplicatorValid = false\n    }\n  }\n\n  addApplicator() {\n    console.log('specifications.component addApplicator')\n    if (!this.newApplicatorValid) {\n      throw new RangeError('The new applicator being added is not valid')\n    }\n    this.machineSpecificationService.currentSpecification.applicator.push(this.newApplicator.toLowerCase())\n\n    this.newApplicator = null\n    this.newApplicatorValid = false\n\n    this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification)\n  }\n\n  checkNewSSDInput() {\n    console.log('specifications.component checkNewSSDInput')\n    if (\n      this.machineSpecificationService.currentSpecification.ssd.indexOf(Number(this.newSSD)) < 0 && \n      this.newSSD != null && !isNaN(Number(this.newSSD))\n    ) {\n      this.newSSDValid = true;\n    }\n    else {\n      this.newSSDValid = false;\n    }\n  }\n\n  addSSD() {\n    console.log('specifications.component addSSD')\n    if (!this.newSSDValid) {\n      throw new RangeError('The new ssd being added is not valid')\n    }\n    if (this.newSSDValid) {\n    this.machineSpecificationService.currentSpecification.ssd.push(Number(this.newSSD))\n\n    this.newSSD = null\n    this.newSSDValid = false\n\n    this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification)\n    }\n  }\n\n  // editMachine(machine: string) {\n  //   console.log('specifications.component editMachine')\n  //   // this.currentSettings.machine = null\n  //   // this.machineSpecificationService.currentSpecification = null\n  //   this.edittingMachine = machine\n  // }\n\n  // finishMachineEdit(newMachineID: any, newMakeAndModel: any) {\n  //   console.log('specifications.component finishMachineEdit')\n  //   if (newMachineID != this.currentSettings.machine) {\n  //     this.machineSpecificationService.currentSpecification.machine = newMachineID\n  //     this.machineSpecificationService.updateMachineList()\n  //   }\n  //   this.machineSpecificationService.currentSpecification.makeAndModel = newMakeAndModel\n\n  //   this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification)\n  //   this.edittingMachine = null;\n  // }\n\n  // deleteMachine(machine:string) {\n  //   console.log('specifications.component deleteMachine')\n  //   let index = this.machines.indexOf(machine);\n  //   this.machines.splice(index, 1);\n  //   delete this.specifications[machine];\n\n  //   this.edittingMachine = null;\n\n  //   this.updateSpecifications();\n  // }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/specification-components/specifications.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\n\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Machine specifications editing</h5>\\n    <p>\\n      Use this component to define your centre's machine specifications. \\n      These will be used throughout this web app to silo each model into its own specific machine ID, applicator, energy, ssd combination.\\n    </p>\\n    <p>\\n      <font color=\\\"#d3d3d3\\\">\\n        Currently specifcations can only be added. At this current time they cannot be edited nor deleted once they have been defined.\\n      </font>\\n    </p>\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\" *ngIf=\\\"machineSpecificationService != null && currentSettings != null\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\" style=\\\"width:100%\\\">\\n      <mdl-card-title>\\n        <h2 mdl-card-title-text>Machine IDs</h2>\\n      </mdl-card-title>\\n\\n      <mdl-list>\\n        \\n        <div *ngFor=\\\"let machine of machineSpecificationService.machineList\\\">\\n        \\n          <div *ngIf=\\\"machine!=edittingMachine\\\">\\n            <mdl-list-item lines=\\\"3\\\">\\n              <mdl-list-item-primary-content>\\n                <!--<div (click)=\\\"editMachine(machine)\\\">-->\\n                <div>\\n                  <span>{{machine}}</span>\\n                  <mdl-list-item-text-body>{{machineSpecificationService.returnMachineSpecification(machine).makeAndModel}}</mdl-list-item-text-body>\\n                </div>\\n              </mdl-list-item-primary-content>\\n              <mdl-list-item-secondary-action>\\n                <button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"machine==currentSettings.machine || edittingMachine!=null\\\"\\n                  (click)=\\\"machineSpecificationService.changeMachine(machine)\\\"><mdl-icon>dashboard</mdl-icon>       \\n                </button>\\n                <!--<button\\n                  mdl-button *ngIf=\\\"machine!=edittingMachine\\\"\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"false\\\"\\n                  (click)=\\\"editMachine(machine)\\\"><mdl-icon>edit</mdl-icon>       \\n                </button>-->\\n              </mdl-list-item-secondary-action>\\n            </mdl-list-item>\\n\\n          </div>\\n\\n          <div *ngIf=\\\"machine==edittingMachine\\\">\\n            <mdl-list-item lines=\\\"3\\\">\\n              <mdl-list-item-primary-content>\\n                <mdl-textfield #machineIDTextField\\n                  type=\\\"text\\\"\\n                  label=\\\"Machine ID\\\"\\n                  [value]=\\\"machine\\\"\\n                  (keyup.enter)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"\\n                  floating-label\\n                  style=\\\"display:inline;\\\"></mdl-textfield>\\n                <mdl-textfield #modelTextField\\n                  type=\\\"text\\\"\\n                  label=\\\"Model\\\"\\n                  [value]=\\\"machineSpecificationService.returnMachineSpecification(machine).makeAndModel\\\"\\n                  (keyup.enter)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"\\n                  floating-label\\n                  style=\\\"display:inline;\\\"></mdl-textfield>\\n              </mdl-list-item-primary-content>\\n\\n              <mdl-list-item-secondary-action>\\n                <!--<button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"machine!=edittingMachine\\\"\\n                  (click)=\\\"deleteMachine(machine)\\\"><mdl-icon>delete</mdl-icon>       \\n                </button>-->\\n                <button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"true\\\"><mdl-icon>delete</mdl-icon>       \\n                </button>\\n                <button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  mdl-colored=\\\"primary\\\" \\n                  [disabled]=\\\"machine==currentSettings.machine || edittingMachine!=null\\\"\\n                  (click)=\\\"changeCurrentMachine(machine)\\\"><mdl-icon>dashboard</mdl-icon>       \\n                </button>\\n                <button\\n                  mdl-button\\n                  mdl-button-type=\\\"icon\\\"\\n                  mdl-ripple\\n                  [disabled]=\\\"false\\\"\\n                  (click)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"><mdl-icon>done</mdl-icon>       \\n                </button>\\n              </mdl-list-item-secondary-action>\\n            </mdl-list-item>\\n\\n          </div>\\n        </div>\\n\\n\\n      </mdl-list>\\n      <mdl-card-actions mdl-card-border>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"New Machine ID\\\"\\n          [(ngModel)]=\\\"newMachineID\\\"\\n          (input)=\\\"checkNewMachineIDInput()\\\"\\n          (keyup.enter)=\\\"addMachineID()\\\"\\n          floating-label\\n          style=\\\"width:100%\\\"></mdl-textfield>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"Machine Make and Model\\\"\\n          [(ngModel)]=\\\"newModel\\\"\\n          (input)=\\\"checkNewModelInput()\\\"\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add machine ID\\\"\\n          (keyup.enter)=\\\"addMachineID()\\\"\\n          floating-label\\n          style=\\\"width:70%\\\"></mdl-textfield>\\n        <button \\n          [disabled]=\\\"!newMachineValid\\\"\\n          mdl-button \\n          mdl-button-type=\\\"mini-fab\\\"\\n          mdl-ripple\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add machine ID\\\"\\n          (click)=\\\"addMachineID()\\\">\\n          <mdl-icon>add</mdl-icon>\\n        </button>\\n      </mdl-card-actions>\\n\\n    </mdl-card>\\n  </div>\\n\\n  <div *ngIf=\\\"edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\n      <mdl-card-title>\\n        <h2 mdl-card-title-text>Energies for {{currentSettings.machine}}</h2>\\n      </mdl-card-title>\\n        <mdl-list>\\n          <mdl-list-item *ngFor=\\\"let energy of machineSpecificationService.currentSpecification.energy\\\" lines=\\\"3\\\">\\n            <mdl-list-item-primary-content>\\n              <span>{{energy}} MeV</span>\\n              <mdl-list-item-text-body>R50: {{machineSpecificationService.returnCurrentR50(energy)}} cm</mdl-list-item-text-body>\\n            </mdl-list-item-primary-content>\\n            <mdl-list-item-secondary-action>\\n              <!--<button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\n              </button>-->\\n            </mdl-list-item-secondary-action>\\n          </mdl-list-item>\\n        </mdl-list>\\n\\n      <mdl-card-actions mdl-card-border>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"New Energy (MeV)\\\"\\n          [(ngModel)]=\\\"newEnergy\\\"\\n          (input)=\\\"checkNewEnergyInput()\\\"\\n          (keyup.enter)=\\\"addEnergy()\\\"\\n          floating-label\\n          style=\\\"width:100%\\\"></mdl-textfield>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"R50 for New Energy (cm)\\\"\\n          [(ngModel)]=\\\"newR50\\\"\\n          (input)=\\\"checkNewR50Input()\\\"\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add energy\\\"\\n          (keyup.enter)=\\\"addEnergy()\\\"\\n          floating-label\\n          style=\\\"width:70%\\\"></mdl-textfield>\\n        <button \\n          [disabled]=\\\"!newEnergySetValid\\\" \\n          mdl-button \\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add energy\\\"\\n          mdl-button-type=\\\"mini-fab\\\"\\n          (click)=\\\"addEnergy()\\\">\\n          <mdl-icon>add</mdl-icon>\\n        </button>\\n      </mdl-card-actions>\\n    </mdl-card>\\n  </div>\\n\\n  <div *ngIf=\\\"edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\n      <mdl-card-title>\\n        <h2 mdl-card-title-text>Applicators for {{currentSettings.machine}}</h2>\\n      </mdl-card-title>\\n        <mdl-list>\\n          <mdl-list-item *ngFor=\\\"let applicator of machineSpecificationService.currentSpecification.applicator\\\">\\n            <mdl-list-item-primary-content>\\n              <mdl-list-item-text-body>{{applicator}}</mdl-list-item-text-body>\\n            </mdl-list-item-primary-content>\\n            <mdl-list-item-secondary-action>\\n              <!--<button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\n              </button>-->\\n            </mdl-list-item-secondary-action>\\n          </mdl-list-item>\\n        </mdl-list>\\n\\n      <mdl-card-actions mdl-card-border>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"New Applicator\\\"\\n          [(ngModel)]=\\\"newApplicator\\\"\\n          (input)=\\\"checkNewApplicatorInput()\\\"\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add applicator\\\"\\n          (keyup.enter)=\\\"addApplicator()\\\"\\n          floating-label\\n          style=\\\"width:70%\\\"></mdl-textfield>\\n        <button \\n          [disabled]=\\\"!newApplicatorValid\\\" \\n          mdl-button \\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add applicator\\\"\\n          mdl-button-type=\\\"mini-fab\\\"\\n          (click)=\\\"addApplicator()\\\">\\n          <mdl-icon>add</mdl-icon>\\n        </button>\\n      </mdl-card-actions>\\n    </mdl-card>\\n  </div>\\n\\n  <div *ngIf=\\\"edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\n      <mdl-card-title>\\n        <h2 mdl-card-title-text>SSDs for {{currentSettings.machine}}</h2>\\n      </mdl-card-title>\\n        <mdl-list>\\n          <mdl-list-item *ngFor=\\\"let ssd of this.machineSpecificationService.currentSpecification.ssd\\\">\\n            <mdl-list-item-primary-content>\\n              <mdl-list-item-text-body>{{ssd}} cm</mdl-list-item-text-body>\\n            </mdl-list-item-primary-content>\\n            <mdl-list-item-secondary-action>\\n              <!--<button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\n              </button>\\n              <button\\n                mdl-button\\n                mdl-button-type=\\\"icon\\\"\\n                mdl-ripple\\n                [disabled]=\\\"true\\\"\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\n              </button>-->\\n            </mdl-list-item-secondary-action>\\n          </mdl-list-item>\\n        </mdl-list>\\n\\n      <mdl-card-actions mdl-card-border>\\n        <mdl-textfield\\n          type=\\\"text\\\"\\n          label=\\\"New SSD (cm)\\\"\\n          [(ngModel)]=\\\"newSSD\\\"\\n          (input)=\\\"checkNewSSDInput()\\\"\\n          (keyup.enter)=\\\"addSSD()\\\"\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add ssd\\\"\\n          floating-label\\n          style=\\\"width:70%\\\"></mdl-textfield>\\n        <button \\n          [disabled]=\\\"!newSSDValid\\\" \\n          mdl-button \\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add ssd\\\"\\n          mdl-button-type=\\\"mini-fab\\\"\\n          (click)=\\\"addSSD()\\\">\\n          <mdl-icon>add</mdl-icon>\\n        </button>\\n      </mdl-card-actions>\\n    </mdl-card>\\n  </div>\\n\\n\\n  <!--<div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\n    <h5>Raw specification data editing (optional)</h5>\\n    <p>\\n      If you desire you may edit the raw machine specifications in its raw format below. \\n      Currently error checking on this raw input is not implemented.\\n      Incorrectly editing the data below may cause the web app not to function.\\n      Input data above to determine the data structure required.</p>\\n    <my-json-edit\\n      [input]=\\\"specifications\\\"\\n      (inputUpdated)=\\\"changeSpecifications($event)\\\"\\n      buttonText=\\\"Update Specifications\\\">\\n    </my-json-edit>\\n  </div>-->\\n\\n</div>\\n\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/specification-components/specifications.component.html\n ** module id = 159\n ** module chunks = 0\n **/","import { Component, OnInit, ApplicationRef, ViewChild } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { Coordinates } from '../../services/data-services/insert-data'\nimport { Parameterisation } from '../../services/data-services/insert-data'\nimport { InsertData } from '../../services/data-services/insert-data'\n\nimport { TitleService } from '../../services/utility-services/title.service';\nimport { DataPersistenceService } from '../../services/data-services/data-persistence.service'\n\nimport { safeLoad } from 'js-yaml';\n\ndeclare var Module: any;\ndeclare var FS: any;\n\n// declare var yaml: any;\n// declare var pypyjs: any;\n\n@Component({\n  selector: 'my-dicom',\n  template: require('./dicom.component.html'),\n  styles: ['./dicom.component.css']\n})\nexport class DicomComponent implements OnInit {\n  dicomWarning: string;\n  dicomExitCode = 1;\n\n  insertList: InsertData[];\n\n  reader = new FileReader();\n\n  constructor(\n    private myTitleService: TitleService,\n    private dataPersistenceService: DataPersistenceService,\n    private router: Router\n  ) { }\n\n  @ViewChild('dicomOutput') dicomOutputDir: any;\n  @ViewChild('getBlockDataButton') getBlockDataButton: any;\n\n\n  ngOnInit() {\n    window['dicomData'] = ' ';\n    window['dicomLoadStatus'] = 0;\n\n    this.reader.onload = () => this.onceFileIsLoaded();\n    \n    this.dataPersistenceService.loadDicomInsertList()\n    .then((result) => {\n      this.insertList = result\n    })\n\n    Module.print = this.sendDicomDumpToGlobalVariable;\n    this.myTitleService.setTitle('Dicom');\n\n    // pypyjs.exec(\"import json; print json.dumps({'hello': 'world'})\")\n    // pypyjs.exec(\"import dicom; print json.dumps({'hello': 'world'})\")\n  }\n\n  sendDicomDumpToGlobalVariable(print: any) {\n    window['dicomData'] = window['dicomData'] + '\\n' + print\n  }\n\n  updateDicomWarning() {\n    let status = Number(window['dicomLoadStatus']);\n    if (status == 0) {\n      this.getBlockDataButton.disabled = false;\n      this.dicomWarning = null;\n    }\n    else {\n      this.getBlockDataButton.disabled = true;\n      this.dicomWarning = 'An error occured while trying to find the block data within the provided Dicom file.';\n    }\n  }\n\n  onceFileIsLoaded() {\n    let content = new Int8Array(this.reader.result);\n    console.log(content.length);\n    let fileName = 'dicomfile';\n\n    if (FS.isFile(fileName)) {\n      FS.unlink(fileName);\n    }\n    FS.writeFile(fileName, content, {encoding: \"binary\"});\n\n    let exit_orig = Module.exit;    \n    Module.exit = (status: number) => {\n      window['dicomLoadStatus'] = status\n      exit_orig(status);\n    }\n    Module.callMain(['dcmdump', fileName, '--print-all']);\n\n    Module.exit = exit_orig;\n\n    console.log(Module)\n\n    this.updateDicomWarning()\n    FS.unlink(fileName);\n  }\n\n  openFile(event: any) {\n\n    if (typeof event.target !== 'undefined') {\n      console.log(event.target.files);\n      let file = event.target.files[0];\n\n      window['dicomData'] = ' '\n\n      this.reader.readAsArrayBuffer(file);\n    }\n    else {\n      console.log(event);\n    }\n\n  }\n\n  convertDicomDumpToDict(dump: string) {\n    // console.log(dump)\n    let yamlConvert = dump.replace(/\\s*#[^#\\n]*\\n/g,'\\n');\n    yamlConvert = yamlConvert.replace(/\\s*#[^#\\n]*$/g,'');\n    yamlConvert = yamlConvert.replace(/^\\n*/,'');\n    yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\))/g,'$1:')\n    yamlConvert = yamlConvert.replace(\n      /(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) SQ \\(Sequence with \\w+ length #=\\d+\\)/g,\n      '$1')\n    yamlConvert = yamlConvert.replace(\n      /(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) na \\(Item with \\w+ length #=\\d+\\)/g,\n      '$1')\n    yamlConvert = yamlConvert.replace(\n      / *\\(fffe,e00d\\): na \\(ItemDelimitationItem[ \\w-]*\\) *\\n/g,\n      '')\n    yamlConvert = yamlConvert.replace(\n      / *\\(fffe,e0dd\\): na \\(SequenceDelimitationItem[ \\w-\\.]*\\) *\\n/g,\n      '')\n    yamlConvert = yamlConvert.replace(\n      /(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) (.*)/g,\n      '$1 \"$2\"')\n    yamlConvert = yamlConvert.replace(/\\\\/g, ', ')\n    yamlConvert = yamlConvert.replace(/\\(fffe,e000\\):/g, ' - ')\n\n    yamlConvert = safeLoad(yamlConvert);\n\n    return yamlConvert;\n  }\n\n  convertBlockDataToCoords(blockData: string): Coordinates {\n    let listString = /\\[[, \\d\\.-]*\\]/.exec(blockData).toString();\n\n    let parsedData = JSON.parse('{ \"data\": ' + listString + '}');\n\n    let x: number[] = [];\n    let y: number[] = [];\n    let i = 0;\n    for (let num of parsedData['data']) {\n      if (i % 2 == 0) {\n        x.push(parseFloat((num / 10).toFixed(2)));\n      }\n      else {\n        y.push(parseFloat((num / 10).toFixed(2)));\n      }\n      i++;\n    }\n    let insert: Coordinates = {\n      x: x,\n      y: y\n    };\n\n    return insert\n  }\n\n  dicomPullNumber(input: string): number {\n    return Number(input.replace(/.*\\[([\\d\\.-]*)\\].*/, \"$1\"));\n  }\n\n  dicomPullString(input: string): string {\n    return input.replace(/.*\\[(.*)\\].*/, \"$1\");\n  }\n\n  getBlockData() {\n    let dicomPrint = window['dicomData'];\n    let dicomDict = this.convertDicomDumpToDict(dicomPrint);\n\n    // console.log(dicomDict)\n    let i = 0\n    this.insertList = [];\n\n    let promiseList: any[] = []\n\n    let beamSequence = dicomDict[\"(300a,00b0)\"];\n    for (let beam of beamSequence) {\n      let temp = beam[\"(300a,00f4)\"]\n\n      if (temp != undefined) {\n        let insertData = new InsertData()\n        insertData.id = i\n        i++\n\n        let blockData = beam[\"(300a,00f4)\"][0][\"(300a,0106)\"];\n        insertData.parameterisation.insert = this.convertBlockDataToCoords(blockData)\n        insertData.parameterisation.insertUpdated()\n        promiseList.push(this.dataPersistenceService.loadParameterisationCache(insertData.parameterisation))\n\n        try {\n          insertData.applicator = this.dicomPullString(\n            beam[\"(300a,0107)\"][0][\"(300a,0108)\"]).toLowerCase();\n        }\n        catch(err) {\n          insertData.applicator = null\n          console.log(err)\n        }\n\n        try {\n          insertData.energy = this.dicomPullNumber(\n            beam[\"(300a,0111)\"][0][\"(300a,0114)\"]);\n        }\n        catch(err) {\n          insertData.energy = null\n          console.log(err)\n        }\n\n        try {\n          insertData.ssd = this.dicomPullNumber(\n            beam[\"(300a,0111)\"][0][\"(300a,0130)\"]) / 10;\n        }\n        catch(err) {\n          insertData.ssd = null\n          console.log(err)\n        }\n        \n        try {\n          insertData.machine = this.dicomPullString(\n          beam[\"(300a,00b2)\"]);\n        }\n        catch(err) {\n          insertData.machine = null\n          console.log(err)\n        }\n        \n        this.insertList.push(insertData)\n      }\n\n    }\n    Promise.all(promiseList)\n    .then(() => {\n      this.dataPersistenceService.saveDicomInsertList(this.insertList)\n    })\n  }\n\n  sendToParameterisation(insertData: InsertData) {\n    insertData.id = 0\n    this.dataPersistenceService.saveCurrentInsertData(insertData)\n    .then(() => {\n      this.router.navigate([\"/parameterise\"])\n    })\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/dicom-components/dicom.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <h5>Locally reading Dicom patient plan files</h5>\\n    <p>\\n      Use this component to read a dicom patient plan file and extract the electron insert shape. \\n      Export a dicom patient plan file that containts an electron plan from your planning system then open it using the file input box below.\\n    </p>\\n    <p>\\n      For testing purposes you can download a demo dicom file from <a href=\\\"webapp/30x16x30_RandomElectronShapes.dcm\\\">here</a>.\\n    </p>\\n    <p>\\n      This has currently been tested with Dicom files exported from Monaco and Pinnacle. \\n      If you find this doesn't work with Dicom files from your TPS please produce a dummy plan that contains at least two electron beams and one photon beam and email it to me at <a href=\\\"mailto:mail@simonbiggs.net\\\">mail@simonbiggs.net</a> so that I can implement importing from that Dicom header structure.\\n    </p>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\n    <input type='file' (change)='openFile($event)'>\\n    <div *ngIf=\\\"dicomWarning\\\">{{dicomWarning}}</div>\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\n    <button #getBlockDataButton\\n      mdl-button mdl-button-type=\\\"raised\\\" \\n      mdl-colored=\\\"primary\\\" \\n      mdl-ripple\\n      [disabled]=\\\"true\\\"\\n      (click)=\\\"getBlockData()\\\">Get Dicom Insert Data\\n    </button>\\n\\n    \\n  </div>\\n\\n  <div *ngFor=\\\"let insertData of insertList\\\" class=\\\"mdl-cell mdl-cell--6-col\\\">\\n    <mdl-card mdl-shadow=\\\"6\\\">\\n      <my-send-to-parameterisation\\n        [insertData]=insertData>\\n      </my-send-to-parameterisation>\\n\\n      <mdl-card-actions mdl-card-border>\\n        <button\\n          mdl-button \\n          mdl-ripple\\n          (click)=\\\"sendToParameterisation(insertData)\\\">Send to parameterisation           \\n        </button>\\n      </mdl-card-actions>\\n    </mdl-card>\\n    \\n\\n\\n    <!--<p>{{insert | json}}</p>-->\\n  </div>\\n\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <h5>Further information</h5>\\n    <p>This Dicom loader does not send the Dicom file off to a server. The entire reading of the dicom file is done within javascript.\\n    You can confirm this yourself by using the chrome web browser, pressing 'Ctrl + Shift + I'\\n    and then clicking on the network tab. When the file is chosen, then the block data is pulled and sent to parameterisation,\\n    at no point in this interaction is there network traffic.</p>\\n\\n    <p>The only data that will be sent to the server will be on either the paremeterisation tab or the model tab, and this data will\\n      just consist of x and y coordinates or widths, lengths, and factors.\\n    </p>\\n  </div>\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/dicom-components/dicom.component.html\n ** module id = 196\n ** module chunks = 0\n **/","import { Component, OnInit } from '@angular/core';\n\nimport { Router, NavigationEnd } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\nimport { Angulartics2 } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/src/providers/angulartics2-google-analytics';\n\nimport { ElectronApiService } from './services/server-api-services/electron-api.service';\nimport { TitleService } from './services/utility-services/title.service';\n\n@Component({\n  selector: 'my-app',\n  template: require('./app.component.html'),\n})\nexport class AppComponent implements OnInit {\n  pageTitle: string;\n\n  constructor(\n    private electronApiService: ElectronApiService,\n    private myTitleService: TitleService,\n    private router: Router,\n    private title:Title,\n    angulartics2: Angulartics2, \n    angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics\n  ) { \n    router.events\n      .filter(event => event instanceof NavigationEnd)\n      .subscribe(() => {\n        this.pageTitle = this.myTitleService.getTitle();\n        this.title.setTitle(\n          this.myTitleService.getTitle() + \n          ' | Electron Insert Factor Modelling');\n      })\n  }\n\n  ngOnInit() {\n    let redirect = sessionStorage['redirect'];\n    delete sessionStorage['redirect'];\n    if (redirect && redirect != location.href) {\n      history.replaceState(null, null, redirect);\n      this.router.navigate([redirect])\n    }\n    \n    this.electronApiService.wakeUpServer();\n\n    this.pageTitle = this.myTitleService.getTitle();\n    this.title.setTitle(\n      this.myTitleService.getTitle() + \n      ' | Electron Insert Factor Modelling');\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/app.component.ts\n **/","module.exports = \"\\n<!--<md-sidenav-layout>\\n\\n  <md-sidenav #sidenav mode=\\\"side\\\" class=\\\"app-sidenav\\\">\\n    <nav class=\\\"mdl-navigation\\\">\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" href>Home</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/export-import\\\" routerLinkActive=\\\"active\\\" href>Export / Import</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\" href>Machine specifications</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\" href>Dicom shape extraction</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\" href>Parameterise inserts</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\" href>Model insert factors</a>\\n    </nav>\\n  </md-sidenav>\\n\\n  <md-toolbar color=\\\"primary\\\">\\n    <button class=\\\"app-icon-button\\\" (click)=\\\"sidenav.toggle()\\\">\\n      <i class=\\\"material-icons app-toolbar-menu\\\">menu</i>\\n    </button>\\n\\n    {{pageTitle}}\\n\\n    <span class=\\\"app-toolbar-filler\\\"></span>\\n    <button md-button (click)=\\\"isDarkTheme = !isDarkTheme\\\">TOGGLE DARK THEME</button>\\n  </md-toolbar>\\n\\n  <div class=\\\"app-content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n\\n\\n</md-sidenav-layout>-->\\n\\n\\n<mdl-layout mdl-layout-fixed-drawer mdl-layout-fixed-header>\\n  <mdl-layout-header>\\n    <mdl-layout-header-row>\\n      <mdl-layout-title>{{pageTitle}}</mdl-layout-title>\\n    </mdl-layout-header-row>\\n  </mdl-layout-header>\\n  <mdl-layout-drawer>\\n    <mdl-layout-title>Electron Factors</mdl-layout-title>\\n    <nav class=\\\"mdl-navigation\\\">\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" href>Home</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\" href>Machine specifications</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\" href>Dicom shape extraction</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\" href>Parameterise inserts</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\" href>Create electron model</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/use-model\\\" routerLinkActive=\\\"active\\\" href>Use electron model</a>\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/storage\\\" routerLinkActive=\\\"active\\\" href>Storage management</a>\\n    </nav>\\n  </mdl-layout-drawer>\\n  <mdl-layout-content>\\n\\n    <router-outlet></router-outlet>\\n\\n  </mdl-layout-content>\\n</mdl-layout>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.html\n ** module id = 198\n ** module chunks = 0\n **/","import { Component, Input, OnChanges, ViewChild, AfterViewInit } from '@angular/core';\n\nimport { Coordinates } from '../../services/data-services/insert-data'\n\ndeclare var Bokeh: any;\n\n@Component({\n  selector: 'my-plot',\n  template: require('./bokeh-plot.html')\n})\nexport class PlotComponent implements OnChanges, AfterViewInit {\n  @Input()\n  insert_x: number[] = null\n  @Input()\n  insert_y: number[] = null\n  @Input()\n  circle: Coordinates = null;\n  @Input()\n  ellipse: Coordinates = null;\n  @Input()\n  enabled: boolean = true;\n  @Input()\n  plot_width: number = 300;\n  @Input()\n  plot_height: number = 300;\n\n  parsedJSON: any;\n  tempSource: any;\n  jsonValid: boolean = true;\n  jsonErrorMessage: string;\n\n  @ViewChild('bokehplot') bokehplot: any;\n\n  plt = Bokeh.Plotting;\n  tools = 'pan,crosshair,wheel_zoom,box_zoom,reset,save';\n\n  xrange = Bokeh.Range1d(-6, 6);\n  yrange = Bokeh.Range1d(-6, 6);\n  \n  fig = this.plt.figure({\n    title: 'Electron Insert Plot', tools: this.tools,\n    x_range: this.xrange, y_range: this.yrange,\n    plot_width: 300, plot_height: 300\n  });\n\n  source = new Bokeh.ColumnDataSource();\n  doc = new Bokeh.Document();\n\n\n  ngOnChanges() {\n    this.jsonValid = false;\n    this.tempSource = {\n      \"xs\": [[0], [0], [0]],\n      \"ys\": [[0], [0], [0]],\n      \"colour\": [\"navy\", \"firebrick\", \"green\"]\n    }\n    let xAll: number[] = [];\n    let yAll: number[] = [];\n    if (this.enabled) {\n      if (this.insert_x != null && this.insert_y != null) {\n        this.tempSource.xs[0] = this.insert_x.concat(this.insert_x[0]);\n        this.tempSource.ys[0] = this.insert_y.concat(this.insert_y[0]);\n        xAll = xAll.concat(this.tempSource.xs[0]);\n        yAll = yAll.concat(this.tempSource.ys[0]);\n      }\n\n\n      if (this.circle) {\n        if ('x' in this.circle && 'y' in this.circle) {\n          this.tempSource.xs[1] = this.circle.x\n          this.tempSource.ys[1] = this.circle.y\n          xAll = xAll.concat(this.tempSource.xs[1]);\n          yAll = yAll.concat(this.tempSource.ys[1]);\n        }\n      }\n      if (this.ellipse) {\n        if ('x' in this.ellipse && 'y' in this.ellipse) {\n          this.tempSource.xs[2] = this.ellipse.x\n          this.tempSource.ys[2] = this.ellipse.y\n          xAll = xAll.concat(this.tempSource.xs[2]);\n          yAll = yAll.concat(this.tempSource.ys[2]);\n        }\n      }\n    }\n\n    let xMax = Math.max(...xAll);\n    let xMin = Math.min(...xAll);\n    let yMax = Math.max(...yAll);\n    let yMin = Math.min(...yAll);\n\n    let range = Math.max(xMax - xMin, yMax - yMin) * 1.1;\n    let sqXMax = (xMax + xMin) / 2 + range / 2\n    let sqXMin = (xMax + xMin) / 2 - range / 2\n    let sqYMax = (yMax + yMin) / 2 + range / 2\n    let sqYMin = (yMax + yMin) / 2 - range / 2\n\n\n\n    this.fig.attributes.x_range.start = sqXMin;\n    this.fig.attributes.x_range.end = sqXMax;\n    this.fig.attributes.y_range.start = sqYMin;\n    this.fig.attributes.y_range.end = sqYMax;\n    // this.fig.update_range();\n    // console.log(this.fig);\n\n    this.source.data = this.tempSource;\n\n    \n    \n  }\n\n  ngAfterViewInit() {\n    // this.ngOnChanges();\n    this.fig.multi_line({ field: 'xs' }, { field: 'ys' }, {\n      source: this.source,\n      line_width: 2,\n      color: { field: 'colour' }\n    });\n\n    this.doc.add_root(this.fig);\n    Bokeh.embed.add_document_standalone(\n      this.doc, this.bokehplot.nativeElement);\n    \n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/bokeh-components/plot.component.ts\n **/","module.exports = \"<div \\n    class=\\\"bk-root\\\" \\n    [style.width]=\\\"plot_width + 'px'\\\" \\n    [style.height]=\\\"plot_height + 'px'\\\">\\n  <div #bokehplot></div>\\n</div>\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/bokeh-components/bokeh-plot.html\n ** module id = 200\n ** module chunks = 0\n **/","import { Component, Input, OnChanges, ViewChild, AfterViewInit, OnInit } from '@angular/core';\n\nimport { BokehPcolour } from './bokeh-pcolour'\n\ndeclare var Bokeh: any;\n\n@Component({\n  selector: 'my-bokeh-create-model',\n  template: require('./bokeh-plot.html')\n})\nexport class BokehCreateModelComponent extends BokehPcolour implements AfterViewInit, OnChanges {\n  @Input()\n  title: string = \"Figure Title\";\n  @Input()\n  plot_width: number = 300;\n  @Input()\n  plot_height: number = 300;\n  @Input()\n  scatter_x: number[];\n  @Input()\n  scatter_y: number[];\n  @Input()\n  scatter_z: number[] = [0.5];\n  @Input()\n  pcolour_x: number[];\n  @Input()\n  pcolour_y: number[];\n  @Input()\n  pcolour_z: number[];\n  @Input()\n  enabled: boolean = true;\n\n  @ViewChild('bokehplot') bokehplot: any;\n\n\n  ngOnChanges() {\n    this.updateHoverData()\n    this.runAllUpdates()\n  }\n\n  updateHoverData() {\n    if (this.pcolour_data.x != this.pcolour_x) {\n      this.pcolour_hover_width = <string[]> []\n      for (let x of this.pcolour_x) {\n        this.pcolour_hover_width.push(x.toFixed(1))\n      }\n    }\n    if (this.pcolour_data.y != this.pcolour_y) {\n      this.pcolour_hover_length = <string[]> []\n      for (let y of this.pcolour_y) {\n        this.pcolour_hover_length.push(y.toFixed(1))\n      }\n    }\n    if (this.pcolour_data.z != this.pcolour_z) {\n      this.pcolour_hover_predicted_factor = <string[]> []\n      for (let z of this.pcolour_z) {\n        this.pcolour_hover_predicted_factor.push((Math.round(z*1000)/1000).toFixed(3))\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    let hover_tool = new Bokeh.HoverTool({\n      tooltips: [\n        [\"Width\", \" @hover_width cm\"],\n        [\"Length\", \" @hover_length cm\"],\n        [\"Predicted Factor\", \" @hover_predicted_factor\"]\n      ],\n      renderers: [\n        this.pcolour_renderer\n      ]\n    })\n    this.fig.add_tools(hover_tool)\n\n    this.doc.add_root(this.fig);\n    Bokeh.embed.add_document_standalone(\n      this.doc, this.bokehplot.nativeElement); \n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/bokeh-components/bokeh-create-model.component.ts\n **/","import { OnInit } from '@angular/core';\n\ndeclare var Bokeh: any;\n\nexport class BokehPcolour implements OnInit {\n  title: string = \"Figure Title\";\n  plot_width: number = 300;\n  plot_height: number = 300;\n  scatter_x: number[];\n  scatter_y: number[];\n  scatter_z: number[] = [0.5];\n  pcolour_x: number[];\n  pcolour_y: number[];\n  pcolour_z: number[];\n  enabled: boolean = true;\n\n  pcolour_hover_width: string[] = [];\n  pcolour_hover_length: string[] = [];\n  pcolour_hover_predicted_factor: string[] = [];\n\n  scatter_hover_width: string[] = [];\n  scatter_hover_length: string[] = [];\n  scatter_hover_area: string[] = [];\n  scatter_hover_measured_factor: string[] = [];\n  scatter_hover_predicted_factor: string[] = [];\n\n  plt = Bokeh.Plotting;\n  tools = 'pan,crosshair,wheel_zoom,box_zoom,reset,save';  \n  fig: any;\n\n  old_scatter_z: number[] = [];\n  old_pcolour_z: number[] = [];\n\n  scatter_c: string[] = [];\n  pcolour_c: string[] = [];\n\n  scatter_data = {\n    x: <number[]> [],\n    y: <number[]> [],\n    z: <number[]> [],\n    hover_width: <string[]> [],\n    hover_length: <string[]> [],\n    hover_area: <string[]> [],\n    hover_measured_factor: <string[]> [],\n    hover_predicted_factor: <string[]> [],\n    c: <string[]> []\n  }\n  scatter_source = new Bokeh.ColumnDataSource({\n    data: this.scatter_data\n  });\n\n  pcolour_renderer: any\n  scatter_renderer: any\n\n  pcolour_data = {\n    x: <number[]> [],\n    y: <number[]> [],\n    z: <number[]> [],\n    hover_width: <string[]> [],\n    hover_length: <string[]> [],\n    hover_predicted_factor: <string[]> [],\n    c: <string[]> []\n  }\n  pcolour_source = new Bokeh.ColumnDataSource({\n    data: this.pcolour_data\n  });\n  doc = new Bokeh.Document();\n\n  viridis_hex = [\n    \"#440154\",\"#440256\",\"#450457\",\"#450559\",\"#46075a\",\"#46085c\",\"#460a5d\",\"#460b5e\",\"#470d60\",\"#470e61\",\"#471063\",\"#471164\",\"#471365\",\"#481467\",\"#481668\",\"#481769\",\"#48186a\",\"#481a6c\",\"#481b6d\",\"#481c6e\",\"#481d6f\",\"#481f70\",\"#482071\",\"#482173\",\"#482374\",\"#482475\",\"#482576\",\"#482677\",\"#482878\",\"#482979\",\"#472a7a\",\"#472c7a\",\"#472d7b\",\"#472e7c\",\"#472f7d\",\"#46307e\",\"#46327e\",\"#46337f\",\"#463480\",\"#453581\",\"#453781\",\"#453882\",\"#443983\",\"#443a83\",\"#443b84\",\"#433d84\",\"#433e85\",\"#423f85\",\"#424086\",\"#424186\",\"#414287\",\"#414487\",\"#404588\",\"#404688\",\"#3f4788\",\"#3f4889\",\"#3e4989\",\"#3e4a89\",\"#3e4c8a\",\"#3d4d8a\",\"#3d4e8a\",\"#3c4f8a\",\"#3c508b\",\"#3b518b\",\"#3b528b\",\"#3a538b\",\"#3a548c\",\"#39558c\",\"#39568c\",\"#38588c\",\"#38598c\",\"#375a8c\",\"#375b8d\",\"#365c8d\",\"#365d8d\",\"#355e8d\",\"#355f8d\",\"#34608d\",\"#34618d\",\"#33628d\",\"#33638d\",\"#32648e\",\"#32658e\",\"#31668e\",\"#31678e\",\"#31688e\",\"#30698e\",\"#306a8e\",\"#2f6b8e\",\"#2f6c8e\",\"#2e6d8e\",\"#2e6e8e\",\"#2e6f8e\",\"#2d708e\",\"#2d718e\",\"#2c718e\",\"#2c728e\",\"#2c738e\",\"#2b748e\",\"#2b758e\",\"#2a768e\",\"#2a778e\",\"#2a788e\",\"#29798e\",\"#297a8e\",\"#297b8e\",\"#287c8e\",\"#287d8e\",\"#277e8e\",\"#277f8e\",\"#27808e\",\"#26818e\",\"#26828e\",\"#26828e\",\"#25838e\",\"#25848e\",\"#25858e\",\"#24868e\",\"#24878e\",\"#23888e\",\"#23898e\",\"#238a8d\",\"#228b8d\",\"#228c8d\",\"#228d8d\",\"#218e8d\",\"#218f8d\",\"#21908d\",\"#21918c\",\"#20928c\",\"#20928c\",\"#20938c\",\"#1f948c\",\"#1f958b\",\"#1f968b\",\"#1f978b\",\"#1f988b\",\"#1f998a\",\"#1f9a8a\",\"#1e9b8a\",\"#1e9c89\",\"#1e9d89\",\"#1f9e89\",\"#1f9f88\",\"#1fa088\",\"#1fa188\",\"#1fa187\",\"#1fa287\",\"#20a386\",\"#20a486\",\"#21a585\",\"#21a685\",\"#22a785\",\"#22a884\",\"#23a983\",\"#24aa83\",\"#25ab82\",\"#25ac82\",\"#26ad81\",\"#27ad81\",\"#28ae80\",\"#29af7f\",\"#2ab07f\",\"#2cb17e\",\"#2db27d\",\"#2eb37c\",\"#2fb47c\",\"#31b57b\",\"#32b67a\",\"#34b679\",\"#35b779\",\"#37b878\",\"#38b977\",\"#3aba76\",\"#3bbb75\",\"#3dbc74\",\"#3fbc73\",\"#40bd72\",\"#42be71\",\"#44bf70\",\"#46c06f\",\"#48c16e\",\"#4ac16d\",\"#4cc26c\",\"#4ec36b\",\"#50c46a\",\"#52c569\",\"#54c568\",\"#56c667\",\"#58c765\",\"#5ac864\",\"#5cc863\",\"#5ec962\",\"#60ca60\",\"#63cb5f\",\"#65cb5e\",\"#67cc5c\",\"#69cd5b\",\"#6ccd5a\",\"#6ece58\",\"#70cf57\",\"#73d056\",\"#75d054\",\"#77d153\",\"#7ad151\",\"#7cd250\",\"#7fd34e\",\"#81d34d\",\"#84d44b\",\"#86d549\",\"#89d548\",\"#8bd646\",\"#8ed645\",\"#90d743\",\"#93d741\",\"#95d840\",\"#98d83e\",\"#9bd93c\",\"#9dd93b\",\"#a0da39\",\"#a2da37\",\"#a5db36\",\"#a8db34\",\"#aadc32\",\"#addc30\",\"#b0dd2f\",\"#b2dd2d\",\"#b5de2b\",\"#b8de29\",\"#bade28\",\"#bddf26\",\"#c0df25\",\"#c2df23\",\"#c5e021\",\"#c8e020\",\"#cae11f\",\"#cde11d\",\"#d0e11c\",\"#d2e21b\",\"#d5e21a\",\"#d8e219\",\"#dae319\",\"#dde318\",\"#dfe318\",\"#e2e418\",\"#e5e419\",\"#e7e419\",\"#eae51a\",\"#ece51b\",\"#efe51c\",\"#f1e51d\",\"#f4e61e\",\"#f6e620\",\"#f8e621\",\"#fbe723\",\"#fde725\"]\n\n  vmin: number;\n  vmax: number;\n  colour_mapper = new Bokeh.LinearColorMapper({\n    palette: this.viridis_hex\n  })\n  ticker = new Bokeh.BasicTicker()\n  colour_bar = new Bokeh.ColorBar({\n    ticker: this.ticker,\n    label_standoff: 7,\n    location: [-6,0]\n  })\n\n  ngOnInit() {\n    this.figureInitialise()\n  }\n\n  figureInitialise() {\n    this.fig = this.plt.figure({\n        title: this.title, tools: this.tools,\n        plot_width: this.plot_width, plot_height: this.plot_height\n      });\n\n    this.pcolour_renderer = this.fig.rect(\n      { field: 'x' }, { field: 'y' }, 0.1, 0.1, {\n        source: this.pcolour_source,\n        color:  { field: 'c' }\n    });\n\n    this.scatter_renderer = this.fig.circle(\n      { field: 'x' }, { field: 'y' }, {\n        source: this.scatter_source,\n        size: 15,\n        line_color: 'black',\n        fill_color:  { field: 'c' },\n        line_width: 2\n    });\n\n    this.fig.add_layout(this.colour_bar, 'left')\n  }\n\n  runAllUpdates() {\n    this.updateScatterData()\n    this.updatePcolourData()\n    this.updateScatterColour()\n\n    this.updateSourceData()\n\n    this.updateFigureDimensions()\n  }\n\n  updateScatterData() {\n    this.scatter_data = {\n      x: <number[]> this.scatter_x,\n      y: <number[]> this.scatter_y,\n      z: <number[]> this.scatter_z,\n      hover_width: <string[]> this.scatter_hover_width,\n      hover_length: <string[]> this.scatter_hover_length,\n      hover_area: <string[]> this.scatter_hover_area,\n      hover_measured_factor: <string[]> this.scatter_hover_measured_factor,\n      hover_predicted_factor: <string[]> this.scatter_hover_predicted_factor,\n      c: <string[]> this.scatter_c\n    }\n  }\n\n  updatePcolourData() {\n    this.pcolour_data = {\n      x: <number[]> this.pcolour_x,\n      y: <number[]> this.pcolour_y,\n      z: <number[]> this.pcolour_z,\n      hover_width: <string[]> this.pcolour_hover_width,\n      hover_length: <string[]> this.pcolour_hover_length,\n      hover_predicted_factor: <string[]> this.pcolour_hover_predicted_factor,\n      c: <string[]> this.pcolour_c\n    }\n  }\n\n  updateScatterColour() {\n    if (this.old_scatter_z != this.scatter_z || this.old_pcolour_z != this.pcolour_z) {\n      let allZ = this.scatter_z.concat(this.pcolour_z);\n      this.vmin = Math.min(...allZ);\n      this.vmax = Math.max(...allZ);\n\n      this.colour_mapper.low = this.vmin\n      this.colour_mapper.high = this.vmax\n      this.colour_bar.color_mapper = this.colour_mapper\n\n      this.scatter_c = this.colour_mapper.v_compute(this.scatter_z)\n      this.pcolour_c = this.colour_mapper.v_compute(this.pcolour_z)\n\n      this.scatter_data.c = this.scatter_c\n      this.pcolour_data.c = this.pcolour_c\n\n      this.old_scatter_z = this.scatter_z;\n      this.old_pcolour_z = this.pcolour_z;\n\n      if (this.scatter_data.c.length < this.scatter_data.x.length) {\n        let difference = this.scatter_data.x.length - this.scatter_data.c.length\n        for (let i=0; i < difference; i++) {\n          this.scatter_data.c.push('#ffffff')\n        }\n      }\n    }\n  }\n\n  updateSourceData() {\n    if (this.scatter_source.data != this.scatter_data) {\n      this.scatter_source.data = this.scatter_data;\n    }\n\n    if (this.pcolour_source.data != this.pcolour_data) {\n      this.pcolour_source.data = this.pcolour_data;\n    }\n  }\n\n  updateFigureDimensions() {\n    if (this.fig != null) {\n      if (this.fig.width != this.plot_width) {\n        if (this.plot_width < 200) {\n          this.fig.width = 200\n        }\n        else {\n          this.fig.width = this.plot_width;\n        }        \n      }\n      if (this.fig.height != this.plot_height) {\n        this.fig.height = this.plot_height;\n      }\n    }\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/bokeh-components/bokeh-pcolour.ts\n **/","import { Component, Input, OnChanges, ViewChild, AfterViewInit, OnInit } from '@angular/core';\n\nimport { BokehPcolour } from './bokeh-pcolour'\n\ndeclare var Bokeh: any;\n\n@Component({\n  selector: 'my-bokeh-use-model',\n  template: require('./bokeh-plot.html')\n})\nexport class BokehUseModelComponent extends BokehPcolour implements AfterViewInit, OnChanges {\n  @Input()\n  title: string = \"Figure Title\";\n  @Input()\n  plot_width: number = 300;\n  @Input()\n  plot_height: number = 300;\n  @Input()\n  scatter_x: number[];\n  @Input()\n  scatter_y: number[];\n  @Input()\n  scatter_z: number[] = [0.5];\n  @Input()\n  pcolour_x: number[];\n  @Input()\n  pcolour_y: number[];\n  @Input()\n  pcolour_z: number[];\n  @Input()\n  enabled: boolean = true;\n  @Input()\n  predicted_factor: number[] = []\n  @Input()\n  area: number[] = []\n\n  old_area: number[] = []\n  old_predicted_factor: number[] = []\n\n  @ViewChild('bokehplot') bokehplot: any;\n\n\n  ngOnChanges() {\n    this.updateHoverData()\n    this.runAllUpdates()\n  }\n\n  updateHoverData() {\n    if (this.scatter_data.x != this.scatter_x) {\n      this.scatter_hover_width = <string[]> []\n      for (let x of this.scatter_x) {\n        this.scatter_hover_width.push((Math.round(x*10)/10).toFixed(1))\n      }\n    }\n    if (this.scatter_data.y != this.scatter_y) {\n      this.scatter_hover_length = <string[]> []\n      for (let y of this.scatter_y) {\n        this.scatter_hover_length.push((Math.round(y*10)/10).toFixed(1))\n      }\n    }\n    if (this.scatter_data.z != this.scatter_z) {\n      this.scatter_hover_measured_factor = <string[]> []\n      for (let z of this.scatter_z) {\n        this.scatter_hover_measured_factor.push((Math.round(z*1000)/1000).toFixed(3))\n      }\n      if (this.scatter_hover_measured_factor.length < this.scatter_x.length) {\n        let difference = this.scatter_x.length - this.scatter_hover_measured_factor.length\n        for (let i=0; i < difference; i++) {\n          this.scatter_hover_measured_factor.push('Not given')\n        }\n      }\n    }\n    if (this.old_predicted_factor != this.predicted_factor) {\n      this.scatter_hover_predicted_factor = <string[]> []\n      for (let z of this.predicted_factor) {\n        this.scatter_hover_predicted_factor.push((Math.round(z*1000)/1000).toFixed(3))\n      }\n      this.old_predicted_factor = this.predicted_factor\n    }\n    if (this.old_area != this.area) {\n      this.scatter_hover_area = <string[]> []\n      for (let a of this.area) {\n        this.scatter_hover_area.push((Math.round(a*10)/10).toFixed(1))\n      }\n      this.old_area = this.area\n    }\n  }\n\n    // hover_width: <string[]> [],\n    // hover_length: <string[]> [],\n    // hover_area: <string[]> [],\n    // hover_measured_factor: <string[]> [],\n    // hover_predicted_factor: <string[]> [],\n\n  ngAfterViewInit() {\n    let hover_tool = new Bokeh.HoverTool({\n      tooltips: [\n        [\"Width\", \" @hover_width cm\"],\n        [\"Length\", \" @hover_length cm\"],\n        [\"Area\", \" @hover_area cm^2\"],\n        [\"Measured factor\", \" @hover_measured_factor\"],\n        [\"Predicted factor\", \" @hover_predicted_factor\"],\n        // [\"Predicted - Measured\", \" @hover_difference\"]\n      ],\n      renderers: [\n        this.scatter_renderer\n      ]\n    })\n    this.fig.add_tools(hover_tool)\n\n    this.doc.add_root(this.fig);\n    Bokeh.embed.add_document_standalone(\n      this.doc, this.bokehplot.nativeElement); \n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/bokeh-components/bokeh-use-model.component.ts\n **/","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\n\nimport { CurrentSettings } from '../../services/data-services/current-settings'\nimport { DataPersistenceService } from '../../services/data-services/data-persistence.service'\nimport { MachineSpecification, MachineSpecificationsService } from '../../services/data-services/specifications-data.service'\n\n\n@Component({\n  selector: 'my-choose-specifications',\n  template: require('./choose-specifications.component.html')\n})\nexport class ChooseSpecificationsComponent implements OnInit {\n  @Output()\n  settingsUpdated = new EventEmitter()\n\n  constructor(\n    private dataPersistenceService: DataPersistenceService,\n    private machineSpecificationService: MachineSpecificationsService\n  ) { }\n \n  ngOnInit() {\n    console.log('choose-specifications.component ngOnInit')\n    this.machineSpecificationService.loadData()\n      .then(() => {\n        this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)\n      })\n  }\n\n  updateMachineID(newCurrentMachine: string) {\n    console.log('choose-specifications.component updateMachineID')\n    this.machineSpecificationService.currentSettings.machine = newCurrentMachine\n    this.machineSpecificationService.updateCurrentSpecification()\n    this.machineSpecificationService.refreshCurrentSettings()\n\n    this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings)\n    this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)\n  }\n\n  updateEnergy(newCurrentEnergy: number) {\n    console.log('choose-specifications.component updateEnergy')\n    this.machineSpecificationService.currentSettings.energy = Number(newCurrentEnergy)\n    this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings)\n\n    this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)\n  }\n\n  updateApplicator(newCurrentApplicator: string) {\n    console.log('choose-specifications.component updateApplicator')\n    this.machineSpecificationService.currentSettings.applicator = newCurrentApplicator\n    this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings)\n\n    this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)\n  }\n\n  updateSSD(newCurrentSSD: number) {\n    console.log('choose-specifications.component updateSSD')\n    this.machineSpecificationService.currentSettings.ssd = Number(newCurrentSSD)\n    this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings)\n\n    this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/model-components/choose-specifications.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\" *ngIf=\\\"machineSpecificationService != null && machineSpecificationService.currentSettings != null && machineSpecificationService.currentSpecification != null\\\">\\n  <div \\n      *ngIf=\\\"machineSpecificationService.machineList.length > 0\\\" \\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>Machine ID</h6>\\n    <select\\n        [(ngModel)]=\\\"machineSpecificationService.currentSettings.machine\\\"\\n        (input)=\\\"updateMachineID($event.target.value)\\\">\\n      <option *ngFor=\\\"let machine of machineSpecificationService.machineList\\\">{{machine}}</option>\\n    </select>\\n  </div>\\n\\n  <div \\n      *ngIf=\\\"machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null\\\" \\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>Energy</h6>\\n    <div *ngIf=\\\"machineSpecificationService.currentSpecification.energy != null\\\">\\n      <select\\n          [(ngModel)]=\\\"machineSpecificationService.currentSettings.energy\\\"\\n          (input)=\\\"updateEnergy($event.target.value)\\\"\\n          *ngIf=\\\"machineSpecificationService.currentSpecification.energy.length > 0\\\">\\n        <option *ngFor=\\\"let energy of machineSpecificationService.currentSpecification.energy\\\" value=\\\"{{energy}}\\\">{{energy}} MeV</option>\\n      </select>\\n    </div>\\n    <p *ngIf=\\\"machineSpecificationService.currentSpecification.energy.length == 0\\\">\\n      This machine doesn't have any energies defined. Please \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        define at least one energy.\\n      </a>\\n    </p>\\n  </div>\\n\\n  <div \\n      *ngIf=\\\"machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null\\\" \\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>Applicator</h6>\\n    <div *ngIf=\\\"machineSpecificationService.currentSpecification.applicator != null\\\">\\n      <select \\n          [(ngModel)]=\\\"machineSpecificationService.currentSettings.applicator\\\"\\n          (input)=\\\"updateApplicator($event.target.value)\\\"\\n          *ngIf=\\\"machineSpecificationService.currentSpecification.applicator.length > 0\\\">\\n        <option *ngFor=\\\"let applicator of machineSpecificationService.currentSpecification.applicator\\\">{{applicator}}</option>\\n      </select>\\n    </div>\\n    <p *ngIf=\\\"machineSpecificationService.currentSpecification.applicator.length == 0\\\">\\n      This machine doesn't have any applicators defined. Please \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        define at least one applicator.\\n      </a>\\n    </p>\\n  </div>\\n\\n  <div \\n      *ngIf=\\\"machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null\\\" \\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>SSD</h6>\\n    <div *ngIf=\\\"machineSpecificationService.currentSpecification.ssd != null\\\">\\n      <select  \\n          [(ngModel)]=\\\"machineSpecificationService.currentSettings.ssd\\\"\\n          (input)=\\\"updateSSD($event.target.value)\\\"\\n          *ngIf=\\\"machineSpecificationService.currentSpecification.ssd.length > 0\\\">\\n        <option *ngFor=\\\"let ssd of machineSpecificationService.currentSpecification.ssd\\\">{{ssd}}</option>\\n      </select>\\n    </div>\\n    <p *ngIf=\\\"machineSpecificationService.currentSpecification.ssd.length == 0\\\">\\n      This machine doesn't have an ssd defined. Please \\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\n        define at least one ssd.\\n      </a>\\n    </p>\\n  </div>\\n</div>\\n  \\n<div class=\\\"mdl-grid\\\" *ngIf=\\\"machineSpecificationService == null || machineSpecificationService.currentSettings == null || machineSpecificationService.currentSpecification == null\\\">\\n  <div class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\n    <h6>Machine ID</h6>\\n    <select></select>\\n  </div>\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/model-components/choose-specifications.component.html\n ** module id = 205\n ** module chunks = 0\n **/","import { Component, Input, Output, OnChanges, EventEmitter, ViewChild, OnInit } from '@angular/core';\n\nimport { MyJsonPipe } from '../../pipes/my-json.pipe'\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'my-json-edit',\n  template: require('./json-edit.component.html'),\n})\nexport class JsonEditComponent implements OnInit {\n  @Input()\n  input: {};\n  @Input()\n  buttonText: string = \"Button\";\n  @Output()\n  inputUpdated = new EventEmitter();\n  @Input()\n  validationCheck: Function = (parsedJSON: {}) => {};\n  @Input()\n  useMyJsonPipe: boolean = false;\n\n  editedInput: {};\n\n  lines: number = 10;\n\n  jsonValid: boolean = true;\n  jsonErrorMessage: string;\n\n  @ViewChild('jsonInput') jsonInputDir: any;\n\n  onInput(jsonInput: string) {\n    this.parseAndCheckJSON(jsonInput)\n  }\n\n  ngOnInit() {\n    let value = \"\";\n    if (this.useMyJsonPipe) {\n       value = new MyJsonPipe().transform(this.input); \n    }\n    else {\n      value = new JsonPipe().transform(this.input);\n    }     \n    this.lines = value.split(/\\r\\n|\\r|\\n/).length;    \n    this.editedInput = this.input;\n  }\n\n  updateInput() {\n    this.input = this.editedInput \n    this.inputUpdated.emit(this.input);\n  }\n\n  parseAndCheckJSON(jsonInput:string) {\n    let oldJsonValid = this.jsonValid;\n    this.jsonValid = false;\n    try {\n      let parsedJSON = JSON.parse(jsonInput);\n      this.validationCheck(parsedJSON);\n      this.editedInput = parsedJSON;\n      this.jsonValid = true;\n    }\n    catch(err) {\n      this.jsonErrorMessage = 'Error in JSON input. ' + err ;\n    }\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/specification-components/json-edit.component.ts\n **/","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'myJson', pure: false})\nexport class MyJsonPipe implements PipeTransform {\n  transform(input: {}): string {\n    let jsonText = JSON.stringify(input, null, 4)\n    jsonText = jsonText.replace(/(-?\\d+(\\.\\d+)?),\\n\\s*/g, \"$1, \");\n    jsonText = jsonText.replace(/null,\\n\\s*/g, \"null, \");\n    // jsonText = jsonText.replace(/:/g, \":\\n\");\n    return jsonText\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/pipes/my-json.pipe.ts\n **/","module.exports = \"<button\\n  mdl-button mdl-button-type=\\\"raised\\\" \\n  mdl-colored=\\\"primary\\\" \\n  mdl-ripple\\n  [disabled]=\\\"!jsonValid || input==editedInput\\\"\\n  (click)=\\\"updateInput()\\\">{{buttonText}} \\n</button>\\n<div *ngIf=\\\"!jsonValid\\\">\\n  {{jsonErrorMessage}}\\n</div>\\n<mdl-textfield *ngIf=\\\"!useMyJsonPipe\\\" #jsonInput\\n  [value]=\\\"input | json\\\"\\n  (input)=\\\"onInput($event.target.value)\\\"\\n  [rows]=\\\"20\\\" \\n  style=\\\"width:100%\\\">\\n</mdl-textfield>\\n<mdl-textfield *ngIf=\\\"useMyJsonPipe\\\" #jsonInput\\n  [value]=\\\"input | myJson\\\"\\n  (input)=\\\"onInput($event.target.value)\\\"\\n  [rows]=\\\"20\\\" \\n  style=\\\"width:100%\\\">\\n</mdl-textfield>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/specification-components/json-edit.component.html\n ** module id = 208\n ** module chunks = 0\n **/","import { Component, OnInit, Input} from '@angular/core';\n\nimport { Coordinates } from '../../services/data-services/insert-data'\nimport { InsertData } from '../../services/data-services/insert-data'\n\nimport { MdlDefaultTableModel } from 'angular2-mdl';\n\n@Component({\n  selector: 'my-send-to-parameterisation',\n  template: require('./send-to-parameterisation.component.html'),\n})\nexport class SendToParameterisationComponent implements OnInit {\n  @Input()\n  insertData: InsertData\n\n  tableData:[any] = [\n      {machine:null, applicator:null, energy:null, ssd:null}\n  ];\n\n  public tableModel = new MdlDefaultTableModel([\n        {key:'machine', name:'Machine', sortable:true, numeric:false},\n        {key:'applicator', name:'App', sortable:true, numeric:false},\n        {key:'energy', name:'Eng', sortable:true, numeric:true},\n        {key:'ssd', name:'SSD', sortable:true, numeric:true}\n      ]);\n\n  ngOnInit() {\n    this.tableData[0].machine = this.insertData.machine;\n    this.tableData[0].applicator = this.insertData.applicator;\n    this.tableData[0].energy = this.insertData.energy;\n    this.tableData[0].ssd = this.insertData.ssd;\n    this.tableModel.addAll(this.tableData);\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/dicom-components/send-to-parameterisation.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <my-plot \\n      [insert_x]=\\\"insertData.parameterisation.insert.x\\\"\\n      [insert_y]=\\\"insertData.parameterisation.insert.y\\\"\\n      [circle]=\\\"insertData.parameterisation.circle\\\"\\n      [ellipse]=\\\"insertData.parameterisation.ellipse\\\">\\n    </my-plot>\\n  </div>\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\n    <mdl-table mdl-shadow=\\\"2\\\"\\n      [table-model]=\\\"tableModel\\\">\\n    </mdl-table>\\n  </div>\\n</div>\\n\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/dicom-components/send-to-parameterisation.component.html\n ** module id = 210\n ** module chunks = 0\n **/","import { Component, OnInit, Input, OnChanges } from '@angular/core';\n\nimport { MdlDefaultTableModel } from 'angular2-mdl';\n\n@Component({\n  selector: 'my-width-length-table',\n  template: require('./width-length-table.component.html'),\n})\nexport class WidthLengthTableComponent implements OnInit {\n  @Input()\n  width: number;\n  @Input()\n  length: number;\n  @Input()\n  enabled: boolean;\n\n  tableData:[any] = [\n      {width:null, length:null}\n  ];\n\n  public tableModel = new MdlDefaultTableModel([\n        {key:'width', name:'Width', sortable:true, numeric:true},\n        {key:'length', name:'Length', sortable:true, numeric:true}\n      ]);\n\n  ngOnChanges() {\n    if (this.enabled) {\n      this.tableData[0].width = this.width;\n      this.tableData[0].length = this.length;\n    }\n    else {\n      this.tableData[0].width = null;\n      this.tableData[0].length = null;\n    }\n\n  }\n\n  ngOnInit() {\n    this.tableModel.addAll(this.tableData);\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/components/parameterise-components/width-length-table.component.ts\n **/","module.exports = \"<mdl-table mdl-shadow=\\\"2\\\"\\n  [table-model]=\\\"tableModel\\\">\\n</mdl-table>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/parameterise-components/width-length-table.component.html\n ** module id = 212\n ** module chunks = 0\n **/","import { Injectable } from '@angular/core';\nimport { LocalStorage } from './localstoragemodule';\n\n@Injectable()\nexport class LocalStorageService {\n  isSupported = LocalStorage.isSupported;\n  hasItem = LocalStorage.hasItem;\n  getRemainingSpace = LocalStorage.getRemainingSpace;\n  getMaximumSpace = LocalStorage.getMaximumSpace;\n  getUsedSpace = LocalStorage.getUsedSpace;\n  getItemUsedSpace = LocalStorage.getItemUsedSpace;\n  getBackup = LocalStorage.getBackup;\n  applyBackup = LocalStorage.applyBackup;\n  consoleInfo = LocalStorage.consoleInfo;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/local-storage.service.ts\n **/","/**\n * Check if localStorage is supported                       const isSupported: boolean\n * Check if localStorage has an Item                        function hasItem(key: string): boolean\n * Get the amount of space left in localStorage             function getRemainingSpace(): number\n * Get the maximum amount of space in localStorage          function getMaximumSpace(): number\n * Get the used space in localStorage                       function getUsedSpace(): number\n * Get the used space of an item in localStorage            function getItemUsedSpace(): number\n * Backup Assosiative Array                                 interface Backup\n * Get a Backup of localStorage                             function getBackup(): Backup\n * Apply a Backup to localStorage                           function applyBackup(backup: Backup, fClear: boolean = true, fOverwriteExisting: boolean = true)\n * Dump all information of localStorage in the console      function consoleInfo(fShowMaximumSize: boolean = false)\n */\nexport module LocalStorage {\n    // Copied from https://gist.github.com/CodeiSir/1fb8bd9154dfde7eb0c7\n    // found from http://stackoverflow.com/a/34245594\n    \n    /**\n     * Flag set true if the Browser supports localStorage, widthout affecting it\n     */\n    export const isSupported: boolean = (() => {\n        try {\n            let itemBackup = localStorage.getItem(\"\")\n            localStorage.removeItem(\"\");\n            localStorage.setItem(\"\", itemBackup);\n            if (itemBackup === null) localStorage.removeItem(\"\")\n            else localStorage.setItem(\"\", itemBackup)\n            return true;\n        } catch (e) {\n            return false;\n        }\n    })()\n\n    /**\n     * Check if localStorage has an Item / exists with the give key\n     * @param key the key of the Item\n     */\n    export function hasItem(key: string): boolean {\n        return localStorage.getItem(key) !== null\n    }\n\n    /**\n     * This will return the left space in localStorage without affecting it's content\n     * Might be slow !!!\n     */\n    export function getRemainingSpace(): number {\n        let itemBackup = localStorage.getItem(\"\")\n        let increase = true\n        let data = \"1\"\n        let totalData = \"\"\n        let trytotalData = \"\"\n        while (true) {\n            try {\n                trytotalData = totalData + data\n                localStorage.setItem(\"\", trytotalData);\n                totalData = trytotalData;\n                if (increase) data += data\n            } catch (e) {\n                if (data.length < 2) {\n                    break;\n                }\n                increase = false\n                data = data.substr(data.length / 2)\n            }\n        }\n        if (itemBackup === null) localStorage.removeItem(\"\")\n        else localStorage.setItem(\"\", itemBackup)\n\n        return totalData.length\n    }\n\n    /**\n     * This function returns the maximum size of localStorage without affecting it's content\n     * Might be slow !!!\n     */\n    export function getMaximumSpace(): number {\n        let backup = getBackup()\n        localStorage.clear()\n        let max = getRemainingSpace()\n        applyBackup(backup)\n        return max\n    }\n\n    /**\n     * This will return the currently used size of localStorage\n     */\n    export function getUsedSpace(): number {\n        let sum = 0\n\n        for (let i = 0; i < localStorage.length; ++i) {\n            let key = localStorage.key(i)\n            let value = localStorage.getItem(key)\n            sum += key.length + value.length\n        }\n\n        return sum\n    }\n\n    /**\n     * This will return the currently used size of a given Item, returns NaN if key is not found\n     * @param key\n     */\n    export function getItemUsedSpace(key: string): number {\n        let value = localStorage.getItem(key)\n        if (value === null) {\n            return NaN\n        } else {\n            return key.length + value.length\n        }\n    }\n\n    /** \n     * Associative-array for localStorage holding key->value \n     */\n    export interface Backup {\n        [index: string]: string\n    }\n\n    /**\n     * This will return a localStorage-backup (Associative-Array key->value)\n     */\n    export function getBackup(): Backup {\n        let backup: Backup = {}\n\n        for (let i = 0; i < localStorage.length; ++i) {\n            let key = localStorage.key(i)\n            let value = localStorage.getItem(key)\n            backup[key] = value\n        }\n\n        return backup\n    }\n\n    /**\n     * This will apply a localStorage-Backup (Associative-Array key->value)\n     * @param backup            associative-array \n     * @param fClear             optional flag to clear all existing storage first. Default: true\n     * @param fOverwriteExisting optional flag to replace existing keys. Default: true\n     */\n    export function applyBackup(backup: Backup, fClear: boolean = true, fOverwriteExisting: boolean = true) {\n        if (fClear == true) {\n            localStorage.clear()\n        }\n\n        for (let key in backup) {\n            if (fOverwriteExisting === false && backup[key] !== undefined) {\n                continue\n            }\n            let value = backup[key]\n            localStorage.setItem(key, value)\n        }\n    }\n\n    /**\n     * This functions dumps all keys and values of the local Storage to the console,\n     * as well as the current size and number of items\n     * @param fShowMaximumSize optional, flag show maximum size of localStorage. Default: false\n     */\n    export function consoleInfo(fShowMaximumSize: boolean = false) {\n        let amount = 0\n        let size = 0\n\n        for (let i = 0; i < localStorage.length; ++i) {\n            let key = localStorage.key(i)\n            let value = localStorage.getItem(key);\n            console.log(amount, key, value)\n            size += key.length + value.length\n            amount++\n        }\n        console.log(\"Total entries:\", amount)\n        console.log(\"Total size:\", size)\n        if (fShowMaximumSize === true) {\n            let maxSize = getMaximumSpace()\n            console.log(\"Total size:\", maxSize)\n        }\n    }\n}\n/*\n    // Example\n    console.log(\"LocalStorage supported:\", LocalStorage.isSupported)// true - I hope so anyways 😉\n    localStorage.setItem(\"asd\", \"ASDASD\")                           // sets / overwrites the item \"asd\"\n    localStorage.setItem(\"asd\" + Math.random(), \"ASDASD\")           // set another item each time you refresh the page\n    var backup = LocalStorage.getBackup()                           // creates a backup, we will need it later!\n    console.log(JSON.stringify(backup))                             // this is how the backup looks like\n    var usedSpace = LocalStorage.getUsedSpace()                     // amount of space used right now\n    console.log(\"Used Space:\", usedSpace)                \n    var maxSpace = LocalStorage.getMaximumSpace()                   // amount of maximum space aviable\n    console.log(\"Maximum Space:\", maxSpace)             \n    var remSpace = LocalStorage.getRemainingSpace()                 // amount of remaining space\n    console.log(\"Remaining Space:\", remSpace)\n    console.log(\"SpaceCheck\", maxSpace === usedSpace + remSpace)    // true\n    console.log(\"hasItem\", LocalStorage.hasItem(\"nothis0ne\"))       // we don't have this one in our localStorage\n    localStorage.clear()                                            // oops, we deleted the localStorage!\n    console.log(\"has asd\",LocalStorage.hasItem(\"asd\"))              // item asd is lost 😒\n    LocalStorage.applyBackup(backup)                                // but we have a backup, restore it!\n    LocalStorage.consoleInfo()                                      // show all the info we have, see the backup worked 😊\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/services/data-services/localstoragemodule.ts\n **/"],"sourceRoot":""}