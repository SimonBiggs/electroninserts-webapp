webpackJsonp([0],[function(e,t,n){"use strict";var i=n(1),o=n(3),a=n(23);o.enableProdMode(),i.platformBrowserDynamic().bootstrapModule(a.AppModule)},,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(21),s=n(24),c=n(28),l=n(21),d=n(29),p=n(69),h=n(71),m=n(126),u=n(199),f=n(201),g=n(203),v=n(205),y=n(149),b=n(197),S=n(158),w=n(206),D=n(208),C=n(160),x=n(211),_=n(127),k=n(213),I=n(141),M=n(152),P=n(151),L=n(154),A=n(156),T=n(147),R=n(209),O=n(137),j=n(140),F=n(132),E=n(215),B=n(139),U=n(129),V=n(131),N=function(){function AppModule(){}return AppModule=i([a.NgModule({imports:[r.BrowserModule,s.FormsModule,c.HttpModule,h.MdlModule,m.routing,p.Angulartics2Module.forRoot()],declarations:[u.AppComponent,_.ParameteriseComponent,b.FurtherDetailsComponent,f.PlotComponent,T.PageNotFoundComponent,k.WidthLengthTableComponent,R.MyJsonPipe,y.HomeComponent,P.CreateModelComponent,L.UseModelComponent,A.StorageManagementComponent,S.SpecificationsComponent,C.DicomComponent,x.SendToParameterisationComponent,D.JsonEditComponent,g.BokehCreateModelComponent,v.BokehUseModelComponent,w.ChooseSpecificationsComponent,M.WidthLengthAreaInputComponent,I.XYInputComponent],providers:[U.ElectronApiService,V.TitleService,l.Title,E.LocalStorageService,d.Angulartics2GoogleAnalytics,O.ModelData,O.ModelMeasurement,O.ModelGrid,O.Predictions,O.AreaLengthConversion,F.DataPersistenceService,j.CurrentSettings,B.MachineSpecificationsService],bootstrap:[u.AppComponent]}),o("design:paramtypes",[])],AppModule)}();t.AppModule=N},,,,,,function(e,t,n){"use strict";var i=n(3),o=n(30),a=function(){function Angulartics2GoogleAnalytics(e){var t=this;this.angulartics2=e,this.angulartics2.settings.pageTracking.trackRelativePath=!0,this.angulartics2.settings.ga={additionalAccountNames:[],userId:null},this.angulartics2.pageTrack.subscribe(function(e){return t.pageTrack(e.path)}),this.angulartics2.eventTrack.subscribe(function(e){return t.eventTrack(e.action,e.properties)}),this.angulartics2.exceptionTrack.subscribe(function(e){return t.exceptionTrack(e)}),this.angulartics2.setUsername.subscribe(function(e){return t.setUsername(e)}),this.angulartics2.setUserProperties.subscribe(function(e){return t.setUserProperties(e)}),this.angulartics2.userTimings.subscribe(function(e){return t.userTimings(e)})}return Angulartics2GoogleAnalytics.prototype.pageTrack=function(e){if("undefined"!=typeof _gaq&&_gaq){_gaq.push(["_trackPageview",e]);for(var t=0,n=this.angulartics2.settings.ga.additionalAccountNames;t<n.length;t++){var i=n[t];_gaq.push([i+"._trackPageview",e])}}if("undefined"!=typeof ga&&ga){this.angulartics2.settings.ga.userId&&ga("set","&uid",this.angulartics2.settings.ga.userId),ga("send","pageview",e);for(var o=0,a=this.angulartics2.settings.ga.additionalAccountNames;o<a.length;o++){var i=a[o];ga(i+".send","pageview",e)}}},Angulartics2GoogleAnalytics.prototype.eventTrack=function(e,t){if(t&&t.category||(t=t||{},t.category="Event"),t.value){var n=parseInt(t.value,10);t.value=isNaN(n)?0:n}if(ga){var i={eventCategory:t.category,eventAction:e,eventLabel:t.label,eventValue:t.value,nonInteraction:t.noninteraction,page:t.page||location.hash.substring(1)||location.pathname,userId:this.angulartics2.settings.ga.userId};this.setDimensionsAndMetrics(t),this.angulartics2.settings.ga.transport?ga("send","event",i,{transport:this.angulartics2.settings.ga.transport}):ga("send","event",i);for(var o=0,a=this.angulartics2.settings.ga.additionalAccountNames;o<a.length;o++){var r=a[o];ga(r+".send","event",i)}}else _gaq&&_gaq.push(["_trackEvent",t.category,e,t.label,t.value,t.noninteraction])},Angulartics2GoogleAnalytics.prototype.exceptionTrack=function(e){return e&&e.appId&&e.appName&&e.appVersion?(void 0===e.fatal&&(console.log('No "fatal" provided, sending with fatal=true'),e.exFatal=!0),e.exDescription=e.description,void ga("send","exception",e)):void console.error("Must be setted appId, appName and appVersion.")},Angulartics2GoogleAnalytics.prototype.setUsername=function(e){this.angulartics2.settings.ga.userId=e},Angulartics2GoogleAnalytics.prototype.setUserProperties=function(e){this.setDimensionsAndMetrics(e)},Angulartics2GoogleAnalytics.prototype.userTimings=function(e){return e&&e.timingCategory&&e.timingVar&&e.timingValue?void(ga&&ga("send","timing",e)):void console.error("Properties timingCategory, timingVar, and timingValue are required to be set.")},Angulartics2GoogleAnalytics.prototype.setDimensionsAndMetrics=function(e){if(ga)for(var t=1;t<=200;t++)e["dimension"+t.toString()]&&ga("set","dimension"+t.toString(),e["dimension"+t.toString()]),e["metric"+t.toString()]&&ga("set","metric"+t.toString(),e["metric"+t.toString()])},Angulartics2GoogleAnalytics.decorators=[{type:i.Injectable}],Angulartics2GoogleAnalytics.ctorParameters=[{type:o.Angulartics2}],Angulartics2GoogleAnalytics}();t.Angulartics2GoogleAnalytics=a},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";var i=n(41),o=n(127),a=n(147),r=n(149),s=n(151),c=n(154),l=n(156),d=n(158),p=n(160),h=n(197),m=[{path:"home",component:r.HomeComponent,data:{title:"Home"}},{path:"details",component:h.FurtherDetailsComponent},{path:"storage",redirectTo:"database"},{path:"database",component:l.StorageManagementComponent},{path:"specifications",component:d.SpecificationsComponent},{path:"dicom",component:p.DicomComponent},{path:"parameterise",component:o.ParameteriseComponent},{path:"create-model",component:s.CreateModelComponent},{path:"use-model",component:c.UseModelComponent},{path:"",component:r.HomeComponent},{path:"model",redirectTo:"create-model"},{path:"**",component:a.PageNotFoundComponent}];t.appRoutingProviders=[],t.routing=i.RouterModule.forRoot(m)},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(41),s=n(128),c=n(129),l=n(131),d=n(132),p=n(139),h=n(141),m=n(137),u=n(145),f=function(){function ParameteriseComponent(e,t,n,i,o,a,r){this.electronApiService=e,this.myTitleService=t,this.router=n,this.modelData=i,this.dataPersistenceService=o,this.machineSpecificationService=a,this.applicationRef=r,this.textInputsValid=!0,this.equalLengths=!0,this.serverResponseValid=!0,this.dataInFlight=!1,this.submitDisabled=!1,this.machineExists=!1,this.machineSettingsExist=!1,this.ableToAddDataToModel=!1,this.dataAlreadyExistsOnModel=!1,this.serverError=!1,this.insertData=new s.InsertData,this.dataLoaded=!1,this.viewInitialised=!1,this.initialTextBoxUpdate=!1}return ParameteriseComponent.prototype.ngOnInit=function(){var e=this;console.log("parameterisation.component ngOnInit"),this.myTitleService.setTitle("Parameterisation"),this.dataPersistenceService.loadServerUrl("parameterisation").then(function(t){null==t?e.parameteriseURL="http://electronapi.simonbiggs.net/parameterise":e.parameteriseURL=t.url}),this.dataPersistenceService.loadCurrentInsertData(this.insertData).then(function(){return e.checkIfEqualLengths(),e.machineSpecificationService.loadData()}).then(function(){console.log("specifications.component ngOnInit this.machineSpecificationService.loadData() promise complete"),e.machineSettings=e.machineSpecificationService.currentSettings,e.checkMachineSettings(),e.checkIfCanBeSentToModel(),e.viewInitialised&&!e.initialTextBoxUpdate&&(e.textboxInputs.triggerUpdate=!0,e.initialTextBoxUpdate=!0),e.dataLoaded=!0})},ParameteriseComponent.prototype.ngAfterViewInit=function(){this.dataLoaded&&!this.initialTextBoxUpdate&&(this.textboxInputs.triggerUpdate=!0,this.initialTextBoxUpdate=!0),this.viewInitialised=!0},ParameteriseComponent.prototype.ngAfterContentInit=function(){},ParameteriseComponent.prototype.checkMachineSettings=function(){console.log("parameterisation.component checkMachineSettings"),this.machineSpecificationService.doesMachineExist(this.insertData.machine)?(this.machineExists=!0,this.machineSettingsExist=this.machineSpecificationService.checkInsertSettingsExist(this.insertData)):(this.machineExists=!1,this.machineSettingsExist=!1),console.log(this.machineSettingsExist)},ParameteriseComponent.prototype.checkIfCanBeSentToModel=function(){var e=this;if(console.log("parameterisation.component checkIfCanBeSentToModel"),this.machineSettingsExist){for(var t=0,n=Object.keys(this.machineSettings);t<n.length;t++){var i=n[t];this.machineSettings[i]=this.insertData[i]}this.dataPersistenceService.loadModelData(this.modelData,this.machineSettings).then(function(){console.log("parameterisation.component checkIfCanBeSentToModel this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete"),e.modelData.measurement.width.indexOf(Number(e.insertData.parameterisation.width))>-1&&e.modelData.measurement.length.indexOf(Number(e.insertData.parameterisation.length))>-1&&e.modelData.measurement.measuredFactor.indexOf(Number(e.insertData.measuredFactor))>-1?(e.dataAlreadyExistsOnModel=!0,e.ableToAddDataToModel=!1):(e.dataAlreadyExistsOnModel=!1,0==Number(e.insertData.parameterisation.width)||0==Number(e.insertData.parameterisation.length)||0==Number(e.insertData.measuredFactor)?e.ableToAddDataToModel=!1:e.ableToAddDataToModel=!0)})}else this.ableToAddDataToModel=!1,this.dataAlreadyExistsOnModel=!1},ParameteriseComponent.prototype.onValidTextboxChange=function(){var e=this;console.log("parameterisation.component onValidTextboxChange"),this.insertData.parameterisation.insertUpdated(),this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation).then(function(){return console.log("parameterisation.component onValidTextboxChange this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation) promise complete"),e.checkIfEqualLengths(),e.checkIfCanBeSentToModel(),e.dataPersistenceService.saveCurrentInsertData(e.insertData)}).then(function(){console.log("parameterisation.component onValidTextboxChange this.dataPersistenceService.saveCurrentInsertData(this.insertData)  promise complete")})},ParameteriseComponent.prototype.checkIfEqualLengths=function(){console.log("parameterisation.component checkIfEqualLengths"),this.insertData.parameterisation.insert.x.length==this.insertData.parameterisation.insert.y.length?this.equalLengths=!0:this.equalLengths=!1},ParameteriseComponent.prototype.addMeasuredFactor=function(e){var t=this;console.log("parameterisation.component addMeasuredFactor"),this.dataAlreadyExistsOnModel=!0,this.ableToAddDataToModel=!1;for(var n=0,i=Object.keys(this.machineSettings);n<i.length;n++){var o=i[n];this.machineSettings[o]=this.insertData[o]}this.dataPersistenceService.loadModelData(this.modelData,this.machineSettings).then(function(){return console.log("parameterisation.component addMeasuredFactor this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete"),t.modelData.model.reset(),t.modelData.measurement.width.push(Number(t.insertData.parameterisation.width)),t.modelData.measurement.length.push(Number(t.insertData.parameterisation.length)),t.modelData.measurement.measuredFactor.push(Number(e)),t.dataPersistenceService.saveModelData(t.modelData,t.machineSettings)}).then(function(){return console.log("parameterisation.component addMeasuredFactor this.dataPersistenceService.saveModelData(this.modelData, this.machineSettings) promise complete"),t.dataPersistenceService.saveCurrentSettings(t.machineSettings)}).then(function(){console.log("parameterisation.component addMeasuredFactor this.dataPersistenceService.saveCurrentSettings(this.machineSettings) promise complete")})},ParameteriseComponent.prototype.predictFactor=function(){var e=this;console.log("parameterisation.component predictFactor");for(var t=0,n=Object.keys(this.machineSettings);t<n.length;t++){var i=n[t];this.machineSettings[i]=this.insertData[i]}this.dataPersistenceService.saveCurrentSettings(this.machineSettings).then(function(){return console.log("parameterisation.component predictFactor this.dataPersistenceService.saveCurrentSettings(this.machineSettings) promise complete"),e.dataPersistenceService.loadModelData(e.modelData,e.machineSettings)}).then(function(){return console.log("parameterisation.component predictFactor this.dataPersistenceService.loadModelData(this.modelData, this.machineSettings) promise complete"),e.modelData.predictions.width.unshift(e.insertData.parameterisation.width),e.modelData.predictions.length.unshift(e.insertData.parameterisation.length),0!=e.insertData.measuredFactor&&null!=e.insertData.measuredFactor&&e.modelData.predictions.measuredFactor.unshift(e.insertData.measuredFactor),e.dataPersistenceService.saveModelData(e.modelData,e.machineSettings)}).then(function(){console.log("parameterisation.component predictFactor this.dataPersistenceService.saveModelData(this.modelData, this.machineSettings) promise complete"),e.router.navigate(["/use-model"])})},ParameteriseComponent.prototype.loadDemoData=function(){var e=this;console.log("parameterisation.component loadDemoData");var t=this.insertData.parameterisation.insert;this.insertData.reset(),this.insertData.parameterisation.insert=t;var n=JSON.parse(JSON.stringify(u.DEMO_PARAMETERISE_INPUT));this.insertData.parameterisation.insert.x=n.insert.x,this.insertData.parameterisation.insert.y=n.insert.y,this.insertData.parameterisation.insertUpdated(),this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation).then(function(){return console.log("parameterisation.component loadDemoData this.dataPersistenceService.loadParameterisationCache(this.insertData.parameterisation) promise complete"),e.textboxInputs.triggerUpdate=!0,e.checkIfEqualLengths(),e.dataPersistenceService.saveCurrentInsertData(e.insertData)}).then(function(){console.log("parameterisation.component loadDemoData this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete")})},ParameteriseComponent.prototype.sleep=function(e){return console.log("parameterisation.component sleep"),new Promise(function(t){return setTimeout(t,e)})},ParameteriseComponent.prototype.recursiveServerSubmit=function(){var e=this;console.log("parameterisation.component recursiveServerSubmit"),this.serverError=!1,this.electronApiService.sendToServer(this.parameteriseURL,JSON.stringify(this.insertData.parameterisation.insert)).then(function(t){e.insertData.parameterisation.circle=t.circle,e.insertData.parameterisation.ellipse=t.ellipse,e.insertData.parameterisation.width=t.width,e.insertData.parameterisation.length=t.length;var n=t.complete;n?(e.dataInFlight=!1,e.serverResponseValid=!0,e.checkSubmitButton(),e.dataPersistenceService.saveParameterisationCache(e.insertData.parameterisation).then(function(){console.log("parameterisation.component recursiveServerSubmit this.dataPersistenceService.saveParameterisationCache(this.insertData.parameterisation) promise complete")}),e.dataPersistenceService.saveCurrentInsertData(e.insertData).then(function(){console.log("parameterisation.component recursiveServerSubmit this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete")}),e.checkIfCanBeSentToModel(),null==e.insertData.parameterisation.width&&(e.serverError=!0)):e.sleep(500).then(function(){return e.recursiveServerSubmit()})})},ParameteriseComponent.prototype.insertDataChange=function(){console.log("parameterisation.component insertDataChange"),this.dataPersistenceService.saveCurrentInsertData(this.insertData).then(function(){console.log("parameterisation.component insertDataChange this.dataPersistenceService.saveCurrentInsertData(this.insertData) promise complete")}),this.checkMachineSettings(),this.checkIfCanBeSentToModel()},ParameteriseComponent.prototype.onSubmit=function(){console.log("parameterisation.component onSubmit"),this.dataInFlight=!0,this.checkSubmitButton(),this.recursiveServerSubmit()},ParameteriseComponent.prototype.onTextInputChange=function(e){console.log("parameterisation.component onTextInputChange"),this.textInputsValid=e,this.checkSubmitButton()},ParameteriseComponent.prototype.checkSubmitButton=function(){console.log("parameterisation.component checkSubmitButton"),this.dataInFlight||!this.textInputsValid?this.submitDisabled=!0:this.submitDisabled=!1},ParameteriseComponent.prototype.parameterisationServerChange=function(e){console.log("parameterisation.component parameterisationServerChange"),this.dataPersistenceService.saveServerUrl("parameterisation",e).then(function(){})},i([a.ViewChild("textboxInputs"),o("design:type",h.XYInputComponent)],ParameteriseComponent.prototype,"textboxInputs",void 0),ParameteriseComponent=i([a.Component({selector:"my-parameterise",template:n(146)}),o("design:paramtypes",[c.ElectronApiService,l.TitleService,r.Router,m.ModelData,d.DataPersistenceService,p.MachineSpecificationsService,a.ApplicationRef])],ParameteriseComponent)}();t.ParameteriseComponent=f},function(e,t){"use strict";var n=function(){function Coordinates(){this.x=[0],this.y=[0]}return Coordinates}();t.Coordinates=n;var i=function(){function Parameterisation(){this.insert=new n,this.circle=new n,this.ellipse=new n}return Parameterisation.prototype.hash=function(e){var t,n,i,o=0;if(0===e.length)return o;for(t=0,i=e.length;t<i;t++)n=e.charCodeAt(t),o=(o<<5)-o+n,o|=0;return o},Parameterisation.prototype.insertUpdated=function(){if(null==this.insert)throw new RangeError("Insert was not defined. Cannot run insert updated.");this.id=this.hash('{"x":'+JSON.stringify(this.insert.x)+',"y":'+JSON.stringify(this.insert.y)+"}")},Parameterisation.prototype.reset=function(){this.id=null;for(var e=0,t=["insert","circle","ellipse"];e<t.length;e++){var i=t[e];this[i]=new n,this[i].x=[0],this[i].y=[0]}this.width=null,this.length=null},Parameterisation}();t.Parameterisation=i;var o=function(){function InsertData(e){this.parameterisation=new i,null!=e?this.id=e:this.id=0}return InsertData.prototype.reset=function(){this.machine=null,this.parameterisation.reset(),this.energy=null,this.applicator=null,this.ssd=null,this.measuredFactor=null},InsertData.prototype.fillFromObject=function(e){if(null==e)this.reset();else{for(var t=0,n=["machine","energy","applicator","ssd","measuredFactor"];t<n.length;t++){var i=n[t];this[i]=e[i]}this.parameterisation.insert=e.parameterisation.insert,this.parameterisation.insertUpdated(),this.parameterisation.circle=e.parameterisation.circle,this.parameterisation.ellipse=e.parameterisation.ellipse,this.parameterisation.width=e.parameterisation.width,this.parameterisation.length=e.parameterisation.length}},InsertData}();t.InsertData=o},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(28);n(130);var s=function(){function ElectronApiService(e){this.http=e,this.wakeUpURL="http://electronapi.simonbiggs.net/wakeup"}return ElectronApiService.prototype.wakeUpServer=function(){return this.http.get(this.wakeUpURL).toPromise()},ElectronApiService.prototype.sendToServer=function(e,t){return this.http.post(e,t).toPromise().then(function(e){return e.json()})["catch"](this.handleError)},ElectronApiService.prototype.handleError=function(e){return console.error("An error occurred",e),Promise.reject(e.message||e)},ElectronApiService=i([a.Injectable(),o("design:paramtypes",[r.Http])],ElectronApiService)}();t.ElectronApiService=s},,function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=function(){function TitleService(){this.title="Home"}return TitleService.prototype.getTitle=function(){return this.title},TitleService.prototype.setTitle=function(e){this.title=e},TitleService=i([a.Injectable(),o("design:paramtypes",[])],TitleService)}();t.TitleService=r},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(133),s=n(140),c=n(128),l=function(){function DataPersistenceService(){}return DataPersistenceService.prototype.loadCurrentSettings=function(){console.log("data-persistence.service loadCurrentSettings");var e=new s.CurrentSettings;return r.db.currentSettings.toArray().then(function(t){if(console.log("data-persistence.service loadCurrentSettings db.currentSettings.toArray() promise complete"),0==t.length)for(var n=0,i=["machine","energy","applicator","ssd"];n<i.length;n++){var o=i[n];e[o]=null}else e=t[0];return e})},DataPersistenceService.prototype.saveCurrentSettings=function(e){return console.log("data-persistence.service saveCurrentSettings"),r.db.currentSettings.put(e).then(function(){console.log("data-persistence.service saveCurrentSettings db.currentSettings.put(currentSettings) promise complete")})},DataPersistenceService.prototype.loadSpecificationsData=function(){return console.log("data-persistence.service loadSpecificationsData"),r.db.specifications.toArray().then(function(e){return console.log("data-persistence.service loadSpecificationsData db.specifications.toArray() promise complete"),e})},DataPersistenceService.prototype.saveSpecificationsData=function(e){return console.log("data-persistence.service saveSpecificationsData"),r.db.specifications.put(e).then(function(){console.log("data-persistence.service saveSpecificationsData db.specifications.put(specification) promise complete")})},DataPersistenceService.prototype.loadModelData=function(e,t){console.log("data-persistence.service loadModelData");var n=t.returnKey();return e.machineSettingsKey=n,r.db.modelData.get(n).then(function(t){console.log("data-persistence.service loadModelData db.modelData.get(storageKey) promise complete"),null==t?e.fillFromObject({}):e.fillFromObject(t)})},DataPersistenceService.prototype.saveModelData=function(e,t){console.log("data-persistence.service saveModelData");var n=t.returnKey();e.machineSettingsKey=n;var i=e.exportLite();return r.db.modelData.put(i).then(function(){console.log("data-persistence.service loadModelData db.modelData.put(modelDataLite) promise complete")})},DataPersistenceService.prototype.loadParameterisationCache=function(e){return console.log("data-persistence.service loadParameterisationCache"),r.db.parameterisationCache.get(e.id).then(function(t){if(console.log("data-persistence.service loadParameterisationCache db.parameterisationCache.get(parameterisation.parameterisationKey) promise complete"),null==t)for(var n=0,i=["width","length","circle","ellipse"];n<i.length;n++){var o=i[n];e[o]=null}else for(var a=0,r=["width","length","circle","ellipse"];a<r.length;a++){var o=r[a];e[o]=t[o]}})},DataPersistenceService.prototype.saveParameterisationCache=function(e){return console.log("data-persistence.service saveParameterisationCache"),r.db.parameterisationCache.put(e).then(function(){console.log("data-persistence.service saveParameterisationCache db.parameterisationCache.put(parameterisation) promise complete")})},DataPersistenceService.prototype.loadCurrentInsertData=function(e){console.log("data-persistence.service loadCurrentInsertData");var t=e.parameterisation.insert;return r.db.currentInsertData.get(0).then(function(n){null==n?e.reset():(t.x=n.parameterisation.insert.x,t.y=n.parameterisation.insert.y,e.fillFromObject(n)),e.parameterisation.insert=t})},DataPersistenceService.prototype.saveCurrentInsertData=function(e){return console.log("data-persistence.service saveCurrentInsertData"),r.db.currentInsertData.put(e).then(function(){console.log("data-persistence.service saveCurrentInsertData db.currentInsertData.put(insertData)) promise complete")})},DataPersistenceService.prototype.loadServerUrl=function(e){return console.log("data-persistence.service loadServerUrl"),r.db.serverURLs.get(e)},DataPersistenceService.prototype.saveServerUrl=function(e,t){console.log("data-persistence.service saveServerUrl");var n=new r.ServerURLs;return n.purpose=e,n.url=t,r.db.serverURLs.put(n)},DataPersistenceService.prototype.loadDicomInsertList=function(){var e=this;return console.log("data-persistence.service loadDicomInsertList"),r.db.dicomInsertList.toArray().then(function(t){console.log("data-persistence.service loadDicomInsertList db.dicomInsertList.toArray() promise complete");for(var n=0,i=t;n<i.length;n++){var o=i[n],a=new c.Parameterisation;a.insert=o.parameterisation.insert,a.insertUpdated(),o.parameterisation=a,e.loadParameterisationCache(o.parameterisation)}return t})},DataPersistenceService.prototype.saveDicomInsertList=function(e){return console.log("data-persistence.service saveDicomInsertList"),r.db.dicomInsertList.bulkPut(e).then(function(){console.log("data-persistence.service saveDicomInsertList db.dicomInsertList.bulkPut(insertList) promise complete")})},DataPersistenceService.prototype.jsonTransform=function(e){console.log("data-persistence.service jsonTransform");var t=JSON.stringify(e,null,2);return t=t.replace(/,\s*(-?\d+(\.\d+)?)/g,", $1"),t=t.replace(/\n/g,"\n  ")},DataPersistenceService.prototype.databaseDump=function(){var e=this;console.log("data-persistence.service databaseDump");var t="",n={},i="",o=[];return r.db.tables.forEach(function(e,i){var a=[e.schema.primKey].concat(e.schema.indexes),s=a.map(function(e){return e.src}).join(", ");t=t.concat('\n      "'+e.name+'": "'+s+'"'+(i<r.db.tables.length-1?",":"")),n[e.name]={},o.push(e.toArray(function(t){n[e.name]=t}))}),Promise.all(o).then(function(){return i='{\n  "databaseDetails": {\n    "name": "'+r.db.name+'",\n    "version": '+r.db.verno+',\n    "schema": {'+t+'\n    }\n  },\n  "databaseContents": '+e.jsonTransform(n)+"\n}"})},DataPersistenceService.prototype.emptyDatabase=function(){console.log("data-persistence.service emptyDatabase");var e,t=[];return r.db.tables.forEach(function(e,n){t.push(e.clear())}),Promise.all(t).then(function(){return e={id:0,pulledFromLocalStorage:!0},r.db.pulledFromLocalStorage.add(e)})},DataPersistenceService.prototype.appendJsonToDatabase=function(e){console.log("data-persistence.service appendJsonToDatabase");var t=[],n=e.databaseContents;return r.db.tables.forEach(function(e,i){t.push(e.bulkPut(n[e.name]))}),Promise.all(t)},DataPersistenceService=i([a.Injectable(),o("design:paramtypes",[])],DataPersistenceService)}();t.DataPersistenceService=l},function(e,t,n){"use strict";var i=this&&this.__extends||function(e,t){function __(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)},o=n(134),a=n(128),r=n(137),s=n(139),c=n(140),l=function(){function PulledFromLocalStorage(){}return PulledFromLocalStorage}();t.PulledFromLocalStorage=l;var d=function(){function ServerURLs(){}return ServerURLs}();t.ServerURLs=d;var p=function(e){function DexieDatabase(){var t=this;e.call(this,"DefaultDatabase");var n=this;n.version(1).stores({specifications:"machine, makeAndModel, energy, R50, applicator, ssd",currentSettings:"id, machine, energy, applicator, ssd",currentInsertData:"id, machine, parameterisation, energy, applicator, ssd, measuredFactor",modelData:"machineSettingsKey, measurement, model, predictions",dicomInsertList:"id, machine, parameterisation, energy, applicator, ssd, measuredFactor",serverURLs:"purpose, url",parameterisationCache:"id, insert, width, length, circle, ellipse",pulledFromLocalStorage:"id, pulledFromLocalStorage"}),n.pulledFromLocalStorage.mapToClass(l),n.modelData.mapToClass(r.ModelData),n.specifications.mapToClass(s.MachineSpecification),n.currentSettings.mapToClass(c.CurrentSettings),n.parameterisationCache.mapToClass(a.Parameterisation),n.currentInsertData.mapToClass(a.InsertData),n.serverURLs.mapToClass(d),n.dicomInsertList.mapToClass(a.InsertData),n.pulledFromLocalStorage.toArray().then(function(e){null==e[0]?t.fillDatabaseFromLocalStorage():0==e[0].pulledFromLocalStorage&&(n.specifications.clear(),n.modelData.clear(),t.fillDatabaseFromLocalStorage())})}return i(DexieDatabase,e),DexieDatabase.prototype.fillDatabaseFromLocalStorage=function(){console.log("dexie.service fillDatabaseFromLocalStorage");for(var e=this.loadSpecificationsFromLocalStorage(),n=[],i=0,o=e;i<o.length;i++){var a=o[i];n.push(a.machine)}n.sort();for(var r=0;r<n.length-1;r++)if(n[r]==n[r+1])throw console.log(n),new RangeError("Local storage specifications contain duplicate Machine IDs");for(var s=this.loadModelDataFromLocalStorage(e),c=[],l=0,d=s;l<d.length;l++){var p=d[l];c.push(p.machineSettingsKey)}c.sort();for(var r=0;r<c.length-1;r++)if(c[r]==c[r+1])throw new RangeError("Local storage specifications contain duplicate models");t.db.specifications.bulkAdd(e).then(function(){return console.log("dexie.service fillDatabaseFromLocalStorage db.specification.bulkAdd(specifications) promise complete"),t.db.modelData.bulkAdd(s)}).then(function(){console.log("dexie.service fillDatabaseFromLocalStorage db.modelData.bulkAdd(modelDataLiteArray) promise complete");var e={id:0,pulledFromLocalStorage:!0};t.db.pulledFromLocalStorage.add(e)})},DexieDatabase.prototype.testArrayOfStrings=function(e){return console.log("dexie.service testArrayOfStrings"),e instanceof Array&&(e.forEach(function(e){if("string"!=typeof e)return!1}),!0)},DexieDatabase.prototype.testArrayOfNumbers=function(e){return console.log("dexie.service testArrayOfNumbers"),e instanceof Array&&(e.forEach(function(e){if("number"!=typeof e)return!1}),!0)},DexieDatabase.prototype.loadSpecificationsFromLocalStorage=function(){console.log("dexie.service loadSpecificationsFromLocalStorage");var e,t,n,i,o,a,r=JSON.parse(localStorage.getItem("specifications")),s=[];if(null!=r)for(var c=0,l=Object.keys(r);c<l.length;c++){var d=l[c];t=r[d].model,n=r[d].energy,i=[];for(var p=0,h=r[d].energy;p<h.length;p++){var m=h[p];i.push(r[d].R50[m])}if(o=r[d].applicator,a=r[d].ssd,void 0!==t&&"string"!=typeof t)throw console.log(t),new RangeError("Loaded makeAndModel type was not string");if(void 0!==n&&!this.testArrayOfNumbers(n))throw console.log(n),new RangeError("Loaded energy type was not number[]");if(void 0!==i&&!this.testArrayOfNumbers(i))throw console.log(i),new RangeError("Loaded energy type was not number[]");
if(void 0!==o&&!this.testArrayOfStrings(o))throw console.log(o),new RangeError("Loaded applicator type was not string[]");if(void 0!==a&&!this.testArrayOfNumbers(a))throw console.log(a),new RangeError("Loaded ssd type was not number[]");e={machine:d,makeAndModel:t,energy:n,R50:i,applicator:o,ssd:a},s.push(e)}return s},DexieDatabase.prototype.loadModelDataFromLocalStorage=function(e){console.log("dexie.service loadModelDataFromLocalStorage");for(var t,n=[],i=new c.CurrentSettings,o=0,a=e;o<a.length;o++){var s=a[o];i.machine=s.machine;for(var l=0,d=s.energy;l<d.length;l++){var p=d[l];i.energy=p;for(var h=0,m=s.applicator;h<m.length;h++){var u=m[h];i.applicator=u;for(var f=0,g=s.ssd;f<g.length;f++){var v=g[f];i.ssd=v;var y=JSON.parse(localStorage.getItem(i.returnKey()));null!=y&&(t=new r.ModelData,t.fillFromObject(y),t.updateKey(i),n.push(t.exportLite()))}}}}return n},DexieDatabase}(o["default"]);t.DexieDatabase=p,t.db=new p},,,,function(e,t,n){"use strict";var i=this&&this.__extends||function(e,t){function __(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)},o=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=n(3),s=n(138),c=function(e){function AreaLengthConversion(){e.apply(this,arguments),this.width=[],this.length=[],this.area=[],this.measuredFactor=[]}return i(AreaLengthConversion,e),AreaLengthConversion.prototype.convertLengthToArea=function(e,t){console.log("model.data AreaLengthConversion convertLengthToArea");var n=Math.PI*e*t/4;return Math.round(10*n)/10},AreaLengthConversion.prototype.convertAreaToLength=function(e,t){console.log("model.data AreaLengthConversion convertAreaToLength");var n=4*t/(Math.PI*e);return Math.round(10*n)/10},AreaLengthConversion.prototype.updateAreaFromLength=function(){console.log("model.data AreaLengthConversion updateAreaFromLength");var e,t,n;this.area=[];for(var i in this.length)e=this.width[i],t=this.length[i],n=this.convertLengthToArea(e,t),this.area.push(n)},AreaLengthConversion.prototype.updateLengthFromArea=function(){console.log("model.data AreaLengthConversion updateLengthFromArea");var e,t,n;this.length=[];for(var i in this.area)e=this.width[i],n=this.area[i],t=this.convertAreaToLength(e,n),this.length.push(t)},AreaLengthConversion.prototype.initialLengthAreaUpdate=function(){console.log("model.data AreaLengthConversion initialLengthAreaUpdate"),this.length.length<this.area.length?this.updateLengthFromArea():this.updateAreaFromLength()},AreaLengthConversion=o([r.Injectable(),a("design:paramtypes",[])],AreaLengthConversion)}(s.Base);t.AreaLengthConversion=c;var l=function(e){function ModelMeasurement(){e.apply(this,arguments),this.propNames=["width","length","area","measuredFactor"],this.keyConversions={factor:"measuredFactor"}}return i(ModelMeasurement,e),ModelMeasurement=o([r.Injectable(),a("design:paramtypes",[])],ModelMeasurement)}(c);t.ModelMeasurement=l;var d=function(e){function ModelGrid(){e.apply(this,arguments),this.propNames=["width","length","predictedFactor"],this.keyConversions={factor:"predictedFactor"},this.width=[],this.length=[],this.predictedFactor=[]}return i(ModelGrid,e),ModelGrid=o([r.Injectable(),a("design:paramtypes",[])],ModelGrid)}(s.Base);t.ModelGrid=d;var p=function(e){function Predictions(){e.apply(this,arguments),this.propNames=["width","length","area","measuredFactor","predictedFactor"],this.predictedFactor=[]}return i(Predictions,e),Predictions=o([r.Injectable(),a("design:paramtypes",[])],Predictions)}(c);t.Predictions=p;var h=function(){function ModelData(){this.propNames=["measurement","model","predictions"],this.measurement=new l,this.model=new d,this.predictions=new p}return ModelData.prototype.fillFromObject=function(e){if(console.log("model.data ModelData fillFromObject"),null==e)for(var t=0,n=this.propNames;t<n.length;t++){var i=n[t];this[i].reset()}else for(var o=0,a=this.propNames;o<a.length;o++){var i=a[o];null==e[i]?this[i].reset():this[i].fillFromObject(e[i])}this.measurement.initialLengthAreaUpdate(),this.predictions.initialLengthAreaUpdate()},ModelData.prototype.updateKey=function(e){this.machineSettingsKey=e.returnKey()},ModelData.prototype.exportLite=function(){console.log("model.data ModelData exportLite");var e={machineSettingsKey:this.machineSettingsKey,measurement:{width:this.measurement.width,length:this.measurement.length,measuredFactor:this.measurement.measuredFactor},model:{width:this.model.width,length:this.model.length,predictedFactor:this.model.predictedFactor},predictions:{width:this.predictions.width,length:this.predictions.length,measuredFactor:this.predictions.measuredFactor,predictedFactor:this.predictions.predictedFactor}};return e},ModelData=o([r.Injectable(),a("design:paramtypes",[])],ModelData)}();t.ModelData=h},function(e,t){"use strict";var n=function(){function Base(){}return Base.prototype.reset=function(){for(var e=0,t=this.propNames;e<t.length;e++){var n=t[e];this[n]=[]}},Base.prototype.fillFromObject=function(e){e=this.updateOldKeyNames(e);for(var t=0,n=this.propNames;t<n.length;t++){var i=n[t];null==e[i]?this[i]=[]:this[i]=e[i]}},Base.prototype.updateOldKeyNames=function(e){var t;for(var n in this.keyConversions)null!=e[n]&&null==e[this.keyConversions[n]]&&(t=this.keyConversions[n],Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(e,n)),delete e[n]);return e},Base}();t.Base=n},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(140),s=n(132),c=function(){function MachineSpecification(){this.machine="",this.makeAndModel="",this.energy=[],this.R50=[],this.applicator=[],this.ssd=[]}return MachineSpecification=i([a.Injectable(),o("design:paramtypes",[])],MachineSpecification)}();t.MachineSpecification=c;var l=function(){function MachineSpecificationsService(e){this.currentSettings=e,this.dataPersistenceService=new s.DataPersistenceService}return MachineSpecificationsService.prototype.checkInsertSettingsExist=function(e){var t=this.returnMachineSpecification(e.machine);return console.log(t),t.energy.indexOf(Number(e.energy))>-1&&t.applicator.indexOf(String(e.applicator))>-1&&t.ssd.indexOf(Number(e.ssd))>-1},MachineSpecificationsService.prototype.doesMachineExist=function(e){return this.machineList.indexOf(e)>-1},MachineSpecificationsService.prototype.returnMachineSpecification=function(e){var t,n;return n=this.machineList.indexOf(e),t=n==-1?null:this.specifications[n]},MachineSpecificationsService.prototype.returnCurrentR50=function(e){var t;if(t=this.currentSpecification.energy.indexOf(e),t==-1)throw new RangeError("Requested energy is not within the current specification");return this.currentSpecification.R50[t]},MachineSpecificationsService.prototype.loadData=function(){var e=this;return console.log("specifications-data.service loadData"),this.dataPersistenceService.loadCurrentSettings().then(function(t){return console.log("specifications-data.service loadData this.dataPersistenceService.loadCurrentSettings() promise complete"),e.currentSettings=t,e.dataPersistenceService.loadSpecificationsData()}).then(function(t){console.log("specifications-data.service loadData this.dataPersistenceService.loadSpecificationsData() promise complete"),e.specifications=t,e.updateSpecifications()})},MachineSpecificationsService.prototype.updateSpecifications=function(){console.log("specifications-data.service updateSpecifications"),null==this.specifications?(this.specifications=[],this.machineList=[]):(this.updateMachineList(),this.updateCurrentSpecification())},MachineSpecificationsService.prototype.updateMachineList=function(){console.log("specifications-data.service updateMachineList"),this.machineList=[];for(var e=0,t=this.specifications;e<t.length;e++){var n=t[e];this.machineList.push(n.machine)}},MachineSpecificationsService.prototype.updateCurrentSpecification=function(){console.log("specifications-data.service updateCurrentSpecification");var e;e=this.returnMachineSpecification(this.currentSettings.machine),null==e?(this.currentSpecification=this.specifications[0],this.currentSettings.machine=this.machineList[0]):this.currentSpecification=e,this.refreshCurrentSettings()},MachineSpecificationsService.prototype.refreshCurrentSettings=function(){if(console.log("specifications-data.service refreshCurrentSettings"),null!=this.currentSpecification)for(var e=0,t=["energy","applicator","ssd"];e<t.length;e++){var n=t[e];null==this.currentSpecification[n]?this.currentSettings[n]=null:this.currentSpecification[n].length>0?this.currentSpecification[n].indexOf(this.currentSettings[n])==-1&&(this.currentSettings[n]=this.currentSpecification[n][0]):this.currentSettings[n]=null}else for(var i=0,o=["energy","applicator","ssd"];i<o.length;i++){var n=o[i];this.currentSettings[n]=null}this.dataPersistenceService.saveCurrentSettings(this.currentSettings)},MachineSpecificationsService.prototype.newMachine=function(e,t){if(console.log("specifications-data.service newMachine"),this.machineList.indexOf(e)!=-1)throw new RangeError("This 'new' machine already exists");var n=new c;n.machine=e,n.makeAndModel=t,this.specifications.push(n),this.updateMachineList(),this.changeMachine(e)},MachineSpecificationsService.prototype.changeMachine=function(e){console.log("specifications-data.service changeMachine"),this.currentSettings.machine=e,this.updateCurrentSpecification()},MachineSpecificationsService=i([a.Injectable(),o("design:paramtypes",[r.CurrentSettings])],MachineSpecificationsService)}();t.MachineSpecificationsService=l},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=function(){function CurrentSettings(){this.id=0,this.machine=null,this.energy=null,this.applicator=null,this.ssd=null}return CurrentSettings.prototype.returnKey=function(){return'{"machine":'+JSON.stringify(String(this.machine))+',"energy":'+JSON.stringify(Number(this.energy))+',"applicator":'+JSON.stringify(String(this.applicator))+',"ssd":'+JSON.stringify(Number(this.ssd))+"}"},CurrentSettings=i([a.Injectable(),o("design:paramtypes",[])],CurrentSettings)}();t.CurrentSettings=r},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(128),s=n(142),c=function(){function XYInputComponent(){this.textboxLabels={x:"X coordinates (cm @iso)",y:"Y coordinates (cm @iso)"},this.disabled=!1,this.rows=4,this.validTextBoxChange=new a.EventEmitter,this.texboxValidCheck=new a.EventEmitter}return XYInputComponent.prototype.ngOnInit=function(){this.textInputControl=new s.TextInputControl(["x","y"],this.dataInputs),this.textInputControl.updateAllTextboxInputs()},XYInputComponent.prototype.ngDoCheck=function(){this.triggerUpdate&&(this.textInputControl.updateAllTextboxInputs(),this.triggerUpdate=!1)},XYInputComponent.prototype.onTextboxChange=function(e,t){var n=this.textInputControl.textboxValid[e];this.textInputControl.validateTextboxInput(e,t),this.textInputControl.textboxValid[e]!=n&&this.texboxValidCheck.emit(this.textInputControl.checkAllValid()),this.textInputControl.textboxValid[e]&&this.validTextBoxChange.emit()},i([a.Input(),o("design:type",Object)],XYInputComponent.prototype,"textboxLabels",void 0),i([a.Input(),o("design:type",r.Coordinates)],XYInputComponent.prototype,"dataInputs",void 0),i([a.Input(),o("design:type",Boolean)],XYInputComponent.prototype,"triggerUpdate",void 0),i([a.Input(),o("design:type",Boolean)],XYInputComponent.prototype,"disabled",void 0),i([a.Input(),o("design:type",Object)],XYInputComponent.prototype,"rows",void 0),i([a.Output(),o("design:type",Object)],XYInputComponent.prototype,"validTextBoxChange",void 0),i([a.Output(),o("design:type",Object)],XYInputComponent.prototype,"texboxValidCheck",void 0),XYInputComponent=i([a.Component({selector:"my-x-y-input",template:n(144)}),o("design:paramtypes",[])],XYInputComponent)}();t.XYInputComponent=c},function(module,exports,__webpack_require__){"use strict";var sanitise_validation_1=__webpack_require__(143),TextInputControl=function(){function TextInputControl(e,t){this.inputNames=e,this.dataInputs=t,this.textboxInput={},this.textboxValid={};for(var n=0,i=this.inputNames;n<i.length;n++){var o=i[n];this.textboxInput[o]="",this.textboxValid[o]=!0}}return TextInputControl.prototype.updateAllTextboxInputs=function(){for(var e=0,t=this.inputNames;e<t.length;e++){var n=t[e];this.updateTextboxInput(n)}},TextInputControl.prototype.updateTextboxInput=function(e){this.textboxInput[e]=String(this.dataInputs[e]).replace(/,/g,", ")},TextInputControl.prototype.validateTextboxInput=function(key,newInput){this.textboxValid[key]=!1;try{sanitise_validation_1.validateInput(newInput)&&(this.dataInputs[key]=eval("["+newInput.replace(/[,;\n\t]\s*/g,", ")+"]"),this.textboxValid[key]=!0)}catch(err){console.log(err)}},TextInputControl.prototype.checkAllValid=function(){for(var e=0,t=this.inputNames;e<t.length;e++){var n=t[e];if(!this.textboxValid[n])return!1}return!0},TextInputControl}();exports.TextInputControl=TextInputControl},function(e,t){"use strict";function validateInput(e){return/^[-\d\.,;\sNa]*$/.test(e)}t.validateInput=validateInput},function(e,t){e.exports='<div *ngFor="let key of textInputControl.inputNames">\n  <mdl-textfield \n    type="text"\n    [label]="textboxLabels[key]"\n    [(ngModel)]="textInputControl.textboxInput[key]"\n    (input)="onTextboxChange(key, $event.target.value)"\n    [rows]=rows\n    floating-label\n    [disabled]=disabled\n    [style.width]="\'100%\'"></mdl-textfield>\n  <p *ngIf="!textInputControl.textboxValid[key]">\n    The {{key}} input is invalid\n  </p>\n</div>'},function(e,t,n){"use strict";var i=n(128),o={x:[.99,-.14,-1,-1.73,-2.56,-3.17,-3.49,-3.57,-3.17,-2.52,-1.76,-1.04,-.17,.77,1.63,2.36,2.79,2.91,3.04,3.22,3.34,3.37,3.08,2.54,1.88,1.02,.99],y:[5.05,4.98,4.42,3.24,1.68,.6,-.64,-1.48,-2.38,-3.77,-4.81,-5.26,-5.51,-5.58,-5.23,-4.64,-3.77,-2.77,-1.68,-.29,1.23,2.68,3.8,4.6,5.01,5.08,5.05]},a=new i.Parameterisation;a.reset(),a.insert=o,t.DEMO_PARAMETERISE_INPUT=a},function(e,t){e.exports='<div class="mdl-grid">\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet" style="display: flex; align-items: center; flex-flow: row wrap;">\n    <h5>Equivalent ellipse parameterisation</h5>\n    <p>This is for the determination of equivalent ellipse widths and lengths as defined in the paper method.</p>\n\n    <p>\n      To begin shape parameterisation you need to define your insert shape. \n      This can be done by editing the x and y coordinates within the text boxes below or by using a shape       \n      <a routerLink="/dicom" routerLinkActive="active">\n        pulled from a dicom file.\n      </a>\n    </p>\n\n    <p>\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\n      This web app should handle copying and pasting from a range of sources (including excel).\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\n    </p>\n\n    <my-x-y-input #textboxInputs\n      [dataInputs]="insertData.parameterisation.insert"\n      [triggerUpdate]=false\n      [rows]=4\n      [disabled]="dataInFlight"\n      (texboxValidCheck)="textInputsValid=$event"\n      (validTextBoxChange)=onValidTextboxChange()\n      [style.width]="\'100%\'"></my-x-y-input>\n\n    <!--<mdl-textfield\n      type="text"\n      label="X coordinates (cm @iso)"\n      [(ngModel)]="textAreaX"\n      (input)="inputTextAreaX($event.target.value)"\n      rows=4\n      floating-label\n      [disabled]="dataInFlight"\n      [style.width]="\'100%\'"></mdl-textfield>\n\n    <mdl-textfield\n      type="text"\n      label="Y coordinates (cm @iso)"\n      [(ngModel)]="textAreaY"\n      (input)="inputTextAreaY($event.target.value)"\n      rows=4\n      floating-label\n      [disabled]="dataInFlight"\n      [style.width]="\'100%\'"></mdl-textfield>-->\n\n    <p *ngIf="!equalLengths">\n      The x and y coordinate lengths need to be the same as each other.\n    </p>\n\n    <p *ngIf="insertData.parameterisation.insert.x.length < 3 || insertData.parameterisation.insert.y.length < 3">\n      You need at least 3 data points to create an insert shape.\n    </p>\n\n    <div style="width:100%; height:30px"></div>\n\n    <button\n      mdl-button mdl-button-type="raised" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Parameterise | Load demo data"\n      [disabled]="submitDisabled"\n      (click)="loadDemoData()">Load Demo Data         \n    </button>\n\n    <div style="width:20px; height:30px"></div>\n\n    <button\n      mdl-button mdl-button-type="raised" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Parameterise | Parameterise insert"\n      [disabled]="submitDisabled || !textInputsValid || !equalLengths"\n      (click)="onSubmit()">Parameterise Insert          \n    </button>\n\n\n\n    <div [hidden]="serverResponseValid">\n      {{serverErrorMessage}}\n    </div>\n\n    <div style="height:20px; width:100%;"></div>\n\n    <my-plot \n      [insert_x]="insertData.parameterisation.insert.x"\n      [insert_y]="insertData.parameterisation.insert.y"\n      [circle]="insertData.parameterisation.circle"\n      [ellipse]="insertData.parameterisation.ellipse"\n      [enabled]="textInputsValid && equalLengths">\n    </my-plot>\n\n    <div style="height:20px; width:20px;"></div>\n\n    <my-width-length-table\n      [width]="insertData.parameterisation.width"\n      [length]="insertData.parameterisation.length"\n      [enabled]="textInputsValid && equalLengths">\n    </my-width-length-table>\n\n  </div>\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Send parameterisation to model</h5>\n    <p>\n      Once you have parameterised an insert shape you may either predict this insert with the model, or you may add the insert to the model.\n    </p>\n    <p>\n      To predict the insert with the model you must have filled in the correct machine ID, energy, applicator, and ssd in the text boxes below.\n      Furthermore these inputs need to correspond to one of the \n      <a routerLink="/specifications" routerLinkActive="active">\n        machine specifications you have defined.\n      </a>\n    </p>\n    <p>\n      To append the current insert shape along with its measured factor to the model you must have filled in the corresponding machine ID, energy, applicator, ssd, and measured factor in the text boxes below.\n      Once again the machine specifications given need to correspond to one of the \n      <a routerLink="/specifications" routerLinkActive="active">\n        machine specifications you have defined.\n      </a>\n    </p>\n\n\n    <mdl-textfield\n      type="text"\n      label="Machine (ID)"\n      (input)="insertDataChange()"\n      floating-label\n      [(ngModel)]="insertData.machine"\n      style="width:100%"></mdl-textfield>\n\n    <p *ngIf="!machineExists">\n      This machine ID does not exist within your \n      <a routerLink="/specifications" routerLinkActive="active">\n        provided machine specifications.\n      </a>\n    </p>\n    <mdl-textfield\n      type="text"\n      label="Energy (Nominal or MeV)"\n      (input)="insertDataChange()"\n      floating-label\n      [(ngModel)]="insertData.energy"\n      style="width:100%"></mdl-textfield>\n    <mdl-textfield\n      type="text"\n      label="Applicator (ID)"\n      (input)="insertDataChange()"\n      floating-label\n      [(ngModel)]="insertData.applicator"\n      style="width:100%"></mdl-textfield>\n    <mdl-textfield\n      type="text"\n      label="SSD (cm)"\n      (input)="insertDataChange()"\n      floating-label\n      [(ngModel)]="insertData.ssd"\n      style="width:100%"></mdl-textfield>\n\n    <p *ngIf="!machineSettingsExist">\n      These specific machine settings do not exist within your       \n      <a routerLink="/specifications" routerLinkActive="active">\n        provided machine specifications.\n      </a>\n    </p>\n\n    <mdl-textfield #measuredFactorInput\n      type="text"\n      label="Measured insert factor (as per TG 25)"\n      (input)="insertDataChange()"\n      floating-label\n      [(ngModel)]="insertData.measuredFactor"\n      style="width:100%"></mdl-textfield>\n\n    <button\n      mdl-button mdl-button-type="raised" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Parameterise | Add measured factor to model"\n      [disabled]="!ableToAddDataToModel || !machineSettingsExist || measuredFactorInput.value==null || measuredFactorInput.value==\'\' || submitDisabled || !textboxInputs || !equalLengths"\n      (click)="addMeasuredFactor(measuredFactorInput.value)">Add Measured Factor to Model            \n    </button>\n\n    <p *ngIf="dataAlreadyExistsOnModel && !submitDisabled && textInputsValid && equalLengths && machineSettingsExist">\n      This width, length, and measured factor combination exists within the model.       \n      <a routerLink="/model" routerLinkActive="active">\n        View the model.\n      </a>\n    </p>\n    \n    <div style="height:20px; width:20px;"></div>\n\n\n\n\n    <button\n      mdl-button mdl-button-type="raised"\n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Parameterise | Predict factor with model"\n      [disabled]="!machineSettingsExist || submitDisabled || !textInputsValid || !equalLengths || insertData.parameterisation.width == null || insertData.parameterisation.length == null"\n      (click)="predictFactor()">Predict Factor with Model        \n    </button>\n\n\n\n\n  </div>\n\n\n\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet">\n    <h5>Change parameterisation server url (optional)</h5>\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default server is: <br>\n      <a>http://electronapi.simonbiggs.net/parameterise</a>       \n    </p>\n    <mdl-textfield\n      type="text"\n      label="Parameterisation Server Address"\n      (input)="parameterisationServerChange($event.target.value)"\n      floating-label\n      [(ngModel)]="parameteriseURL"\n      style="width:100%"></mdl-textfield>\n  </div>\n\n</div>\n'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=function(){function PageNotFoundComponent(){}return PageNotFoundComponent=i([a.Component({selector:"my-page-not-found",template:n(148)}),o("design:paramtypes",[])],PageNotFoundComponent)}();t.PageNotFoundComponent=r},function(e,t){e.exports='<div class="mdl-grid">\n  <div class="mdl-cell mdl-cell--12-col">\n    This page has not been found. Please provide feedback ...\n  </div>\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(131),s=function(){function HomeComponent(e){this.myTitleService=e}return HomeComponent.prototype.ngOnInit=function(){this.myTitleService.setTitle("Home")},HomeComponent=i([a.Component({selector:"my-home",template:n(150)}),o("design:paramtypes",[r.TitleService])],HomeComponent)}();t.HomeComponent=s},function(e,t){e.exports='<div class="mdl-grid">\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h3 itemprop="name">Electron insert factor modelling</h3>\n\n    <h4>Description</h4>\n    <p>\n      This online web app is for the modelling of the portion of the electron output factor that is dependent on the shape of the shielding insert mounted within the applicator. This allows modelling insert factors using only the measured factors already available at a centre. Should all outliers be removed from the data set the user might expect as low as 0.5% standard uncertainty for factor prediction with as little as 8 data points.\n    </p>\n    <p>\n      If you find bugs, or have any usability suggestions please <a href="mailto:mail@simonbiggs.net">email me</a> so that I may make appropriate fixes and improvements.\n    </p>\n\n    <h4>Publication</h4>\n    <!--<h6>Original paper</h6>-->\n    <p>The paper detailing the algorithim and its validation:</p>\n    <p>\n      S. Biggs, M. Sobolewski, R. Murry, J. Kenny, Spline modelling electron insert factors using routine measurements. Physica Medica (2015), <a href="http://dx.doi.org/10.1016/j.ejmp.2015.11.002">doi:10.1016/j.ejmp.2015.11.002</a>.\n    </p>\n\n\n    <h4>Web app structure</h4>\n    <p>This web app is divided into six logical components all of which can be accessed from the navigation menu. These are outlined below:</p>\n      <ul>\n        <li>\n          <a routerLink="/specifications" routerLinkActive="active">\n            Machine specifications component\n          </a>\n          <ul><li>Used to define you centre specific machine specifications.</li></ul>   \n          \n        </li>\n        <li>\n          <a routerLink="/dicom" routerLinkActive="active">\n            Dicom component\n          </a>\n          <ul><li>Used to extract patient insert shapes from Dicom files.</li></ul>\n        </li>\n        <li>\n          <a routerLink="/parameterise" routerLinkActive="active">\n            Parameterisation component\n          </a>\n          <ul><li>Used to parameterise insert shapes into equivalent ellipse widths and lengths for use within the empirical model.</li></ul>\n        </li>\n        <li>\n          <a routerLink="/create-model" routerLinkActive="active">\n            Model component\n          </a>\n          <ul><li>Use this to create the model once there are at least 8 measured factors for a given machine, applicator, energy, ssd combination.</li></ul>\n        </li>\n        <li>\n          <a routerLink="/use-model" routerLinkActive="active">\n            Use model component\n          </a>\n          <ul><li>Use this to quickly calculate small or large numbers of predicted factors.</li>\n            <li>Measured factors can be given here to batch evaluate the models ability to predict factors for validation purposes.</li></ul>          \n        </li>\n        <li>\n          <a routerLink="/database" routerLinkActive="active">\n            Database management component\n          </a>\n          <ul><li>Use this to transfer and backup the data within the local browser data.</li></ul>\n          \n        </li>\n      </ul>\n\n   \n  </div>\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">      \n\n\n    <h4>Implementation instructions</h4>\n    <p>\n      To implement this web app in your centre you need to do the following:\n    </p>\n    <ul>\n      <li>  \n        Specify the machine models and the corresponding applicators, energies, and ssds within the    \n        <a routerLink="/specifications" routerLinkActive="active">\n          machine specification component.\n        </a>\n      </li>\n      <li> \n        Collate / measure your electron insert factor measuremens. These factors are to measured in accordance to TG 25.   \n      </li>\n      <li>\n        Parameterising new insert shapes\n        <ul>\n          <li>\n            If the insert shapes are ellipses, you may directly input the ellipse widths and lengths as projected to the isocentre within the \n            <a routerLink="/use-model" routerLinkActive="active">\n              model component.\n            </a>\n          </li>\n          <li>\n            If you can analytically determine the diameter of the largest fully encompassed circle of your insert shapes, and you can determine your insert area you may directly input widths and area within the \n            <a routerLink="/use-model" routerLinkActive="active">\n              model component</a>.\n            For example, the diameter of the largest fully encompassed circle within a rectangle is the width of the rectangle, and the area of a rectangle is width x length.\n            That way if your data is made up of rectangles you may input widths and areas directly.\n          </li>\n          <li>\n            If you know the x and y coordinates of your insert then determine the equivalent ellipse widths and lengths by inputting x and y coordinates as defined at isocentre within the \n            <a routerLink="/parameterise" routerLinkActive="active">\n              parameterisation component.\n            </a>          \n          </li>\n          <li>\n            If the insert shape is defined within your planning system, export the patient plan to dicom and then read the insert coordinates from the dicom file using the\n            <a routerLink="/dicom" routerLinkActive="active">\n              dicom component.\n            </a>          \n          </li>\n        </ul>\n      </li>\n      <li>\n        Once you have the corresponding equivalent ellipse widths and lengths for your measured factors these may be appended to the relevant machine configuration within the \n        <a routerLink="/create-model" routerLinkActive="active">\n          model component\n        </a>\n      </li>\n      <li>\n        Whenever a machine configuration gets at least 8 data points you may press the "Run Spline Model" on the \n        <a routerLink="/create-model" routerLinkActive="active">\n          model component\n        </a>\n        which will allow the prediction of insert factors for other widths and lengths.\n      </li>\n      <li>\n        The \n        <a routerLink="/use-model" routerLinkActive="active">\n          use component\n        </a>\n        is specifically designed to aid you in validating your model with large batches of data. \n        If you have a large data set of measurements you can include only 8 of these measurements within the model and then use the model to predict and compare the remaining insert shapes.\n        Once you are confident with the model you may then include the remaining shapes.\n      </li>\n      <li>\n        Once you are content with your model use the \n        <a routerLink="/database" routerLinkActive="active">\n          database management component\n        </a>\n        to export and backup your data. This data can be placed on a shared drive for access by users who need to use the model.\n      </li>\n      <li>\n        If you need to have a consistent reliable interface you may wish to consider downloading a copy of this web app and serving it within your centre\'s intranet.\n        This can be achieved by following the relevant steps given within the \n        <a routerLink="/details" fragment="locally" routerLinkActive="active">\n          further details component</a>.\n      </li>\n    </ul>\n\n    <h4>Demo Instructions</h4>\n    <p>\n      If you wish to simply demo this app these are the following steps you can take:\n    </p>\n    <ul>\n      <li>\n        Within the \n        <a routerLink="/dicom" routerLinkActive="active">\n          dicom component \n        </a>\n        download the demo dicom file, load it into the web app and see the insert shapes be pulled from the dicom file without any network traffic\n      </li>\n      <li>\n        Within the \n        <a routerLink="/parameterise" routerLinkActive="active">\n          parameterise component\n        </a>\n        press the "Load Demo Data" button and then press the "Parameteterise Insert" button to see the parameterisation algorithim in action\n      </li>\n      <li>\n        Within the \n        <a routerLink="/model" routerLinkActive="active">\n          model component\n        </a>\n        press the "Load Demo Data" button and then press the "Run Spline Model" to see the spline model being created. \n        You can then either hover over the model, or tap on the model to view the relevant values.\n      </li>\n    </ul>\n\n    <!--<h4>Use instructions</h4>\n    <ul>\n      <li>\n        Export the patient plan to dicom and then read the insert coordinates from the dicom file using the\n        <a routerLink="/dicom" routerLinkActive="active">\n          dicom component.\n        </a>          \n      </li>\n      <li>\n        Press the "Parameterise Insert" button to determine the equivalent ellipse width and length\n      </li>\n      <li>\n        Press the "Predict Factor with Model" button to automatically change the machine configuration to that which matches your loaded insert\n      </li>\n      <li>\n        Hover your mouse over the relevant width and length within the model to predict your insert factor\n      </li>\n    </ul>-->\n\n\n  </div>\n\n</div>';
},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(131),s=n(129),c=n(137),l=n(132),d=n(140),p=n(152),h=function(){function CreateModelComponent(e,t,n,i,o,a){var r=this;this.modelData=e,this.myTitleService=t,this.electronApiService=n,this.dataPersistenceService=i,this.currentSettings=o,this.ngZone=a,this.textboxLabels={width:"Width of ellipse given by diameter of largest encompassed circle (cm @iso)",length:"Length of ellipse that matches insert shape area (cm @iso)",area:"[Optional] Area of insert shape (cm^2 @iso)",measuredFactor:"Measured insert factor (as per TG 25)"},this.textboxValid=!0,this.lengthSmallerThanWidth=!1,this.plot_width=600,this.dataInFlight=!1,window.onresize=function(e){a.run(function(){r.updatePlotWidth()})}}return CreateModelComponent.prototype.ngOnDestroy=function(){window.onresize=null},CreateModelComponent.prototype.ngOnInit=function(){var e=this;this.myTitleService.setTitle("Create Model"),this.dataPersistenceService.loadServerUrl("model").then(function(t){null==t?e.modelURL="http://electronapi.simonbiggs.net/model":e.modelURL=t.url}),this.updatePlotWidth()},CreateModelComponent.prototype.updatePlotWidth=function(){this.plot_width=this.plotContainer.nativeElement.clientWidth},CreateModelComponent.prototype.currentMachineSettingsUpdated=function(e){this.currentSettings=e,this.loadMeasuredData(),this.checkLengthSmallerThanWidth()},CreateModelComponent.prototype.loadMeasuredData=function(){var e=this;this.dataPersistenceService.loadModelData(this.modelData,this.currentSettings).then(function(){e.textboxInputs.triggerUpdate=!0})},CreateModelComponent.prototype.saveModel=function(){this.dataPersistenceService.saveModelData(this.modelData,this.currentSettings)},CreateModelComponent.prototype.checkLengthSmallerThanWidth=function(){this.lengthSmallerThanWidth=!1;for(var e=0;e<this.modelData.measurement.width.length;e++)if(this.modelData.measurement.width[e]>this.modelData.measurement.length[e])return void(this.lengthSmallerThanWidth=!0)},CreateModelComponent.prototype.onValidTextboxChange=function(){this.modelData.model.reset(),this.checkLengthSmallerThanWidth(),this.saveModel()},CreateModelComponent.prototype.basicServerSubmit=function(){var e=this;this.dataInFlight=!0,this.electronApiService.sendToServer(this.modelURL,JSON.stringify(this.modelData.measurement)).then(function(t){e.modelData.model.width=t.model_width,e.modelData.model.length=t.model_length,e.modelData.model.predictedFactor=t.model_factor,e.dataInFlight=!1,e.saveModel()})},CreateModelComponent.prototype.modelServerChange=function(e){this.dataPersistenceService.saveServerUrl("model",e)},CreateModelComponent.prototype.defaultServer=function(){this.modelURL="http://electronapi.simonbiggs.net/model",this.dataPersistenceService.saveServerUrl("model",this.modelURL)},CreateModelComponent.prototype.loadDemoData=function(){for(var e=0,t=["machine","energy","applicator","ssd"];e<t.length;e++){var n=t[e];this.currentSettings[n]=null}this.settingsPicker.currentSettings=this.currentSettings,this.modelData.model.reset(),this.modelData.measurement.reset(),this.modelData.measurement.width=[3.71,6.78,6.3,7.56,5.26,6.53,7.08,4.38,3.66,4.21,4.21,6.54,5.86,3.17,6,8.06,6.31,5.26,4.21,5.21,4.59,5.34,6.41,5.26,5.25,7.82,4.2,3.16,7.18,5.72,6.08,6.64,8.4,4.59,3.15,4.67,4.21,9.45,7.64,3.17,3.17,7.36],this.modelData.measurement.length=[4.36,10.97,6.33,10.05,13.66,10.99,10.77,5.47,5.04,8.41,13.65,8.41,8.62,9.43,7.97,11.85,8.24,10.52,6.82,11.4,5.67,9.64,8.69,8.41,5.26,10.85,4.21,5.25,11.27,11.6,6.64,9.81,8.42,6.54,3.16,6.28,10.51,9.47,8.99,13.64,6.83,7.37],this.modelData.measurement.measuredFactor=[.9489,1.0067,.9858,1.0045,.9868,1.0004,1.0052,.9634,.9437,.9708,.9757,.9931,.9896,.9492,.9911,1.0067,.9923,.9879,.9609,.9884,.9587,.9934,.9991,.9831,.9705,1.0019,.9562,.9348,.9987,.9989,.9933,.9991,1.0067,.9683,.9296,.9735,.9709,1.0084,1.0028,.953,.9484,1.0032],this.modelData.measurement.updateAreaFromLength(),this.checkLengthSmallerThanWidth(),this.textboxInputs.triggerUpdate=!0},i([a.ViewChild("plotContainer"),o("design:type",Object)],CreateModelComponent.prototype,"plotContainer",void 0),i([a.ViewChild("settingsPicker"),o("design:type",Object)],CreateModelComponent.prototype,"settingsPicker",void 0),i([a.ViewChild("textboxInputs"),o("design:type",p.WidthLengthAreaInputComponent)],CreateModelComponent.prototype,"textboxInputs",void 0),CreateModelComponent=i([a.Component({selector:"my-create-model",template:n(153)}),o("design:paramtypes",[c.ModelData,r.TitleService,s.ElectronApiService,l.DataPersistenceService,d.CurrentSettings,a.NgZone])],CreateModelComponent)}();t.CreateModelComponent=h},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(137),s=n(142),c=function(){function WidthLengthAreaInputComponent(){this.textboxLabels={width:"Width of ellipse given by diameter of largest encompassed circle (cm @iso)",length:"Length of ellipse that matches insert shape area (cm @iso)",area:"Area of insert shape (cm^2 @iso)",measuredFactor:"Measured insert factor (as per TG 25)"},this.disabled=!1,this.rows=2,this.validTextBoxChange=new a.EventEmitter,this.texboxValidCheck=new a.EventEmitter,this.lastEdit="length"}return WidthLengthAreaInputComponent.prototype.ngOnInit=function(){this.textInputControl=new s.TextInputControl(["width","length","area","measuredFactor"],this.dataInputs),this.textInputControl.updateAllTextboxInputs()},WidthLengthAreaInputComponent.prototype.ngDoCheck=function(){this.triggerUpdate&&(this.textInputControl.updateAllTextboxInputs(),this.triggerUpdate=!1)},WidthLengthAreaInputComponent.prototype.onTextboxChange=function(e,t){var n=this.textInputControl.textboxValid[e];this.textInputControl.validateTextboxInput(e,t),this.textInputControl.textboxValid[e]!=n&&this.texboxValidCheck.emit(this.textInputControl.checkAllValid()),this.textInputControl.textboxValid[e]&&(("length"==e||"width"==e&&"length"==this.lastEdit)&&(this.dataInputs.updateAreaFromLength(),this.textInputControl.updateTextboxInput("area"),this.lastEdit="length"),("area"==e||"width"==e&&"area"==this.lastEdit)&&(this.dataInputs.updateLengthFromArea(),this.textInputControl.updateTextboxInput("length"),this.lastEdit="area"),this.validTextBoxChange.emit())},i([a.Input(),o("design:type",Object)],WidthLengthAreaInputComponent.prototype,"textboxLabels",void 0),i([a.Input(),o("design:type",r.AreaLengthConversion)],WidthLengthAreaInputComponent.prototype,"dataInputs",void 0),i([a.Input(),o("design:type",Boolean)],WidthLengthAreaInputComponent.prototype,"triggerUpdate",void 0),i([a.Input(),o("design:type",Boolean)],WidthLengthAreaInputComponent.prototype,"disabled",void 0),i([a.Input(),o("design:type",Object)],WidthLengthAreaInputComponent.prototype,"rows",void 0),i([a.Output(),o("design:type",Object)],WidthLengthAreaInputComponent.prototype,"validTextBoxChange",void 0),i([a.Output(),o("design:type",Object)],WidthLengthAreaInputComponent.prototype,"texboxValidCheck",void 0),WidthLengthAreaInputComponent=i([a.Component({selector:"my-width-length-area-input",template:n(144)}),o("design:paramtypes",[])],WidthLengthAreaInputComponent)}();t.WidthLengthAreaInputComponent=c},function(e,t){e.exports='<div class="mdl-grid">\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Description</h5>\n    <p>\n      Use this component to turn a set of at least 8 measured factors with corresponding equivalent widths and lengths into a spline model.\n      These widths and lengths need to be determined using the parameterisation method employed within the \n      <a routerLink="/parameterise" routerLinkActive="active">\n        parameterisation component.\n      </a>\n    </p>\n    <p>\n      You are free to edit the widths, lengths, and factors manually below, or have the       \n      <a routerLink="/parameterise" routerLinkActive="active">\n        parameterisation component\n      </a>\n      automatically add the measured factors to the correct model. Both work interchangably.\n      You may only add shapes via the \n      <a routerLink="/parameterise" routerLinkActive="active">\n        parameterisation component\n      </a>\n      if machine ID, applicator, energy, ssd, and measured factor are filled in and they match a machine configuration defined within the \n      <a routerLink="/specifications" routerLinkActive="active">\n        specifications component.\n      </a> \n    </p>\n    <p>\n      A spline model is only valid for a single machine configuration. \n      Therefore each machine, applicator, energy, ssd has its own model. \n      Using the machine configuration section below you can change between the configurations.\n      This will only work if you have already\n      <a routerLink="/specifications" routerLinkActive="active">\n        defined your machine configurations.\n      </a> \n    </p>\n\n  </div>\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Choose machine configuration</h5>\n    <p>\n      Here is where you select the machine specifications for the model you with to edit. \n      You will only see options here if you have actually       \n      <a routerLink="/specifications" routerLinkActive="active">\n        defined your machine configurations.\n      </a> \n    </p>\n  </div>\n\n  <div [style.width]="\'100%\'">\n    <my-choose-specifications #settingsPicker\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\n    </my-choose-specifications>\n  </div>\n  \n\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <div [style.width]="\'100%\'" [style.height]="\'30px\'"></div>\n    <h5>\n      The model\n      <span *ngIf="currentSettings.machine != null && currentSettings.energy != null && currentSettings.energy != 0 && currentSettings.applicator != null && currentSettings.applicator != \'\' && currentSettings.ssd != null && currentSettings.ssd != 0">\n        for machine ID {{currentSettings.machine}}, at an energy of {{currentSettings.energy}} MeV, on the {{currentSettings.applicator}} applicator at {{currentSettings.ssd}} cm SSD\n      </span>\n      </h5>    \n  </div>\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n\n    <h6>Input widths, lengths, and factors</h6>\n    <p>\n      Use the following text boxes to directly edit the measured data used by the spline model.\n    </p>\n    <p>\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\n      This web app should handle copying and pasting from a range of sources (including excel).\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\n    </p>\n\n    <my-width-length-area-input #textboxInputs\n      [dataInputs]=modelData.measurement\n      [textboxLabels]=textboxLabels\n      [triggerUpdate]=false\n      [rows]=4\n      [disabled]="dataInFlight"\n      (texboxValidCheck)="textboxValid=$event"\n      (validTextBoxChange)=onValidTextboxChange()></my-width-length-area-input>\n\n    <!--<div *ngFor="let key of [\'width\', \'length\', \'measuredFactor\']">\n      <mdl-textfield \n        type="text"\n        [label]="textboxLabels[key]"\n        [(ngModel)]="this.textboxInput[key]"\n        (input)="onTextboxChange(key, $event.target.value)"\n        rows=4\n        floating-label\n        [disabled]="dataInFlight"\n        [style.width]="\'100%\'"></mdl-textfield>\n      <p *ngIf="!textboxValid[key]">\n        The {{key}} input is invalid\n      </p>\n      <span *ngIf="key==\'length\'">\n        \n      </span>\n    </div>-->\n    <p *ngIf="lengthSmallerThanWidth">\n      There exists a length value that is smaller than its corresponding width. Spline modelling is disabled as a result.\n    </p>\n    <p *ngIf="modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length">\n      The lengths of the inputs are not equal. Spline modelling is disabled as a result.\n    </p>\n    <p *ngIf="modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8">\n      There are currently less than 8 data points. Spline modelling is disabled as a result.\n    </p>\n  </div>\n\n<div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone" #plotContainer>\n    <h6>The spline model</h6>\n    <button\n      mdl-button mdl-button-type="raised" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Model | Load demo data"\n      [disabled]="dataInFlight"\n      (click)="loadDemoData()">Load demo data         \n    </button>\n      \n    <button\n      mdl-button mdl-button-type="raised" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Model | Calculate spline model"\n      [disabled]="modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8 || dataInFlight || modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length || !textboxValid || lengthSmallerThanWidth"\n      (click)="basicServerSubmit()">Calculate Spline Model\n    </button>\n    \n\n    <div *ngIf="modelData.measurement.width.length > 0 && modelData.measurement.length.length > 0 && modelData.measurement.measuredFactor.length > 0">\n      <my-bokeh-create-model\n        [title]="\'Model Plot\'"\n        [scatter_x]="modelData.measurement.width"\n        [scatter_y]="modelData.measurement.length"\n        [scatter_z]="modelData.measurement.measuredFactor"\n        [pcolour_x]="modelData.model.width"\n        [pcolour_y]="modelData.model.length"\n        [pcolour_z]="modelData.model.predictedFactor"\n        [plot_width]="plot_width"\n        [plot_height]="380">\n      </my-bokeh-create-model>\n    </div>\n    <div *ngIf="modelData.measurement.width.length == 0 || modelData.measurement.length.length == 0|| modelData.measurement.measuredFactor.length == 0">\n      <p>\n        <font color="red">There is currently no data for this combination.</font> If you wish to load some demo data to see the model in action press the "load demo data" button below.\n        To set this model up with your own data follow the instructions in the description at the top of this page.\n      </p>\n    </div>\n\n\n  </div>\n\n\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet">\n    <h5>Change modelling server url (optional)</h5>\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default is: <br>\n      <a (click)="defaultServer()">http://electronapi.simonbiggs.net/model</a>        \n    </p>\n    <mdl-textfield\n      type="text"\n      label="Spline model server address"\n      (input)="modelServerChange($event.target.value)"\n      floating-label\n      [(ngModel)]="modelURL"\n      style="width:100%"></mdl-textfield>\n  </div>\n\n\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(131),s=n(137),c=n(132),l=n(140),d=n(152),p=function(){function UseModelComponent(e,t,n,i,o){var a=this;this.modelData=e,this.myTitleService=t,this.dataPersistenceService=n,this.currentSettings=i,this.ngZone=o,this.textboxLabels={width:"Width of ellipse given by diameter of largest encompassed circle (cm @iso)",length:"Length of ellipse that matches insert shape area (cm @iso)",area:"[Optional] Area of insert shape (cm^2 @iso)",measuredFactor:"[Optional] Measured insert factor (as per TG 25)"},this.modelLookup={},this.predictionDifference=[],this.plot_width=600,window.onresize=function(e){o.run(function(){a.updatePlotWidth()})}}return UseModelComponent.prototype.ngOnDestroy=function(){console.log("use-model.component ngOnDestroy"),window.onresize=null},UseModelComponent.prototype.ngOnInit=function(){console.log("use-model.component ngOnInit"),this.myTitleService.setTitle("Use Model"),this.updatePlotWidth(),this.updateModelLookup()},UseModelComponent.prototype.ngAfterViewInit=function(){console.log("use-model.component ngAfterViewInit"),this.loadMeasuredData(),this.updatePredictedFactors()},UseModelComponent.prototype.lookupFactor=function(e,t){console.log("use-model.component lookupFactor"),e=Math.round(10*e)/10,t=Math.round(10*t)/10;var n;return n=String(e)+","+String(t),Math.round(1e3*this.modelLookup[n])/1e3},UseModelComponent.prototype.updatePredictedFactors=function(){console.log("use-model.component updatePredictedFactors"),this.modelData.predictions.predictedFactor=[];for(var e,t,n,i=Math.min(this.modelData.predictions.width.length,this.modelData.predictions.length.length),o=0;o<i;o++)t=this.modelData.predictions.width[o],n=this.modelData.predictions.length[o],e=this.lookupFactor(t,n),this.modelData.predictions.predictedFactor.push(e);this.updatePredictionDifference()},UseModelComponent.prototype.updatePredictionDifference=function(){console.log("use-model.component updatePredictionDifference"),this.predictionDifference=[];var e,t,n;for(var i in this.modelData.predictions.measuredFactor)e=this.modelData.predictions.measuredFactor[i],t=this.modelData.predictions.predictedFactor[i],n=t-e,n=Math.round(1e3*n)/1e3,this.predictionDifference.push(n)},UseModelComponent.prototype.updateModelLookup=function(){console.log("use-model.component updateModelLookup"),this.modelLookup={};var e;for(var t in this.modelData.model.width)e=String(this.modelData.model.width[t])+","+String(this.modelData.model.length[t]),this.modelLookup[e]=this.modelData.model.predictedFactor[t]},UseModelComponent.prototype.updatePlotWidth=function(){console.log("use-model.component updatePlotWidth"),this.plot_width=this.plotContainer.nativeElement.clientWidth},UseModelComponent.prototype.currentMachineSettingsUpdated=function(e){console.log("use-model.component currentMachineSettingsUpdated"),this.currentSettings=e,this.loadMeasuredData()},UseModelComponent.prototype.loadMeasuredData=function(){var e=this;if(console.log("use-model.component loadMeasuredData"),void 0===this.currentSettings)throw new RangeError("Tried to load measured data but current settings are not defined");this.dataPersistenceService.loadModelData(this.modelData,this.currentSettings).then(function(){console.log("use-model.component loadMeasuredData this.dataPersistenceService.loadModelData(this.modelData, this.currentSettings) promise complete"),e.updateModelLookup(),e.updatePredictedFactors(),e.textboxInputs.triggerUpdate=!0})},UseModelComponent.prototype.saveModel=function(){console.log("use-model.component saveModel"),this.dataPersistenceService.saveModelData(this.modelData,this.currentSettings)},UseModelComponent.prototype.onValidTextboxChange=function(){console.log("use-model.component onValidTextboxChange"),this.updatePredictedFactors(),this.saveModel()},i([a.ViewChild("plotContainer"),o("design:type",Object)],UseModelComponent.prototype,"plotContainer",void 0),i([a.ViewChild("settingsPicker"),o("design:type",Object)],UseModelComponent.prototype,"settingsPicker",void 0),i([a.ViewChild("textboxInputs"),o("design:type",d.WidthLengthAreaInputComponent)],UseModelComponent.prototype,"textboxInputs",void 0),UseModelComponent=i([a.Component({selector:"my-use-model",template:n(155)}),o("design:paramtypes",[s.ModelData,r.TitleService,c.DataPersistenceService,l.CurrentSettings,a.NgZone])],UseModelComponent)}();t.UseModelComponent=p},function(e,t){e.exports='<div class="mdl-grid">\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Use models</h5>\n    <p>\n      This component is where created models are used. \n      Factors for prediction will be able to be inputted using width, and then either length or area, and optionally\n      a measured factor can be included for the purpose of comparing model results with measurement.\n    </p>\n    <p>\n      You can either use the parameterisation component to parameterise your shapes, or if you have a large data set of \n      generic shapes you need only determine the diameter of the largest encompassed circle to define width, and then\n      you may input shape area instead of length. \n      For example, the diameter of the largest fully encompassed circle within a rectangle is the width of the rectangle, \n      and the area of a rectangle is width x length.\n      This allows you to quickly check large data sets of previous measurements on generic shapes.\n    </p>\n  </div>\n\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Choose machine configuration</h5>\n    <my-choose-specifications #settingsPicker\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\n    </my-choose-specifications>\n  </div>\n\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Inserts being predicted</h5>\n    <my-width-length-area-input #textboxInputs\n      [dataInputs]=modelData.predictions\n      [textboxLabels]=textboxLabels\n      [triggerUpdate]=false\n      (validTextBoxChange)=onValidTextboxChange()></my-width-length-area-input>\n    <p>Predicted factors: {{modelData.predictions.predictedFactor}}</p>\n    <p>Prediction minus measured: {{predictionDifference}}</p>\n  </div>\n\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone" #plotContainer>\n    <div *ngIf="modelData.model.width.length > 0 && modelData.model.length.length > 0 && modelData.model.predictedFactor.length > 0">\n      <my-bokeh-use-model\n        [title]="\'Model Plot\'"\n        [scatter_x]="modelData.predictions.width"\n        [scatter_y]="modelData.predictions.length"\n        [area]="modelData.predictions.area"\n        [scatter_z]="modelData.predictions.measuredFactor"\n        [predicted_factor]="modelData.predictions.predictedFactor"\n        [pcolour_x]="modelData.model.width"\n        [pcolour_y]="modelData.model.length"\n        [pcolour_z]="modelData.model.predictedFactor"\n        [plot_width]="plot_width"\n        [plot_height]="380">\n      </my-bokeh-use-model>\n    </div>\n    <div *ngIf="modelData.model.width.length == 0 || modelData.model.length.length == 0|| modelData.model.predictedFactor.length == 0">\n      <p>\n        A model has not been calculated for this machine specification.\n        If you do have at least 8 data points please calculate the spline model on the           \n        <a routerLink="/create-model" routerLinkActive="active">\n          create model component.\n        </a>\n      </p>\n    </div>\n  </div>\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(131),s=n(132),c=function(){function StorageManagementComponent(e,t){var n=this;this.myTitleService=e,this.dataPersistenceService=t,this.reader=new FileReader,this.emptyDataBaseString='{\n  "databaseDetails": {\n    "name": "DefaultDatabase",\n    "version": 1,\n    "schema": {\n      "specifications": "machine, makeAndModel, energy, R50, applicator, ssd",\n      "currentSettings": "id, machine, energy, applicator, ssd",\n      "currentInsertData": "id, machine, parameterisation, energy, applicator, ssd, measuredFactor",\n      "modelData": "machineSettingsKey, measurement, model, predictions",\n      "dicomInsertList": "id, machine, parameterisation, energy, applicator, ssd, measuredFactor",\n      "serverURLs": "purpose, url",\n      "parameterisationCache": "id, insert, width, length, circle, ellipse",\n      "pulledFromLocalStorage": "id, pulledFromLocalStorage"\n    }\n  },\n  "databaseContents": {\n    "specifications": [],\n    "currentSettings": [],\n    "currentInsertData": [],\n    "modelData": [],\n    "dicomInsertList": [],\n    "serverURLs": [],\n    "parameterisationCache": [],\n    "pulledFromLocalStorage": [\n      {\n        "id": 0,\n        "pulledFromLocalStorage": true\n      }\n    ]\n  }\n}',this.reader.onload=function(e){console.log("storage-management.component this.reader.onload");var t=e.target.result;n.fileJsonObject=JSON.parse(t)}}return StorageManagementComponent.prototype.ngOnInit=function(){var e=this;console.log("storage-management.component ngOnInit"),this.myTitleService.setTitle("Database management"),this.dataPersistenceService.databaseDump().then(function(t){e.databaseDump=t})},StorageManagementComponent.prototype.ngAfterViewInit=function(){},StorageManagementComponent.prototype.highlightJson=function(){hljs.highlightBlock(this.jsonCodeDisplay)},StorageManagementComponent.prototype.exportDataBase=function(){var e=this;console.log("storage-management.component exportDataBase"),this.dataPersistenceService.databaseDump().then(function(t){e.databaseDump=t;var n=document.createElement("a");n.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),n.setAttribute("download","databaseDump.json"),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)})},StorageManagementComponent.prototype.openFile=function(e){if(console.log("storage-management.component openFile"),"undefined"!=typeof e.target){var t=e.target.files[0];t&&this.reader.readAsText(t)}else console.log(e)},StorageManagementComponent.prototype.appendJsonToDatabase=function(e){var t=this;this.dataPersistenceService.appendJsonToDatabase(e).then(function(){return t.dataPersistenceService.databaseDump()}).then(function(e){t.databaseDump=e,t.fileJsonObject=null})},StorageManagementComponent.prototype.emptyDatabase=function(){var e=this;this.dataPersistenceService.databaseDump().then(function(t){return e.tempSaveOfDatabaseDump=t,e.dataPersistenceService.emptyDatabase()}).then(function(){return e.dataPersistenceService.databaseDump()}).then(function(t){e.databaseDump=t})},StorageManagementComponent.prototype.undoDataEmpty=function(){this.appendJsonToDatabase(JSON.parse(this.tempSaveOfDatabaseDump))},i([a.ViewChild("jsonCodeDisplay"),o("design:type",Object)],StorageManagementComponent.prototype,"jsonCodeDisplay",void 0),StorageManagementComponent=i([a.Component({selector:"my-storage-management",template:n(157)}),o("design:paramtypes",[r.TitleService,s.DataPersistenceService])],StorageManagementComponent)}();t.StorageManagementComponent=c},function(e,t){e.exports='<div class="mdl-grid">\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\n    <h5>Description</h5>\n    <p>\n      All of your model data is stored within an <a href="https://developer.mozilla.org/en/docs/Web/API/IndexedDB_API">IndexedDB</a> database within your browser.\n      This database is specific to your browser, computer, and this web address. This means that other websites nor other computers can access this data directly.\n      To use your data across a range of computers you need to export it to file, and then import it on the computers that need to use the data.\n    </p>\n    <p>\n      This component is for exporting, deleting, and adding data to and from this browser\'s database.\n    </p>\n\n    <p>\n      Internally this web app uses <a href="http://dexie.org/">Dexie.js</a> to access the database api.\n    </p>\n  </div>\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\n    <h5>Export database to file</h5>\n    <p>\n      The following button will export the browser database to a .json file. Use this to either backup or transfer your data.\n    </p>\n    <button\n      mdl-button mdl-button-type="fab" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Storage | Export browser database"\n      (click)="exportDataBase()"><img src="/webapp/lib/material/file_download.png">\n    </button>\n  </div>\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\n    <h5>Delete data from database</h5>\n    <p>\n      The following button will remove the data from your database. \n      Use this if you wish to freshly import a new file or to start afresh.\n    </p>\n    <button\n      mdl-button mdl-button-type="fab" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Storage | Empty current database"\n      [disabled]="emptyDataBaseString==databaseDump"\n      (click)="emptyDatabase()"><img src="/webapp/lib/material/delete_forever.png">\n    </button>\n    <button\n      mdl-button mdl-button-type="fab" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Storage | Empty current database"\n      [disabled]="tempSaveOfDatabaseDump==null || emptyDataBaseString!=databaseDump"\n      (click)="undoDataEmpty()"><img src="/webapp/lib/material/undo.png">\n    </button>\n\n  </div>\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\n\n\n    <h5>Add data to database from file</h5>\n    <p>\n      The following button will append the contents of the given .json file to your browser database.\n      If a key within your .json file matches that of your browser database then the database entry will be overwritten.\n      This is not reversable.\n    </p>\n\n    <input type=\'file\' (change)=\'openFile($event)\'>\n\n    <button      \n      mdl-button mdl-button-type="fab" \n      mdl-colored="primary" \n      mdl-ripple\n      angulartics2On="click" angularticsEvent="Storage | Empty current database"\n      [disabled]="fileJsonObject == null"\n      (click)="appendJsonToDatabase(fileJsonObject)"><img src="/webapp/lib/material/file_upload.png">\n    </button>\n  </div>\n\n  <div *ngIf="databaseDump != null" class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Your current raw database file</h5>\n      <p>\n        Number of characters within database dump: {{databaseDump.length}} \n      </p>\n      <div style="white-space: pre-wrap"><div #jsonCodeDisplay><code class="json">{{databaseDump}}</code></div>\n  </div>\n</div>';
},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(131),s=n(132),c=n(139),l=function(){function SpecificationsComponent(e,t,n){this.myTitleService=e,this.dataPersistenceService=t,this.machineSpecificationService=n,this.newMachineIDValid=!1,this.newModelValid=!1,this.newMachineValid=!1,this.edittingMachine=null,this.newEnergyValid=!1,this.newR50Valid=!1,this.newEnergySetValid=!1,this.edittingEnergy=null,this.newApplicatorValid=!1,this.edittingApplicator=null,this.newSSDValid=!1,this.edittingSSD=null}return SpecificationsComponent.prototype.ngOnInit=function(){var e=this;console.log("specifications.component ngOnInit"),this.myTitleService.setTitle("Specifications"),this.machineSpecificationService.loadData().then(function(){console.log("specifications.component ngOnInit this.machineSpecificationService.loadData() promise complete"),e.currentSettings=e.machineSpecificationService.currentSettings})},SpecificationsComponent.prototype.checkNewMachineIDInput=function(){console.log("specifications.component checkNewMachineIDInput"),this.machineSpecificationService.machineList.indexOf(this.newMachineID)==-1&&null!=this.newMachineID&&""!=this.newMachineID?this.newMachineIDValid=!0:this.newMachineIDValid=!1,this.checkNewMachineValid()},SpecificationsComponent.prototype.checkNewModelInput=function(){console.log("specifications.component checkNewModelInput"),null!=this.newModel&&""!=this.newModel?this.newModelValid=!0:this.newModelValid=!1,this.checkNewMachineValid()},SpecificationsComponent.prototype.checkNewMachineValid=function(){console.log("specifications.component checkNewMachineValid"),this.newMachineValid=this.newMachineIDValid&&this.newModelValid},SpecificationsComponent.prototype.addMachineID=function(){if(console.log("specifications.component addMachineID"),!this.newMachineValid)throw new RangeError("The new machine being added is not a valid input");this.machineSpecificationService.newMachine(this.newMachineID,this.newModel),this.newMachineID=null,this.newModel=null,this.newMachineIDValid=!1,this.newModelValid=!1,this.newMachineValid=!1,this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification)},SpecificationsComponent.prototype.checkNewEnergyInput=function(){console.log("specifications.component checkNewEnergyInput"),this.machineSpecificationService.currentSpecification.energy.indexOf(Number(this.newEnergy))<0&&null!=this.newEnergy&&!isNaN(Number(this.newEnergy))?this.newEnergyValid=!0:this.newEnergyValid=!1,this.checkNewEnergySetValid()},SpecificationsComponent.prototype.checkNewR50Input=function(){console.log("specifications.component checkNewR50Input"),null==this.newR50||isNaN(Number(this.newR50))?this.newR50Valid=!1:this.newR50Valid=!0,this.checkNewEnergySetValid()},SpecificationsComponent.prototype.checkNewEnergySetValid=function(){console.log("specifications.component checkNewEnergySetValid"),this.newEnergySetValid=this.newEnergyValid&&this.newR50Valid},SpecificationsComponent.prototype.addEnergy=function(){if(console.log("specifications.component addEnergy"),!this.newEnergySetValid)throw new RangeError("The new energy set being added is not valid");this.machineSpecificationService.currentSpecification.energy.push(Number(this.newEnergy)),this.machineSpecificationService.currentSpecification.R50.push(Number(this.newR50)),this.newEnergy=null,this.newR50=null,this.newEnergyValid=!1,this.newR50Valid=!1,this.newEnergySetValid=!1,this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification)},SpecificationsComponent.prototype.checkNewApplicatorInput=function(){console.log("specifications.component checkNewApplicatorInput"),this.machineSpecificationService.currentSpecification.applicator.indexOf(this.newApplicator.toLowerCase())<0&&null!=this.newApplicator&&""!=this.newApplicator?this.newApplicatorValid=!0:this.newApplicatorValid=!1},SpecificationsComponent.prototype.addApplicator=function(){if(console.log("specifications.component addApplicator"),!this.newApplicatorValid)throw new RangeError("The new applicator being added is not valid");this.machineSpecificationService.currentSpecification.applicator.push(this.newApplicator.toLowerCase()),this.newApplicator=null,this.newApplicatorValid=!1,this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification)},SpecificationsComponent.prototype.checkNewSSDInput=function(){console.log("specifications.component checkNewSSDInput"),this.machineSpecificationService.currentSpecification.ssd.indexOf(Number(this.newSSD))<0&&null!=this.newSSD&&!isNaN(Number(this.newSSD))?this.newSSDValid=!0:this.newSSDValid=!1},SpecificationsComponent.prototype.addSSD=function(){if(console.log("specifications.component addSSD"),!this.newSSDValid)throw new RangeError("The new ssd being added is not valid");this.newSSDValid&&(this.machineSpecificationService.currentSpecification.ssd.push(Number(this.newSSD)),this.newSSD=null,this.newSSDValid=!1,this.dataPersistenceService.saveSpecificationsData(this.machineSpecificationService.currentSpecification))},SpecificationsComponent=i([a.Component({selector:"my-specifications",template:n(159)}),o("design:paramtypes",[r.TitleService,s.DataPersistenceService,c.MachineSpecificationsService])],SpecificationsComponent)}();t.SpecificationsComponent=l},function(e,t){e.exports='<div class="mdl-grid">\n\n  <div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Machine specifications editing</h5>\n    <p>\n      Use this component to define your centre\'s machine specifications. \n      These will be used throughout this web app to silo each model into its own specific machine ID, applicator, energy, ssd combination.\n    </p>\n    <p>\n      Begin by entering your machine ID as defined within your treatment planning system along with the machine\'s make and model. \n      Note that these specifications are stored and accessed only on your local machine.\n      They are not sent to the server.\n    </p>\n    <p>\n      <font color="#d3d3d3">\n        Currently specifcations can only be added. At this current time they cannot be edited nor deleted once they have been defined.\n      </font>\n    </p>\n  </div>\n  <div class="mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone" *ngIf="machineSpecificationService != null && currentSettings != null">\n    <mdl-card mdl-shadow="6" style="width:100%">\n      <mdl-card-title>\n        <h2 mdl-card-title-text>Machine IDs</h2>\n      </mdl-card-title>\n\n      <mdl-list>\n        \n        <div *ngFor="let machine of machineSpecificationService.machineList">\n        \n          <div *ngIf="machine!=edittingMachine">\n            <mdl-list-item lines="3">\n              <mdl-list-item-primary-content>\n                <!--<div (click)="editMachine(machine)">-->\n                <div>\n                  <span>{{machine}}</span>\n                  <mdl-list-item-text-body>{{machineSpecificationService.returnMachineSpecification(machine).makeAndModel}}</mdl-list-item-text-body>\n                </div>\n              </mdl-list-item-primary-content>\n              <mdl-list-item-secondary-action>\n                <button\n                  mdl-button\n                  mdl-button-type="icon"\n                  mdl-ripple\n                  [disabled]="machine==currentSettings.machine || edittingMachine!=null"\n                  (click)="machineSpecificationService.changeMachine(machine)"><mdl-icon>dashboard</mdl-icon>       \n                </button>\n                <!--<button\n                  mdl-button *ngIf="machine!=edittingMachine"\n                  mdl-button-type="icon"\n                  mdl-ripple\n                  [disabled]="false"\n                  (click)="editMachine(machine)"><mdl-icon>edit</mdl-icon>       \n                </button>-->\n              </mdl-list-item-secondary-action>\n            </mdl-list-item>\n\n          </div>\n\n          <div *ngIf="machine==edittingMachine">\n            <mdl-list-item lines="3">\n              <mdl-list-item-primary-content>\n                <mdl-textfield #machineIDTextField\n                  type="text"\n                  label="Machine ID"\n                  [value]="machine"\n                  (keyup.enter)="finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)"\n                  floating-label\n                  style="display:inline;"></mdl-textfield>\n                <mdl-textfield #modelTextField\n                  type="text"\n                  label="Model"\n                  [value]="machineSpecificationService.returnMachineSpecification(machine).makeAndModel"\n                  (keyup.enter)="finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)"\n                  floating-label\n                  style="display:inline;"></mdl-textfield>\n              </mdl-list-item-primary-content>\n\n              <mdl-list-item-secondary-action>\n                <!--<button\n                  mdl-button\n                  mdl-button-type="icon"\n                  mdl-ripple\n                  [disabled]="machine!=edittingMachine"\n                  (click)="deleteMachine(machine)"><mdl-icon>delete</mdl-icon>       \n                </button>-->\n                <button\n                  mdl-button\n                  mdl-button-type="icon"\n                  mdl-ripple\n                  [disabled]="true"><mdl-icon>delete</mdl-icon>       \n                </button>\n                <button\n                  mdl-button\n                  mdl-button-type="icon"\n                  mdl-ripple\n                  mdl-colored="primary" \n                  [disabled]="machine==currentSettings.machine || edittingMachine!=null"\n                  (click)="changeCurrentMachine(machine)"><mdl-icon>dashboard</mdl-icon>       \n                </button>\n                <button\n                  mdl-button\n                  mdl-button-type="icon"\n                  mdl-ripple\n                  [disabled]="false"\n                  (click)="finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)"><mdl-icon>done</mdl-icon>       \n                </button>\n              </mdl-list-item-secondary-action>\n            </mdl-list-item>\n\n          </div>\n        </div>\n\n\n      </mdl-list>\n      <mdl-card-actions mdl-card-border>\n        <mdl-textfield\n          type="text"\n          label="New Machine ID"\n          [(ngModel)]="newMachineID"\n          (input)="checkNewMachineIDInput()"\n          (keyup.enter)="addMachineID()"\n          floating-label\n          style="width:100%"></mdl-textfield>\n        <mdl-textfield\n          type="text"\n          label="Machine Make and Model"\n          [(ngModel)]="newModel"\n          (input)="checkNewModelInput()"\n          angulartics2On="keyup.enter" angularticsEvent="Specifications | Enter press | Add machine ID"\n          (keyup.enter)="addMachineID()"\n          floating-label\n          style="width:70%"></mdl-textfield>\n        <button \n          [disabled]="!newMachineValid"\n          mdl-button \n          mdl-button-type="mini-fab"\n          mdl-ripple\n          angulartics2On="click" angularticsEvent="Specifications | Button click | Add machine ID"\n          (click)="addMachineID()">\n          <mdl-icon>add</mdl-icon>\n        </button>\n      </mdl-card-actions>\n\n    </mdl-card>\n  </div>\n\n  <div *ngIf="edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null" class="mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\n    <mdl-card mdl-shadow="6"  style="width:100%">\n      <mdl-card-title>\n        <h2 mdl-card-title-text>Energies for {{currentSettings.machine}}</h2>\n      </mdl-card-title>\n        <mdl-list>\n          <mdl-list-item *ngFor="let energy of machineSpecificationService.currentSpecification.energy" lines="3">\n            <mdl-list-item-primary-content>\n              <span>{{energy}} MeV</span>\n              <mdl-list-item-text-body>R50: {{machineSpecificationService.returnCurrentR50(energy)}} cm</mdl-list-item-text-body>\n            </mdl-list-item-primary-content>\n            <mdl-list-item-secondary-action>\n              <!--<button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>done</mdl-icon>       \n              </button>\n              <button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>edit</mdl-icon>       \n              </button>\n              <button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>delete</mdl-icon>       \n              </button>-->\n            </mdl-list-item-secondary-action>\n          </mdl-list-item>\n        </mdl-list>\n\n      <mdl-card-actions mdl-card-border>\n        <mdl-textfield\n          type="text"\n          label="New Energy (MeV)"\n          [(ngModel)]="newEnergy"\n          (input)="checkNewEnergyInput()"\n          (keyup.enter)="addEnergy()"\n          floating-label\n          style="width:100%"></mdl-textfield>\n        <mdl-textfield\n          type="text"\n          label="R50 for New Energy (cm)"\n          [(ngModel)]="newR50"\n          (input)="checkNewR50Input()"\n          angulartics2On="keyup.enter" angularticsEvent="Specifications | Enter press | Add energy"\n          (keyup.enter)="addEnergy()"\n          floating-label\n          style="width:70%"></mdl-textfield>\n        <button \n          [disabled]="!newEnergySetValid" \n          mdl-button \n          angulartics2On="click" angularticsEvent="Specifications | Button click | Add energy"\n          mdl-button-type="mini-fab"\n          (click)="addEnergy()">\n          <mdl-icon>add</mdl-icon>\n        </button>\n      </mdl-card-actions>\n    </mdl-card>\n  </div>\n\n  <div *ngIf="edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null" class="mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\n    <mdl-card mdl-shadow="6"  style="width:100%">\n      <mdl-card-title>\n        <h2 mdl-card-title-text>Applicators for {{currentSettings.machine}}</h2>\n      </mdl-card-title>\n        <mdl-list>\n          <mdl-list-item *ngFor="let applicator of machineSpecificationService.currentSpecification.applicator">\n            <mdl-list-item-primary-content>\n              <mdl-list-item-text-body>{{applicator}}</mdl-list-item-text-body>\n            </mdl-list-item-primary-content>\n            <mdl-list-item-secondary-action>\n              <!--<button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>done</mdl-icon>       \n              </button>\n              <button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>edit</mdl-icon>       \n              </button>\n              <button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>delete</mdl-icon>       \n              </button>-->\n            </mdl-list-item-secondary-action>\n          </mdl-list-item>\n        </mdl-list>\n\n      <mdl-card-actions mdl-card-border>\n        <mdl-textfield\n          type="text"\n          label="New Applicator"\n          [(ngModel)]="newApplicator"\n          (input)="checkNewApplicatorInput()"\n          angulartics2On="keyup.enter" angularticsEvent="Specifications | Enter press | Add applicator"\n          (keyup.enter)="addApplicator()"\n          floating-label\n          style="width:70%"></mdl-textfield>\n        <button \n          [disabled]="!newApplicatorValid" \n          mdl-button \n          angulartics2On="click" angularticsEvent="Specifications | Button click | Add applicator"\n          mdl-button-type="mini-fab"\n          (click)="addApplicator()">\n          <mdl-icon>add</mdl-icon>\n        </button>\n      </mdl-card-actions>\n    </mdl-card>\n  </div>\n\n  <div *ngIf="edittingMachine==null && machineSpecificationService.currentSpecification != null && currentSettings != null" class="mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone">\n    <mdl-card mdl-shadow="6"  style="width:100%">\n      <mdl-card-title>\n        <h2 mdl-card-title-text>SSDs for {{currentSettings.machine}}</h2>\n      </mdl-card-title>\n        <mdl-list>\n          <mdl-list-item *ngFor="let ssd of this.machineSpecificationService.currentSpecification.ssd">\n            <mdl-list-item-primary-content>\n              <mdl-list-item-text-body>{{ssd}} cm</mdl-list-item-text-body>\n            </mdl-list-item-primary-content>\n            <mdl-list-item-secondary-action>\n              <!--<button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>done</mdl-icon>       \n              </button>\n              <button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>edit</mdl-icon>       \n              </button>\n              <button\n                mdl-button\n                mdl-button-type="icon"\n                mdl-ripple\n                [disabled]="true"\n                (click)="null"><mdl-icon>delete</mdl-icon>       \n              </button>-->\n            </mdl-list-item-secondary-action>\n          </mdl-list-item>\n        </mdl-list>\n\n      <mdl-card-actions mdl-card-border>\n        <mdl-textfield\n          type="text"\n          label="New SSD (cm)"\n          [(ngModel)]="newSSD"\n          (input)="checkNewSSDInput()"\n          (keyup.enter)="addSSD()"\n          angulartics2On="keyup.enter" angularticsEvent="Specifications | Enter press | Add ssd"\n          floating-label\n          style="width:70%"></mdl-textfield>\n        <button \n          [disabled]="!newSSDValid" \n          mdl-button \n          angulartics2On="click" angularticsEvent="Specifications | Button click | Add ssd"\n          mdl-button-type="mini-fab"\n          (click)="addSSD()">\n          <mdl-icon>add</mdl-icon>\n        </button>\n      </mdl-card-actions>\n    </mdl-card>\n  </div>\n\n\n  <!--<div class="mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h5>Raw specification data editing (optional)</h5>\n    <p>\n      If you desire you may edit the raw machine specifications in its raw format below. \n      Currently error checking on this raw input is not implemented.\n      Incorrectly editing the data below may cause the web app not to function.\n      Input data above to determine the data structure required.</p>\n    <my-json-edit\n      [input]="specifications"\n      (inputUpdated)="changeSpecifications($event)"\n      buttonText="Update Specifications">\n    </my-json-edit>\n  </div>-->\n\n</div>\n\n'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(41),s=n(128),c=n(131),l=n(132),d=n(161),p=function(){function DicomComponent(e,t,n){this.myTitleService=e,this.dataPersistenceService=t,this.router=n,this.dicomExitCode=1,this.reader=new FileReader}return DicomComponent.prototype.ngOnInit=function(){var e=this;window.dicomData=" ",window.dicomLoadStatus=0,this.reader.onload=function(){return e.onceFileIsLoaded()},this.dataPersistenceService.loadDicomInsertList().then(function(t){e.insertList=t}),Module.print=this.sendDicomDumpToGlobalVariable,this.myTitleService.setTitle("Dicom")},DicomComponent.prototype.sendDicomDumpToGlobalVariable=function(e){window.dicomData=window.dicomData+"\n"+e},DicomComponent.prototype.updateDicomWarning=function(){var e=Number(window.dicomLoadStatus);0==e?(this.getBlockDataButton.disabled=!1,this.dicomWarning=null):(this.getBlockDataButton.disabled=!0,this.dicomWarning="An error occured while trying to find the block data within the provided Dicom file.")},DicomComponent.prototype.onceFileIsLoaded=function(){var e=new Int8Array(this.reader.result);console.log(e.length);var t="dicomfile";FS.isFile(t)&&FS.unlink(t),FS.writeFile(t,e,{encoding:"binary"});var n=Module.exit;Module.exit=function(e){window.dicomLoadStatus=e,n(e)},Module.callMain(["dcmdump",t,"--print-all"]),Module.exit=n,console.log(Module),this.updateDicomWarning(),FS.unlink(t)},DicomComponent.prototype.openFile=function(e){if("undefined"!=typeof e.target){console.log(e.target.files);var t=e.target.files[0];window.dicomData=" ",this.reader.readAsArrayBuffer(t)}else console.log(e)},DicomComponent.prototype.convertDicomDumpToDict=function(e){var t=e.replace(/\s*#[^#\n]*\n/g,"\n");return t=t.replace(/\s*#[^#\n]*$/g,""),t=t.replace(/^\n*/,""),t=t.replace(/(\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\))/g,"$1:"),t=t.replace(/(\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\):) SQ \(Sequence with \w+ length #=\d+\)/g,"$1"),t=t.replace(/(\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\):) na \(Item with \w+ length #=\d+\)/g,"$1"),t=t.replace(/ *\(fffe,e00d\): na \(ItemDelimitationItem[ \w-]*\) *\n/g,""),t=t.replace(/ *\(fffe,e0dd\): na \(SequenceDelimitationItem[ \w-\.]*\) *\n/g,""),t=t.replace(/(\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\):) (.*)/g,'$1 "$2"'),t=t.replace(/\\/g,", "),t=t.replace(/\(fffe,e000\):/g," - "),t=d.safeLoad(t)},DicomComponent.prototype.convertBlockDataToCoords=function(e){for(var t=/\[[, \d\.-]*\]/.exec(e).toString(),n=JSON.parse('{ "data": '+t+"}"),i=[],o=[],a=0,r=0,s=n.data;r<s.length;r++){var c=s[r];a%2==0?i.push(parseFloat((c/10).toFixed(2))):o.push(parseFloat((c/10).toFixed(2))),a++}var l={x:i,y:o};return l},DicomComponent.prototype.dicomPullNumber=function(e){return Number(e.replace(/.*\[([\d\.-]*)\].*/,"$1"))},DicomComponent.prototype.dicomPullString=function(e){return e.replace(/.*\[(.*)\].*/,"$1")},DicomComponent.prototype.getBlockData=function(){var e=this,t=window.dicomData,n=this.convertDicomDumpToDict(t),i=0;this.insertList=[];for(var o=[],a=n["(300a,00b0)"],r=0,c=a;r<c.length;r++){var l=c[r],d=l["(300a,00f4)"];if(void 0!=d){var p=new s.InsertData;p.id=i,i++;var h=l["(300a,00f4)"][0]["(300a,0106)"];p.parameterisation.insert=this.convertBlockDataToCoords(h),p.parameterisation.insertUpdated(),o.push(this.dataPersistenceService.loadParameterisationCache(p.parameterisation));try{p.applicator=this.dicomPullString(l["(300a,0107)"][0]["(300a,0108)"]).toLowerCase()}catch(m){p.applicator=null,console.log(m)}try{p.energy=this.dicomPullNumber(l["(300a,0111)"][0]["(300a,0114)"])}catch(m){p.energy=null,console.log(m)}try{p.ssd=this.dicomPullNumber(l["(300a,0111)"][0]["(300a,0130)"])/10}catch(m){p.ssd=null,console.log(m)}try{p.machine=this.dicomPullString(l["(300a,00b2)"])}catch(m){p.machine=null,console.log(m)}this.insertList.push(p)}}Promise.all(o).then(function(){e.dataPersistenceService.saveDicomInsertList(e.insertList)})},DicomComponent.prototype.sendToParameterisation=function(e){var t=this;e.id=0,this.dataPersistenceService.saveCurrentInsertData(e).then(function(){t.router.navigate(["/parameterise"])})},i([a.ViewChild("dicomOutput"),o("design:type",Object)],DicomComponent.prototype,"dicomOutputDir",void 0),i([a.ViewChild("getBlockDataButton"),o("design:type",Object)],DicomComponent.prototype,"getBlockDataButton",void 0),DicomComponent=i([a.Component({selector:"my-dicom",template:n(196),styles:["./dicom.component.css"]}),o("design:paramtypes",[c.TitleService,l.DataPersistenceService,r.Router])],DicomComponent)}();t.DicomComponent=p},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports='<div class="mdl-grid">\n  <div class="mdl-cell mdl-cell--12-col">\n    <h5>Locally reading Dicom patient plan files</h5>\n    <p>\n      Use this component to read a dicom patient plan file and extract the electron insert shape. \n      Export a dicom patient plan file that containts an electron plan from your planning system then open it using the file input box below.\n    </p>\n    <p>\n      For testing purposes you can download a demo dicom file from <a href="webapp/30x16x30_RandomElectronShapes.dcm">here</a>.\n    </p>\n    <p>\n      This has currently been tested with Dicom files exported from Monaco and Pinnacle. \n      If you find this doesn\'t work with Dicom files from your TPS please produce a dummy plan that contains at least two electron beams and one photon beam and email it to me at <a href="mailto:mail@simonbiggs.net">mail@simonbiggs.net</a> so that I can implement importing from that Dicom header structure.\n    </p>\n  </div>\n\n  <div class="mdl-cell mdl-cell--6-col">\n    <input type=\'file\' (change)=\'openFile($event)\'>\n    <div *ngIf="dicomWarning">{{dicomWarning}}</div>\n  </div>\n\n  <div class="mdl-cell mdl-cell--6-col">\n    <button #getBlockDataButton\n      mdl-button mdl-button-type="raised" \n      mdl-colored="primary" \n      mdl-ripple\n      [disabled]="true"\n      (click)="getBlockData()">Get Dicom Insert Data\n    </button>\n\n    \n  </div>\n\n  <div *ngFor="let insertData of insertList" class="mdl-cell mdl-cell--6-col">\n    <mdl-card mdl-shadow="6">\n      <my-send-to-parameterisation\n        [insertData]=insertData>\n      </my-send-to-parameterisation>\n\n      <mdl-card-actions mdl-card-border>\n        <button\n          mdl-button \n          mdl-ripple\n          (click)="sendToParameterisation(insertData)">Send to parameterisation           \n        </button>\n      </mdl-card-actions>\n    </mdl-card>\n    \n\n\n    <!--<p>{{insert | json}}</p>-->\n  </div>\n\n  <div class="mdl-cell mdl-cell--12-col">\n    <h5>Further information</h5>\n    <p>This Dicom loader does not send the Dicom file off to a server. The entire reading of the dicom file is done within javascript.\n    You can confirm this yourself by using the chrome web browser, pressing \'Ctrl + Shift + I\'\n    and then clicking on the network tab. When the file is chosen, then the block data is pulled and sent to parameterisation,\n    at no point in this interaction is there network traffic.</p>\n\n    <p>The only data that will be sent to the server will be on either the paremeterisation tab or the model tab, and this data will\n      just consist of x and y coordinates or widths, lengths, and factors.\n    </p>\n  </div>\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(131),s=function(){function FurtherDetailsComponent(e){this.myTitleService=e}return FurtherDetailsComponent.prototype.ngOnInit=function(){this.myTitleService.setTitle("Further Details")},FurtherDetailsComponent=i([a.Component({selector:"my-further-details",template:n(198)}),o("design:paramtypes",[r.TitleService])],FurtherDetailsComponent)}();t.FurtherDetailsComponent=s},function(e,t){e.exports='<div itemscope itemtype="http://schema.org/SoftwareApplication" class="mdl-grid">\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n    <h3 itemprop="name">Electron insert factor modelling</h3>\n    <p>\n      Tags: <span itemprop="applicationCategory">Medical physics, electron inserts, electron cutouts, Python, Angular2, Bokeh, spline modelling</span><br>\n      Last update: <span itemprop="datePublished" content="2016-10-18">2016-11-05</span><br>\n      Version: <span itemprop="softwareVersion">0.2.1-beta</span><br>\n      Operating systems: <span itemprop="operatingSystem">Windows, Linux, Mac, Android, and iOS</span> <br>\n      Requirements: <span itemprop="requirements">A browser such as <a href="https://www.google.com.au/chrome/browser">Chrome</a> that supports <a href="http://caniuse.com/#feat=indexeddb">IndexedDB</a> browser database</span><br>\n      Developed by: <span itemprop="author" itemscope itemtype="http://schema.org/Person"><a itemprop="name" href="https://github.com/SimonBiggs">Simon Biggs</a></span>\n    </p>\n\n    <h4>Disclaimer</h4>\n    <p>\n      Any use of this web app or any of its code has you accepting the AGPL3+ license which includes no warranty that this code is fit for a particular purpose. Attempts have been made to make the code transparent and it is recommended that an experienced python programmer and physicist who understands the procedure outlined in the paper and the requirements of your centre identifies whether or not this method and code is fit for your use.</p>\n\n    <h4>Use of Google Analytics</h4>\n    <p>\n      To aid in quickly identifying bugs, user experience issues, and documenting app usage the Google Analytics service is employed. \n      This collates and reports page views, button clicks, and demographic information based upon your IP address.\n      For more information on privacy regarding Google Analytics <a href="https://support.google.com/analytics/answer/6004245">click here.</a>\n      If you wish to opt-out of Google Analytics data collection please <a href="https://tools.google.com/dlpage/gaoptout">click here.</a>\n    </p>   \n\n\n    <h4>(Optional) Download this web app and run it locally</h4>\n      The following commands will set up this web app to work on a fresh install of <a href="http://releases.ubuntu.com/16.04/">Ubuntu 16.04</a>:\n      <div style="overflow: auto" id="locally">\n        <pre><code class="bash">sudo apt install git wget\ngit clone --recursive \\\n    https://github.com/SimonBiggs/electroninserts-webapp.git \\\n    --branch gh-pages\ncd electroninserts-webapp\n\nwget \\\n    https://goo.gl/poeKlL \\\n    -O miniconda.sh\nchmod +x miniconda.sh\n./miniconda.sh -p $HOME/miniconda\nexport PATH=$HOME/miniconda/bin:$PATH\n\nconda update conda\nconda env create \\\n    --name electroninserts python=3.5 \\\n    --file ./server/electronfactor-server/conda-requirements.txt\nsource activate electroninserts\n\npython run_webapp_locally.py</code></pre>\n      </div>\n\n      At that point you will be able to access the web app locally at http://localhost:8000.\n      Make sure the model and parameterisation servers point to http://localhost:5000/model, and http://localhost:5000/parameterise respectively.\n      You may also replace "localhost" with your IP to access this webapp from other computers on your network.\n\n  </div>\n  <div class="mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone">\n\n    <h4>Source code</h4>\n    <p>\n      For the purpose of coding transparency and to enable the user to take responsibility for the code themselves any redistribution\n      or derivative works of this web app need to include the source code of any additions made and need to include a way\n      for users to easily access the source code of each of the components used or linked to.\n    </p>\n\n    <h5>Server Code</h5>\n\n    <h6>Base Electron Insert Factor Source Code</h6>\n    <p>\n      The python file which does the shape parameterisation and insert factor modelling which is used by the server is found here:\n      <a href="https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py">\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py</a>\n    </p>\n\n    <h6>Tornado REST API</h6>\n    <p>\n      The Tornado REST API is found here:\n      <a href="https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py">\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py</a>\n    </p>\n\n    <h6>Heroku App code</h6>\n    <p>\n      The code to make the heroku app is found here:\n      <a href="https://github.com/SimonBiggs/electronfactor-server">\n              https://github.com/SimonBiggs/electronfactor-server</a>\n    </p>\n\n    <h5>Web App Code</h5>\n    <p>\n      The source code for this web app is found here:\n      <a itemprop="downloadUrl" href="https://github.com/SimonBiggs/electroninserts-webapp">\n            https://github.com/SimonBiggs/electroninserts-webapp</a>\n    </p>\n\n    <h5>Libraries used</h5>\n    <h6>Bokehjs</h6>\n    <p>\n      The bokehjs library is used for plots. Documentation can be found here:\n      <a href="http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs">\n              http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs</a>\n    </p>\n    <p>\n      Source code can be found here:\n      <a href="https://github.com/bokeh/bokeh/tree/master/bokehjs">\n              https://github.com/bokeh/bokeh/tree/master/bokehjs</a>\n    </p>\n\n    <h6>dcmjs</h6>\n    <p>\n      The dcmjs library is used for reading dicom files within javascript. Website can be found here:\n      <a href="http://dcmjs.org/">\n              http://dcmjs.org/</a>\n    </p>\n    <p>\n      Source code can be found here:\n      <a href="https://github.com/commontk/dcmjs">\n              https://github.com/commontk/dcmjs</a>\n    </p>\n\n    <h6>Angular2</h6>\n    <p>\n      This interface was built using Angular2. Documentation can be found here:\n      <a href="https://angular.io/docs/ts/latest/">\n              https://angular.io/docs/ts/latest/</a>\n    </p>\n    <p>\n      Source code can be found here:\n      <a href="https://github.com/angular/angular">\n              https://github.com/angular/angular</a>\n    </p>\n\n    <h6>Dexiejs</h6>\n    <p>\n      The browser database was interfaced with using Dexiejs. Documentation can be found here:\n      <a href="https://github.com/dfahlander/Dexie.js/wiki/API%20Reference">\n              https://github.com/dfahlander/Dexie.js/wiki/API%20Reference</a>\n    </p>\n    <p>\n      Source code can be found here:\n      <a href="https://github.com/dfahlander/Dexie.js">\n              https://github.com/dfahlander/Dexie.js</a>\n    </p>\n    <h6>Remaining libraries</h6>\n    <p>\n      For all remaining libraries used please see the npm package.json file:\n      <a href="https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json">\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json</a>\n    </p>\n    <p>\n      And the index file for various imports:\n      <a href="https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html">\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html</a>\n    </p>\n  </div>\n\n\n</div>';
},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(41),s=n(21),c=n(69),l=n(29),d=n(129),p=n(131),h=function(){function AppComponent(e,t,n,i,o,a){var s=this;this.electronApiService=e,this.myTitleService=t,this.router=n,this.title=i,n.events.filter(function(e){return e instanceof r.NavigationEnd}).subscribe(function(){s.pageTitle=s.myTitleService.getTitle(),s.title.setTitle(s.myTitleService.getTitle()+" | Electron Insert Factor Modelling")})}return AppComponent.prototype.ngOnInit=function(){var e=sessionStorage.redirect;delete sessionStorage.redirect,e&&e!=location.href&&(history.replaceState(null,null,e),this.router.navigate([e])),this.electronApiService.wakeUpServer(),this.pageTitle=this.myTitleService.getTitle(),this.title.setTitle(this.myTitleService.getTitle()+" | Electron Insert Factor Modelling")},AppComponent=i([a.Component({selector:"my-app",template:n(200)}),o("design:paramtypes",[d.ElectronApiService,p.TitleService,r.Router,s.Title,c.Angulartics2,l.Angulartics2GoogleAnalytics])],AppComponent)}();t.AppComponent=h},function(e,t){e.exports='\n<!--<md-sidenav-layout>\n\n  <md-sidenav #sidenav mode="side" class="app-sidenav">\n    <nav class="mdl-navigation">\n      <a class="mdl-navigation__link" routerLink="/home" routerLinkActive="active" href>Home</a>\n      <a class="mdl-navigation__link" routerLink="/export-import" routerLinkActive="active" href>Export / Import</a>\n      <a class="mdl-navigation__link" routerLink="/specifications" routerLinkActive="active" href>Machine specifications</a>\n      <a class="mdl-navigation__link" routerLink="/dicom" routerLinkActive="active" href>Dicom shape extraction</a>\n      <a class="mdl-navigation__link" routerLink="/parameterise" routerLinkActive="active" href>Parameterise inserts</a>\n      <a class="mdl-navigation__link" routerLink="/model" routerLinkActive="active" href>Model insert factors</a>\n    </nav>\n  </md-sidenav>\n\n  <md-toolbar color="primary">\n    <button class="app-icon-button" (click)="sidenav.toggle()">\n      <i class="material-icons app-toolbar-menu">menu</i>\n    </button>\n\n    {{pageTitle}}\n\n    <span class="app-toolbar-filler"></span>\n    <button md-button (click)="isDarkTheme = !isDarkTheme">TOGGLE DARK THEME</button>\n  </md-toolbar>\n\n  <div class="app-content">\n    <router-outlet></router-outlet>\n  </div>\n\n\n</md-sidenav-layout>-->\n\n\n<mdl-layout mdl-layout-fixed-drawer mdl-layout-fixed-header>\n  <mdl-layout-header>\n    <mdl-layout-header-row>\n      <mdl-layout-title>{{pageTitle}}</mdl-layout-title>\n    </mdl-layout-header-row>\n  </mdl-layout-header>\n  <mdl-layout-drawer>\n    <mdl-layout-title>Electron Factors</mdl-layout-title>\n    <nav class="mdl-navigation">\n      <a class="mdl-navigation__link" routerLink="/home" routerLinkActive="active" href>Home</a>\n      <a class="mdl-navigation__link" routerLink="/details" routerLinkActive="active" href>Further details</a>\n      <a class="mdl-navigation__link" routerLink="/specifications" routerLinkActive="active" href>Machine specifications</a>\n      <a class="mdl-navigation__link" routerLink="/dicom" routerLinkActive="active" href>Dicom shape extraction</a>\n      <a class="mdl-navigation__link" routerLink="/parameterise" routerLinkActive="active" href>Parameterise inserts</a>\n      <a class="mdl-navigation__link" routerLink="/create-model" routerLinkActive="active" href>Create electron model</a>\n      <a class="mdl-navigation__link" routerLink="/use-model" routerLinkActive="active" href>Use electron model</a>\n      <a class="mdl-navigation__link" routerLink="/database" routerLinkActive="active" href>Database management</a>\n    </nav>\n  </mdl-layout-drawer>\n  <mdl-layout-content>\n\n    <router-outlet></router-outlet>\n\n  </mdl-layout-content>\n</mdl-layout>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(128),s=function(){function PlotComponent(){this.insert_x=null,this.insert_y=null,this.circle=null,this.ellipse=null,this.enabled=!0,this.plot_width=300,this.plot_height=300,this.jsonValid=!0,this.plt=Bokeh.Plotting,this.tools="pan,crosshair,wheel_zoom,box_zoom,reset,save",this.xrange=Bokeh.Range1d(-6,6),this.yrange=Bokeh.Range1d(-6,6),this.fig=this.plt.figure({title:"Electron Insert Plot",tools:this.tools,x_range:this.xrange,y_range:this.yrange,plot_width:300,plot_height:300}),this.source=new Bokeh.ColumnDataSource,this.doc=new Bokeh.Document}return PlotComponent.prototype.ngOnChanges=function(){this.jsonValid=!1,this.tempSource={xs:[[0],[0],[0]],ys:[[0],[0],[0]],colour:["navy","firebrick","green"]};var e=[],t=[];this.enabled&&(null!=this.insert_x&&null!=this.insert_y&&(this.tempSource.xs[0]=this.insert_x.concat(this.insert_x[0]),this.tempSource.ys[0]=this.insert_y.concat(this.insert_y[0]),e=e.concat(this.tempSource.xs[0]),t=t.concat(this.tempSource.ys[0])),this.circle&&"x"in this.circle&&"y"in this.circle&&(this.tempSource.xs[1]=this.circle.x,this.tempSource.ys[1]=this.circle.y,e=e.concat(this.tempSource.xs[1]),t=t.concat(this.tempSource.ys[1])),this.ellipse&&"x"in this.ellipse&&"y"in this.ellipse&&(this.tempSource.xs[2]=this.ellipse.x,this.tempSource.ys[2]=this.ellipse.y,e=e.concat(this.tempSource.xs[2]),t=t.concat(this.tempSource.ys[2])));var n=Math.max.apply(Math,e),i=Math.min.apply(Math,e),o=Math.max.apply(Math,t),a=Math.min.apply(Math,t),r=1.1*Math.max(n-i,o-a),s=(n+i)/2+r/2,c=(n+i)/2-r/2,l=(o+a)/2+r/2,d=(o+a)/2-r/2;this.fig.attributes.x_range.start=c,this.fig.attributes.x_range.end=s,this.fig.attributes.y_range.start=d,this.fig.attributes.y_range.end=l,this.source.data=this.tempSource},PlotComponent.prototype.ngAfterViewInit=function(){this.fig.multi_line({field:"xs"},{field:"ys"},{source:this.source,line_width:2,color:{field:"colour"}}),this.doc.add_root(this.fig),Bokeh.embed.add_document_standalone(this.doc,this.bokehplot.nativeElement)},i([a.Input(),o("design:type",Array)],PlotComponent.prototype,"insert_x",void 0),i([a.Input(),o("design:type",Array)],PlotComponent.prototype,"insert_y",void 0),i([a.Input(),o("design:type",r.Coordinates)],PlotComponent.prototype,"circle",void 0),i([a.Input(),o("design:type",r.Coordinates)],PlotComponent.prototype,"ellipse",void 0),i([a.Input(),o("design:type",Boolean)],PlotComponent.prototype,"enabled",void 0),i([a.Input(),o("design:type",Number)],PlotComponent.prototype,"plot_width",void 0),i([a.Input(),o("design:type",Number)],PlotComponent.prototype,"plot_height",void 0),i([a.ViewChild("bokehplot"),o("design:type",Object)],PlotComponent.prototype,"bokehplot",void 0),PlotComponent=i([a.Component({selector:"my-plot",template:n(202)}),o("design:paramtypes",[])],PlotComponent)}();t.PlotComponent=s},function(e,t){e.exports='<div \n    class="bk-root" \n    [style.width]="plot_width + \'px\'" \n    [style.height]="plot_height + \'px\'">\n  <div #bokehplot></div>\n</div>\n'},function(e,t,n){"use strict";var i=this&&this.__extends||function(e,t){function __(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)},o=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=n(3),s=n(204),c=function(e){function BokehCreateModelComponent(){e.apply(this,arguments),this.title="Figure Title",this.plot_width=300,this.plot_height=300,this.scatter_z=[.5],this.enabled=!0}return i(BokehCreateModelComponent,e),BokehCreateModelComponent.prototype.ngOnChanges=function(){this.updateHoverData(),this.runAllUpdates()},BokehCreateModelComponent.prototype.updateHoverData=function(){if(this.pcolour_data.x!=this.pcolour_x){this.pcolour_hover_width=[];for(var e=0,t=this.pcolour_x;e<t.length;e++){var n=t[e];this.pcolour_hover_width.push(n.toFixed(1))}}if(this.pcolour_data.y!=this.pcolour_y){this.pcolour_hover_length=[];for(var i=0,o=this.pcolour_y;i<o.length;i++){var a=o[i];this.pcolour_hover_length.push(a.toFixed(1))}}if(this.pcolour_data.z!=this.pcolour_z){this.pcolour_hover_predicted_factor=[];for(var r=0,s=this.pcolour_z;r<s.length;r++){var c=s[r];this.pcolour_hover_predicted_factor.push((Math.round(1e3*c)/1e3).toFixed(3))}}},BokehCreateModelComponent.prototype.ngAfterViewInit=function(){var e=new Bokeh.HoverTool({tooltips:[["Width"," @hover_width cm"],["Length"," @hover_length cm"],["Predicted Factor"," @hover_predicted_factor"]],renderers:[this.pcolour_renderer]});this.fig.add_tools(e),this.doc.add_root(this.fig),Bokeh.embed.add_document_standalone(this.doc,this.bokehplot.nativeElement)},o([r.Input(),a("design:type",String)],BokehCreateModelComponent.prototype,"title",void 0),o([r.Input(),a("design:type",Number)],BokehCreateModelComponent.prototype,"plot_width",void 0),o([r.Input(),a("design:type",Number)],BokehCreateModelComponent.prototype,"plot_height",void 0),o([r.Input(),a("design:type",Array)],BokehCreateModelComponent.prototype,"scatter_x",void 0),o([r.Input(),a("design:type",Array)],BokehCreateModelComponent.prototype,"scatter_y",void 0),o([r.Input(),a("design:type",Array)],BokehCreateModelComponent.prototype,"scatter_z",void 0),o([r.Input(),a("design:type",Array)],BokehCreateModelComponent.prototype,"pcolour_x",void 0),o([r.Input(),a("design:type",Array)],BokehCreateModelComponent.prototype,"pcolour_y",void 0),o([r.Input(),a("design:type",Array)],BokehCreateModelComponent.prototype,"pcolour_z",void 0),o([r.Input(),a("design:type",Boolean)],BokehCreateModelComponent.prototype,"enabled",void 0),o([r.ViewChild("bokehplot"),a("design:type",Object)],BokehCreateModelComponent.prototype,"bokehplot",void 0),BokehCreateModelComponent=o([r.Component({selector:"my-bokeh-create-model",template:n(202)}),a("design:paramtypes",[])],BokehCreateModelComponent)}(s.BokehPcolour);t.BokehCreateModelComponent=c},function(e,t){"use strict";var n=function(){function BokehPcolour(){this.title="Figure Title",this.plot_width=300,this.plot_height=300,this.scatter_z=[.5],this.enabled=!0,this.pcolour_hover_width=[],this.pcolour_hover_length=[],this.pcolour_hover_predicted_factor=[],this.scatter_hover_width=[],this.scatter_hover_length=[],this.scatter_hover_area=[],this.scatter_hover_measured_factor=[],this.scatter_hover_predicted_factor=[],this.plt=Bokeh.Plotting,this.tools="pan,crosshair,wheel_zoom,box_zoom,reset,save",this.old_scatter_z=[],this.old_pcolour_z=[],this.scatter_c=[],this.pcolour_c=[],this.scatter_data={x:[],y:[],z:[],hover_width:[],hover_length:[],hover_area:[],hover_measured_factor:[],hover_predicted_factor:[],c:[]},this.scatter_source=new Bokeh.ColumnDataSource({data:this.scatter_data}),this.pcolour_data={x:[],y:[],z:[],hover_width:[],hover_length:[],hover_predicted_factor:[],c:[]},this.pcolour_source=new Bokeh.ColumnDataSource({data:this.pcolour_data}),this.doc=new Bokeh.Document,this.viridis_hex=["#440154","#440256","#450457","#450559","#46075a","#46085c","#460a5d","#460b5e","#470d60","#470e61","#471063","#471164","#471365","#481467","#481668","#481769","#48186a","#481a6c","#481b6d","#481c6e","#481d6f","#481f70","#482071","#482173","#482374","#482475","#482576","#482677","#482878","#482979","#472a7a","#472c7a","#472d7b","#472e7c","#472f7d","#46307e","#46327e","#46337f","#463480","#453581","#453781","#453882","#443983","#443a83","#443b84","#433d84","#433e85","#423f85","#424086","#424186","#414287","#414487","#404588","#404688","#3f4788","#3f4889","#3e4989","#3e4a89","#3e4c8a","#3d4d8a","#3d4e8a","#3c4f8a","#3c508b","#3b518b","#3b528b","#3a538b","#3a548c","#39558c","#39568c","#38588c","#38598c","#375a8c","#375b8d","#365c8d","#365d8d","#355e8d","#355f8d","#34608d","#34618d","#33628d","#33638d","#32648e","#32658e","#31668e","#31678e","#31688e","#30698e","#306a8e","#2f6b8e","#2f6c8e","#2e6d8e","#2e6e8e","#2e6f8e","#2d708e","#2d718e","#2c718e","#2c728e","#2c738e","#2b748e","#2b758e","#2a768e","#2a778e","#2a788e","#29798e","#297a8e","#297b8e","#287c8e","#287d8e","#277e8e","#277f8e","#27808e","#26818e","#26828e","#26828e","#25838e","#25848e","#25858e","#24868e","#24878e","#23888e","#23898e","#238a8d","#228b8d","#228c8d","#228d8d","#218e8d","#218f8d","#21908d","#21918c","#20928c","#20928c","#20938c","#1f948c","#1f958b","#1f968b","#1f978b","#1f988b","#1f998a","#1f9a8a","#1e9b8a","#1e9c89","#1e9d89","#1f9e89","#1f9f88","#1fa088","#1fa188","#1fa187","#1fa287","#20a386","#20a486","#21a585","#21a685","#22a785","#22a884","#23a983","#24aa83","#25ab82","#25ac82","#26ad81","#27ad81","#28ae80","#29af7f","#2ab07f","#2cb17e","#2db27d","#2eb37c","#2fb47c","#31b57b","#32b67a","#34b679","#35b779","#37b878","#38b977","#3aba76","#3bbb75","#3dbc74","#3fbc73","#40bd72","#42be71","#44bf70","#46c06f","#48c16e","#4ac16d","#4cc26c","#4ec36b","#50c46a","#52c569","#54c568","#56c667","#58c765","#5ac864","#5cc863","#5ec962","#60ca60","#63cb5f","#65cb5e","#67cc5c","#69cd5b","#6ccd5a","#6ece58","#70cf57","#73d056","#75d054","#77d153","#7ad151","#7cd250","#7fd34e","#81d34d","#84d44b","#86d549","#89d548","#8bd646","#8ed645","#90d743","#93d741","#95d840","#98d83e","#9bd93c","#9dd93b","#a0da39","#a2da37","#a5db36","#a8db34","#aadc32","#addc30","#b0dd2f","#b2dd2d","#b5de2b","#b8de29","#bade28","#bddf26","#c0df25","#c2df23","#c5e021","#c8e020","#cae11f","#cde11d","#d0e11c","#d2e21b","#d5e21a","#d8e219","#dae319","#dde318","#dfe318","#e2e418","#e5e419","#e7e419","#eae51a","#ece51b","#efe51c","#f1e51d","#f4e61e","#f6e620","#f8e621","#fbe723","#fde725"],this.colour_mapper=new Bokeh.LinearColorMapper({palette:this.viridis_hex}),this.ticker=new Bokeh.BasicTicker,this.colour_bar=new Bokeh.ColorBar({ticker:this.ticker,label_standoff:7,location:[-6,0]})}return BokehPcolour.prototype.ngOnInit=function(){this.figureInitialise()},BokehPcolour.prototype.figureInitialise=function(){this.fig=this.plt.figure({title:this.title,tools:this.tools,plot_width:this.plot_width,plot_height:this.plot_height}),this.fig.xaxis.axis_label="Width (cm @ iso)",this.fig.yaxis.axis_label="Length (cm @ iso)",this.colour_bar.title="Insert Factor",this.pcolour_renderer=this.fig.rect({field:"x"},{field:"y"},.1,.1,{source:this.pcolour_source,color:{field:"c"}}),this.scatter_renderer=this.fig.circle({field:"x"},{field:"y"},{source:this.scatter_source,size:15,line_color:"black",fill_color:{field:"c"},line_width:2}),this.fig.add_layout(this.colour_bar,"left")},BokehPcolour.prototype.runAllUpdates=function(){this.updateScatterData(),this.updatePcolourData(),this.updateScatterColour(),this.updateSourceData(),this.updateFigureDimensions()},BokehPcolour.prototype.updateScatterData=function(){this.scatter_data={x:this.scatter_x,y:this.scatter_y,z:this.scatter_z,hover_width:this.scatter_hover_width,hover_length:this.scatter_hover_length,hover_area:this.scatter_hover_area,hover_measured_factor:this.scatter_hover_measured_factor,hover_predicted_factor:this.scatter_hover_predicted_factor,c:this.scatter_c}},BokehPcolour.prototype.updatePcolourData=function(){this.pcolour_data={x:this.pcolour_x,y:this.pcolour_y,z:this.pcolour_z,hover_width:this.pcolour_hover_width,hover_length:this.pcolour_hover_length,hover_predicted_factor:this.pcolour_hover_predicted_factor,c:this.pcolour_c}},BokehPcolour.prototype.updateScatterColour=function(){if(this.old_scatter_z!=this.scatter_z||this.old_pcolour_z!=this.pcolour_z){var e=this.scatter_z.concat(this.pcolour_z);if(this.vmin=Math.min.apply(Math,e),this.vmax=Math.max.apply(Math,e),this.colour_mapper.low=this.vmin,this.colour_mapper.high=this.vmax,this.colour_bar.color_mapper=this.colour_mapper,this.scatter_c=this.colour_mapper.v_compute(this.scatter_z),this.pcolour_c=this.colour_mapper.v_compute(this.pcolour_z),this.scatter_data.c=this.scatter_c,this.pcolour_data.c=this.pcolour_c,this.old_scatter_z=this.scatter_z,this.old_pcolour_z=this.pcolour_z,this.scatter_data.c.length<this.scatter_data.x.length)for(var t=this.scatter_data.x.length-this.scatter_data.c.length,n=0;n<t;n++)this.scatter_data.c.push("#ffffff")}},BokehPcolour.prototype.updateSourceData=function(){this.scatter_source.data!=this.scatter_data&&(this.scatter_source.data=this.scatter_data),this.pcolour_source.data!=this.pcolour_data&&(this.pcolour_source.data=this.pcolour_data)},BokehPcolour.prototype.updateFigureDimensions=function(){null!=this.fig&&(this.fig.width!=this.plot_width&&(this.plot_width<200?this.fig.width=200:this.fig.width=this.plot_width),this.fig.height!=this.plot_height&&(this.fig.height=this.plot_height))},BokehPcolour}();t.BokehPcolour=n},function(e,t,n){"use strict";var i=this&&this.__extends||function(e,t){function __(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)},o=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},a=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},r=n(3),s=n(204),c=function(e){function BokehUseModelComponent(){e.apply(this,arguments),this.title="Figure Title",this.plot_width=300,this.plot_height=300,this.scatter_z=[.5],this.enabled=!0,this.predicted_factor=[],this.area=[],this.old_area=[],this.old_predicted_factor=[]}return i(BokehUseModelComponent,e),BokehUseModelComponent.prototype.ngOnChanges=function(){this.updateHoverData(),this.runAllUpdates()},BokehUseModelComponent.prototype.updateHoverData=function(){if(this.scatter_data.x!=this.scatter_x){this.scatter_hover_width=[];for(var e=0,t=this.scatter_x;e<t.length;e++){var n=t[e];this.scatter_hover_width.push((Math.round(10*n)/10).toFixed(1))}}if(this.scatter_data.y!=this.scatter_y){this.scatter_hover_length=[];for(var i=0,o=this.scatter_y;i<o.length;i++){var a=o[i];this.scatter_hover_length.push((Math.round(10*a)/10).toFixed(1))}}if(this.scatter_data.z!=this.scatter_z){this.scatter_hover_measured_factor=[];for(var r=0,s=this.scatter_z;r<s.length;r++){var c=s[r];this.scatter_hover_measured_factor.push((Math.round(1e3*c)/1e3).toFixed(3))}if(this.scatter_hover_measured_factor.length<this.scatter_x.length)for(var l=this.scatter_x.length-this.scatter_hover_measured_factor.length,d=0;d<l;d++)this.scatter_hover_measured_factor.push("Not given")}if(this.old_predicted_factor!=this.predicted_factor){this.scatter_hover_predicted_factor=[];for(var p=0,h=this.predicted_factor;p<h.length;p++){var c=h[p];this.scatter_hover_predicted_factor.push((Math.round(1e3*c)/1e3).toFixed(3))}this.old_predicted_factor=this.predicted_factor}if(this.old_area!=this.area){this.scatter_hover_area=[];for(var m=0,u=this.area;m<u.length;m++){var f=u[m];this.scatter_hover_area.push((Math.round(10*f)/10).toFixed(1))}this.old_area=this.area}},BokehUseModelComponent.prototype.ngAfterViewInit=function(){var e=new Bokeh.HoverTool({tooltips:[["Width"," @hover_width cm"],["Length"," @hover_length cm"],["Area"," @hover_area cm^2"],["Measured factor"," @hover_measured_factor"],["Predicted factor"," @hover_predicted_factor"]],renderers:[this.scatter_renderer]});this.fig.add_tools(e),this.doc.add_root(this.fig),Bokeh.embed.add_document_standalone(this.doc,this.bokehplot.nativeElement)},o([r.Input(),a("design:type",String)],BokehUseModelComponent.prototype,"title",void 0),o([r.Input(),a("design:type",Number)],BokehUseModelComponent.prototype,"plot_width",void 0),o([r.Input(),a("design:type",Number)],BokehUseModelComponent.prototype,"plot_height",void 0),o([r.Input(),a("design:type",Array)],BokehUseModelComponent.prototype,"scatter_x",void 0),o([r.Input(),a("design:type",Array)],BokehUseModelComponent.prototype,"scatter_y",void 0),o([r.Input(),a("design:type",Array)],BokehUseModelComponent.prototype,"scatter_z",void 0),o([r.Input(),a("design:type",Array)],BokehUseModelComponent.prototype,"pcolour_x",void 0),o([r.Input(),a("design:type",Array)],BokehUseModelComponent.prototype,"pcolour_y",void 0),o([r.Input(),a("design:type",Array)],BokehUseModelComponent.prototype,"pcolour_z",void 0),o([r.Input(),a("design:type",Boolean)],BokehUseModelComponent.prototype,"enabled",void 0),o([r.Input(),a("design:type",Array)],BokehUseModelComponent.prototype,"predicted_factor",void 0),o([r.Input(),a("design:type",Array)],BokehUseModelComponent.prototype,"area",void 0),o([r.ViewChild("bokehplot"),a("design:type",Object)],BokehUseModelComponent.prototype,"bokehplot",void 0),BokehUseModelComponent=o([r.Component({selector:"my-bokeh-use-model",template:n(202)}),a("design:paramtypes",[])],BokehUseModelComponent)}(s.BokehPcolour);t.BokehUseModelComponent=c},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(132),s=n(139),c=function(){function ChooseSpecificationsComponent(e,t){this.dataPersistenceService=e,this.machineSpecificationService=t,this.settingsUpdated=new a.EventEmitter}return ChooseSpecificationsComponent.prototype.ngOnInit=function(){var e=this;console.log("choose-specifications.component ngOnInit"),this.machineSpecificationService.loadData().then(function(){e.settingsUpdated.emit(e.machineSpecificationService.currentSettings)})},ChooseSpecificationsComponent.prototype.updateMachineID=function(e){console.log("choose-specifications.component updateMachineID"),this.machineSpecificationService.currentSettings.machine=e,this.machineSpecificationService.updateCurrentSpecification(),this.machineSpecificationService.refreshCurrentSettings(),this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings),this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)},ChooseSpecificationsComponent.prototype.updateEnergy=function(e){console.log("choose-specifications.component updateEnergy"),this.machineSpecificationService.currentSettings.energy=Number(e),this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings),this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)},ChooseSpecificationsComponent.prototype.updateApplicator=function(e){console.log("choose-specifications.component updateApplicator"),this.machineSpecificationService.currentSettings.applicator=e,this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings),this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)},ChooseSpecificationsComponent.prototype.updateSSD=function(e){console.log("choose-specifications.component updateSSD"),this.machineSpecificationService.currentSettings.ssd=Number(e),this.dataPersistenceService.saveCurrentSettings(this.machineSpecificationService.currentSettings),this.settingsUpdated.emit(this.machineSpecificationService.currentSettings)},i([a.Output(),o("design:type",Object)],ChooseSpecificationsComponent.prototype,"settingsUpdated",void 0),ChooseSpecificationsComponent=i([a.Component({selector:"my-choose-specifications",template:n(207)}),o("design:paramtypes",[r.DataPersistenceService,s.MachineSpecificationsService])],ChooseSpecificationsComponent)}();t.ChooseSpecificationsComponent=c},function(e,t){e.exports='<div class="mdl-grid" *ngIf="machineSpecificationService != null && machineSpecificationService.currentSettings != null && machineSpecificationService.currentSpecification != null">\n  <div \n      *ngIf="machineSpecificationService.machineList.length > 0" \n      class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\n    <h6>Machine ID</h6>\n    <select\n        [(ngModel)]="machineSpecificationService.currentSettings.machine"\n        (input)="updateMachineID($event.target.value)">\n      <option *ngFor="let machine of machineSpecificationService.machineList">{{machine}}</option>\n    </select>\n  </div>\n\n  <div \n      *ngIf="machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null" \n      class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\n    <h6>Energy</h6>\n    <div *ngIf="machineSpecificationService.currentSpecification.energy != null">\n      <select\n          [(ngModel)]="machineSpecificationService.currentSettings.energy"\n          (input)="updateEnergy($event.target.value)"\n          *ngIf="machineSpecificationService.currentSpecification.energy.length > 0">\n        <option *ngFor="let energy of machineSpecificationService.currentSpecification.energy" value="{{energy}}">{{energy}} MeV</option>\n      </select>\n    </div>\n    <p *ngIf="machineSpecificationService.currentSpecification.energy.length == 0">\n      This machine doesn\'t have any energies defined. Please \n      <a routerLink="/specifications" routerLinkActive="active">\n        define at least one energy.\n      </a>\n    </p>\n  </div>\n\n  <div \n      *ngIf="machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null" \n      class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\n    <h6>Applicator</h6>\n    <div *ngIf="machineSpecificationService.currentSpecification.applicator != null">\n      <select \n          [(ngModel)]="machineSpecificationService.currentSettings.applicator"\n          (input)="updateApplicator($event.target.value)"\n          *ngIf="machineSpecificationService.currentSpecification.applicator.length > 0">\n        <option *ngFor="let applicator of machineSpecificationService.currentSpecification.applicator">{{applicator}}</option>\n      </select>\n    </div>\n    <p *ngIf="machineSpecificationService.currentSpecification.applicator.length == 0">\n      This machine doesn\'t have any applicators defined. Please \n      <a routerLink="/specifications" routerLinkActive="active">\n        define at least one applicator.\n      </a>\n    </p>\n  </div>\n\n  <div \n      *ngIf="machineSpecificationService.machineList.length > 0 && machineSpecificationService.currentSettings.machine != null && machineSpecificationService.currentSpecification != null" \n      class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\n    <h6>SSD</h6>\n    <div *ngIf="machineSpecificationService.currentSpecification.ssd != null">\n      <select  \n          [(ngModel)]="machineSpecificationService.currentSettings.ssd"\n          (input)="updateSSD($event.target.value)"\n          *ngIf="machineSpecificationService.currentSpecification.ssd.length > 0">\n        <option *ngFor="let ssd of machineSpecificationService.currentSpecification.ssd">{{ssd}}</option>\n      </select>\n    </div>\n    <p *ngIf="machineSpecificationService.currentSpecification.ssd.length == 0">\n      This machine doesn\'t have an ssd defined. Please \n      <a routerLink="/specifications" routerLinkActive="active">\n        define at least one ssd.\n      </a>\n    </p>\n  </div>\n</div>\n  \n<div class="mdl-grid" *ngIf="machineSpecificationService == null || machineSpecificationService.currentSettings == null || machineSpecificationService.currentSpecification == null">\n  <div class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">\n    <h6>Machine ID</h6>\n    <select></select>\n  </div>\n</div>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(209),s=n(22),c=function(){function JsonEditComponent(){this.buttonText="Button",this.inputUpdated=new a.EventEmitter,this.validationCheck=function(e){},this.useMyJsonPipe=!1,this.lines=10,this.jsonValid=!0}return JsonEditComponent.prototype.onInput=function(e){this.parseAndCheckJSON(e)},JsonEditComponent.prototype.ngOnInit=function(){var e="";e=this.useMyJsonPipe?(new r.MyJsonPipe).transform(this.input):(new s.JsonPipe).transform(this.input),this.lines=e.split(/\r\n|\r|\n/).length,this.editedInput=this.input},JsonEditComponent.prototype.updateInput=function(){this.input=this.editedInput,this.inputUpdated.emit(this.input)},JsonEditComponent.prototype.parseAndCheckJSON=function(e){this.jsonValid;this.jsonValid=!1;try{var t=JSON.parse(e);this.validationCheck(t),this.editedInput=t,this.jsonValid=!0}catch(n){this.jsonErrorMessage="Error in JSON input. "+n}},i([a.Input(),o("design:type",Object)],JsonEditComponent.prototype,"input",void 0),i([a.Input(),o("design:type",String)],JsonEditComponent.prototype,"buttonText",void 0),i([a.Output(),o("design:type",Object)],JsonEditComponent.prototype,"inputUpdated",void 0),i([a.Input(),o("design:type",Function)],JsonEditComponent.prototype,"validationCheck",void 0),i([a.Input(),o("design:type",Boolean)],JsonEditComponent.prototype,"useMyJsonPipe",void 0),i([a.ViewChild("jsonInput"),o("design:type",Object)],JsonEditComponent.prototype,"jsonInputDir",void 0),JsonEditComponent=i([a.Component({selector:"my-json-edit",template:n(210)}),o("design:paramtypes",[])],JsonEditComponent)}();t.JsonEditComponent=c},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=function(){function MyJsonPipe(){}return MyJsonPipe.prototype.transform=function(e){var t=JSON.stringify(e,null,4);return t=t.replace(/(-?\d+(\.\d+)?),\n\s*/g,"$1, "),t=t.replace(/null,\n\s*/g,"null, ")},MyJsonPipe=i([a.Pipe({name:"myJson",pure:!1}),o("design:paramtypes",[])],MyJsonPipe)}();t.MyJsonPipe=r},function(e,t){e.exports='<button\n  mdl-button mdl-button-type="raised" \n  mdl-colored="primary" \n  mdl-ripple\n  [disabled]="!jsonValid || input==editedInput"\n  (click)="updateInput()">{{buttonText}} \n</button>\n<div *ngIf="!jsonValid">\n  {{jsonErrorMessage}}\n</div>\n<mdl-textfield *ngIf="!useMyJsonPipe" #jsonInput\n  [value]="input | json"\n  (input)="onInput($event.target.value)"\n  [rows]="20" \n  style="width:100%">\n</mdl-textfield>\n<mdl-textfield *ngIf="useMyJsonPipe" #jsonInput\n  [value]="input | myJson"\n  (input)="onInput($event.target.value)"\n  [rows]="20" \n  style="width:100%">\n</mdl-textfield>';
},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(128),s=n(71),c=function(){function SendToParameterisationComponent(){this.tableData=[{machine:null,applicator:null,energy:null,ssd:null}],this.tableModel=new s.MdlDefaultTableModel([{key:"machine",name:"Machine",sortable:!0,numeric:!1},{key:"applicator",name:"App",sortable:!0,numeric:!1},{key:"energy",name:"Eng",sortable:!0,numeric:!0},{key:"ssd",name:"SSD",sortable:!0,numeric:!0}])}return SendToParameterisationComponent.prototype.ngOnInit=function(){this.tableData[0].machine=this.insertData.machine,this.tableData[0].applicator=this.insertData.applicator,this.tableData[0].energy=this.insertData.energy,this.tableData[0].ssd=this.insertData.ssd,this.tableModel.addAll(this.tableData)},i([a.Input(),o("design:type",r.InsertData)],SendToParameterisationComponent.prototype,"insertData",void 0),SendToParameterisationComponent=i([a.Component({selector:"my-send-to-parameterisation",template:n(212)}),o("design:paramtypes",[])],SendToParameterisationComponent)}();t.SendToParameterisationComponent=c},function(e,t){e.exports='<div class="mdl-grid">\n  <div class="mdl-cell mdl-cell--12-col">\n    <my-plot \n      [insert_x]="insertData.parameterisation.insert.x"\n      [insert_y]="insertData.parameterisation.insert.y"\n      [circle]="insertData.parameterisation.circle"\n      [ellipse]="insertData.parameterisation.ellipse">\n    </my-plot>\n  </div>\n  <div class="mdl-cell mdl-cell--12-col">\n    <mdl-table mdl-shadow="2"\n      [table-model]="tableModel">\n    </mdl-table>\n  </div>\n</div>\n\n'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(71),s=function(){function WidthLengthTableComponent(){this.tableData=[{width:null,length:null}],this.tableModel=new r.MdlDefaultTableModel([{key:"width",name:"Width",sortable:!0,numeric:!0},{key:"length",name:"Length",sortable:!0,numeric:!0}])}return WidthLengthTableComponent.prototype.ngOnChanges=function(){this.enabled?(this.tableData[0].width=this.width,this.tableData[0].length=this.length):(this.tableData[0].width=null,this.tableData[0].length=null)},WidthLengthTableComponent.prototype.ngOnInit=function(){this.tableModel.addAll(this.tableData)},i([a.Input(),o("design:type",Number)],WidthLengthTableComponent.prototype,"width",void 0),i([a.Input(),o("design:type",Number)],WidthLengthTableComponent.prototype,"length",void 0),i([a.Input(),o("design:type",Boolean)],WidthLengthTableComponent.prototype,"enabled",void 0),WidthLengthTableComponent=i([a.Component({selector:"my-width-length-table",template:n(214)}),o("design:paramtypes",[])],WidthLengthTableComponent)}();t.WidthLengthTableComponent=s},function(e,t){e.exports='<mdl-table mdl-shadow="2"\n  [table-model]="tableModel">\n</mdl-table>'},function(e,t,n){"use strict";var i=this&&this.__decorate||function(e,t,n,i){var o,a=arguments.length,r=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(r=(a<3?o(r):a>3?o(t,n,r):o(t,n))||r);return a>3&&r&&Object.defineProperty(t,n,r),r},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=n(3),r=n(216),s=function(){function LocalStorageService(){this.isSupported=r.LocalStorage.isSupported,this.hasItem=r.LocalStorage.hasItem,this.getRemainingSpace=r.LocalStorage.getRemainingSpace,this.getMaximumSpace=r.LocalStorage.getMaximumSpace,this.getUsedSpace=r.LocalStorage.getUsedSpace,this.getItemUsedSpace=r.LocalStorage.getItemUsedSpace,this.getBackup=r.LocalStorage.getBackup,this.applyBackup=r.LocalStorage.applyBackup,this.consoleInfo=r.LocalStorage.consoleInfo}return LocalStorageService=i([a.Injectable(),o("design:paramtypes",[])],LocalStorageService)}();t.LocalStorageService=s},function(e,t){"use strict";var n;!function(e){function hasItem(e){return null!==localStorage.getItem(e)}function getRemainingSpace(){for(var e=localStorage.getItem(""),t=!0,n="1",i="",o="";;)try{o=i+n,localStorage.setItem("",o),i=o,t&&(n+=n)}catch(a){if(n.length<2)break;t=!1,n=n.substr(n.length/2)}return null===e?localStorage.removeItem(""):localStorage.setItem("",e),i.length}function getMaximumSpace(){var e=getBackup();localStorage.clear();var t=getRemainingSpace();return applyBackup(e),t}function getUsedSpace(){for(var e=0,t=0;t<localStorage.length;++t){var n=localStorage.key(t),i=localStorage.getItem(n);e+=n.length+i.length}return e}function getItemUsedSpace(e){var t=localStorage.getItem(e);return null===t?NaN:e.length+t.length}function getBackup(){for(var e={},t=0;t<localStorage.length;++t){var n=localStorage.key(t),i=localStorage.getItem(n);e[n]=i}return e}function applyBackup(e,t,n){void 0===t&&(t=!0),void 0===n&&(n=!0),1==t&&localStorage.clear();for(var i in e)if(n!==!1||void 0===e[i]){var o=e[i];localStorage.setItem(i,o)}}function consoleInfo(e){void 0===e&&(e=!1);for(var t=0,n=0,i=0;i<localStorage.length;++i){var o=localStorage.key(i),a=localStorage.getItem(o);console.log(t,o,a),n+=o.length+a.length,t++}if(console.log("Total entries:",t),console.log("Total size:",n),e===!0){var r=getMaximumSpace();console.log("Total size:",r)}}e.isSupported=function(){try{var e=localStorage.getItem("");return localStorage.removeItem(""),localStorage.setItem("",e),null===e?localStorage.removeItem(""):localStorage.setItem("",e),!0}catch(t){return!1}}(),e.hasItem=hasItem,e.getRemainingSpace=getRemainingSpace,e.getMaximumSpace=getMaximumSpace,e.getUsedSpace=getUsedSpace,e.getItemUsedSpace=getItemUsedSpace,e.getBackup=getBackup,e.applyBackup=applyBackup,e.consoleInfo=consoleInfo}(n=t.LocalStorage||(t.LocalStorage={}))}]);
//# sourceMappingURL=app.3fe4a0fa4cdf81871daa.js.map