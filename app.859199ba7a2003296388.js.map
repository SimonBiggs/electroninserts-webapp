{"version":3,"sources":["webpack:///app.859199ba7a2003296388.js","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/parameterise.component.ts","webpack:///./src/app/electron-api.service.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/demo-data.ts","webpack:///./src/app/title.service.ts","webpack:///./src/app/model-data.ts","webpack:///./src/app/parameterise.component.html","webpack:///./src/app/page-not-found.component.ts","webpack:///./src/app/page-not-found.component.html","webpack:///./src/app/home.component.ts","webpack:///./src/app/home.component.html","webpack:///./src/app/create-model.component.ts","webpack:///./src/app/create-model.component.html","webpack:///./src/app/use-model.component.ts","webpack:///./src/app/sanitise-validation.ts","webpack:///./src/app/use-model.component.html","webpack:///./src/app/storage-management.component.ts","webpack:///./src/app/local-storage.service.ts","webpack:///./src/app/localstoragemodule.ts","webpack:///./src/app/storage-management.component.html","webpack:///./src/app/specifications.component.ts","webpack:///./src/app/specifications.component.html","webpack:///./src/app/dicom.component.ts","webpack:///./src/app/dicom.component.html","webpack:///./~/angulartics2/src/providers/angulartics2-google-analytics.js","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/plot.component.ts","webpack:///./src/app/coordinates.ts","webpack:///./src/app/bokeh-plot.html","webpack:///./src/app/width-length-table.component.ts","webpack:///./src/app/width-length-table.component.html","webpack:///./src/app/json-input.component.ts","webpack:///./src/app/my-json.pipe.ts","webpack:///./src/app/json-input.component.html","webpack:///./src/app/json-edit.component.ts","webpack:///./src/app/json-edit.component.html","webpack:///./src/app/send-to-parameterisation.component.ts","webpack:///./src/app/send-to-parameterisation.component.html","webpack:///./src/app/bokeh-create-model.component.ts","webpack:///./src/app/bokeh-pcolour.ts","webpack:///./src/app/bokeh-use-model.component.ts","webpack:///./src/app/choose-specifications.component.ts","webpack:///./src/app/choose-specifications.component.html"],"names":["webpackJsonp","module","exports","__webpack_require__","platform_browser_dynamic_1","core_1","app_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule","AppModule","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","platform_browser_1","forms_1","http_1","platform_browser_2","app_routing_1","angulartics2_google_analytics_1","angulartics2_1","angular2_mdl_1","app_component_1","plot_component_1","parameterise_component_1","page_not_found_component_1","width_length_table_component_1","json_input_component_1","home_component_1","create_model_component_1","use_model_component_1","storage_management_component_1","specifications_component_1","dicom_component_1","json_edit_component_1","send_to_parameterisation_component_1","bokeh_create_model_component_1","bokeh_use_model_component_1","choose_specifications_component_1","my_json_pipe_1","model_data_1","electron_api_service_1","data_service_1","title_service_1","local_storage_service_1","NgModule","imports","BrowserModule","FormsModule","HttpModule","MdlModule","routing","Angulartics2Module","forRoot","declarations","AppComponent","ParameteriseComponent","PlotComponent","PageNotFoundComponent","WidthLengthTableComponent","JsonInputComponent","MyJsonPipe","HomeComponent","CreateModelComponent","UseModelComponent","StorageManagementComponent","SpecificationsComponent","DicomComponent","SendToParameterisationComponent","JsonEditComponent","BokehCreateModelComponent","BokehUseModelComponent","ChooseSpecificationsComponent","providers","ElectronApiService","DataService","TitleService","Title","LocalStorageService","Angulartics2GoogleAnalytics","ModelData","ModelMeasurement","ModelGrid","Predictions","bootstrap","router_1","appRoutes","path","component","data","title","redirectTo","appRoutingProviders","RouterModule","demo_data_1","electronApiService","dataService","myTitleService","router","modelData","parameterisation","insert","x","y","width","circle","ellipse","jsonValid","xInputValid","yInputValid","equalLengths","serverResponseValid","dataInFlight","submitDisabled","refreshJsonInput","insertData","machine","energy","applicator","ssd","factor","machineExists","machineSettingsExist","modelExists","ableToAddDataToModel","dataAlreadyExistsOnModel","serverError","prototype","ngOnInit","getData","setTitle","parameteriseURL","localStorage","getItem","machineSpecifications","JSON","parse","checkMachineSettings","checkIfCanBeSentToModel","updateTextAreaValues","createKey","stringify","String","Number","addMeasuredFactor","measurement","model","push","setItem","predictFactor","currentSettings","loadModelData","predictions","unshift","measuredFactor","saveModelData","navigate","textAreaX","replace","textAreaY","checkIfEqualLengths","saveInsertData","validateInput","input","test","inputTextAreaX","xInput","eval","insertUpdated","err","console","log","inputTextAreaY","yInput","localStorageInsertDataString","loadDemoData","demoData","DEMO_PARAMETERISE_INPUT","sleep","time","Promise","resolve","setTimeout","recursiveServerSubmit","_this","sendToServer","then","parameterisationResult","complete","checkSubmitButton","indexOf","R50","specifications","insertDataChange","onSubmit","insertDataFromLocalStorage","localStorageInsertData","parameterisationFromLocalStorage","localStorageParameterisationString","localStorageParameterisation","onJsonStatusChange","jsonStatus","parameterisationServerChange","serverUrl","Component","selector","template","Router","http","wakeUpURL","wakeUpServer","get","toPromise","URL","post","res","json","handleError","error","reject","message","Injectable","Http","getParameterisationData","getTitle","__extends","b","__","constructor","p","hasOwnProperty","create","Base","reset","_i","_a","propNames","propName","fillFromObject","object","updateOldKeyNames","newKey","oldKey","keyConversions","_super","apply","predictedFactor","area","_b","_c","createLocalStorageKey","localStorageKey","parsedData","ngZone","textboxInput","textboxLabels","textboxValid","lengthSmallerThanWidth","plot_width","window","onresize","e","run","updatePlotWidth","modelURL","plotContainer","nativeElement","clientWidth","currentMachineSettingsUpdated","newSettings","loadMeasuredData","checkLengthSmallerThanWidth","updateTextboxInput","saveModel","onTextboxChange","newInput","basicServerSubmit","modelResult","model_width","model_length","model_factor","modelServerChange","newModelURL","defaultServer","settingsPicker","ViewChild","NgZone","sanitise_validation_1","modelLookup","predictionDifference","lastEdit","updateModelLookup","updatePredictedFactors","lookupFactor","Math","round","amount","min","updatePredictionDifference","difference","convertLengthToArea","PI","convertAreaToLength","updateAreaFromLength","updateLengthFromArea","updateAllTextboxInputs","myLocalStorageService","testLocalStorage","isSupported","usedLocalStorageSpace","getUsedSpace","testRemainingStorage","remainingLocalStorageSpace","getRemainingSpace","localstoragemodule_1","LocalStorage","hasItem","getMaximumSpace","getItemUsedSpace","getBackup","applyBackup","consoleInfo","itemBackup","increase","totalData","trytotalData","substr","removeItem","backup","clear","max","sum","value","NaN","fClear","fOverwriteExisting","undefined","fShowMaximumSize","size","maxSize","newMachineIDValid","newModelValid","newMachineValid","edittingMachine","newEnergyValid","newR50Valid","newEnergySetValid","edittingEnergy","newApplicatorValid","edittingApplicator","newSSDValid","edittingSSD","changeSpecifications","newSpecifications","machines","keys","sort","currentMachine","updateSpecifications","changeCurrentMachine","updateCurrentMachine","checkNewMachineIDInput","newMachineID","checkNewMachineValid","checkNewModelInput","newModel","addMachineID","checkNewEnergyInput","newEnergy","isNaN","checkNewEnergySetValid","checkNewR50Input","newR50","addEnergy","checkNewApplicatorInput","newApplicator","toLowerCase","addApplicator","checkNewSSDInput","newSSD","addSSD","editMachine","finishMachineEdit","idInput","modelInput","deleteMachine","index","splice","js_yaml_1","dicomExitCode","reader","FileReader","onload","onceFileIsLoaded","insertListString","insertList","Module","print","sendDicomDumpToGlobalVariable","updateDicomWarning","status","getBlockDataButton","disabled","dicomWarning","content","Int8Array","result","fileName","FS","isFile","unlink","writeFile","encoding","exit_orig","exit","callMain","openFile","event","files","file","readAsArrayBuffer","convertDicomDumpToDict","dump","yamlConvert","safeLoad","convertBlockDataToCoords","blockData","listString","exec","toString","num","parseFloat","toFixed","dicomPullNumber","dicomPullString","getBlockData","dicomPrint","dicomDict","beamSequence","beamSequence_1","beam","temp","coordinates","sendToParameterisation","styles","angulartics2","settings","pageTracking","trackRelativePath","ga","additionalAccountNames","userId","pageTrack","subscribe","eventTrack","action","properties","exceptionTrack","setUsername","setUserProperties","userTimings","_gaq","accountName","category","parsed","parseInt","eventOptions","eventCategory","eventAction","eventLabel","label","eventValue","nonInteraction","noninteraction","page","location","hash","substring","pathname","setDimensionsAndMetrics","transport","appId","appName","appVersion","fatal","exFatal","exDescription","description","timingCategory","timingVar","timingValue","idx","type","ctorParameters","Angulartics2","angulartics2GoogleAnalytics","events","filter","NavigationEnd","pageTitle","redirect","sessionStorage","href","history","replaceState","coordinates_1","insert_x","insert_y","enabled","plot_height","plt","Bokeh","Plotting","tools","xrange","Range1d","yrange","fig","figure","x_range","y_range","source","ColumnDataSource","doc","Document","ngOnChanges","tempSource","xs","ys","colour","xAll","yAll","concat","xMax","xMin","yMax","yMin","range","sqXMax","sqXMin","sqYMax","sqYMin","attributes","start","end","ngAfterViewInit","multi_line","field","line_width","color","add_root","embed","add_document_standalone","bokehplot","Input","Array","Coordinates","Boolean","tableData","tableModel","MdlDefaultTableModel","name","sortable","numeric","addAll","EventEmitter","onInput","jsonInput","parseAndCheckJSON","emit","refresh","jsonInputDir","transform","oldJsonValid","parsedJSON","jsonErrorMessage","Output","jsonText","Pipe","pure","common_1","buttonText","inputUpdated","validationCheck","useMyJsonPipe","lines","JsonPipe","split","editedInput","updateInput","Function","bokeh_pcolour_1","scatter_z","updateHoverData","runAllUpdates","pcolour_data","pcolour_x","pcolour_hover_width","pcolour_y","pcolour_hover_length","z","pcolour_z","pcolour_hover_predicted_factor","_d","_e","hover_tool","HoverTool","tooltips","renderers","pcolour_renderer","add_tools","BokehPcolour","scatter_hover_width","scatter_hover_length","scatter_hover_area","scatter_hover_measured_factor","scatter_hover_predicted_factor","old_scatter_z","old_pcolour_z","scatter_c","pcolour_c","scatter_data","hover_width","hover_length","hover_area","hover_measured_factor","hover_predicted_factor","scatter_source","pcolour_source","viridis_hex","colour_mapper","LinearColorMapper","palette","ticker","BasicTicker","colour_bar","ColorBar","label_standoff","figureInitialise","rect","scatter_renderer","line_color","fill_color","add_layout","updateScatterData","updatePcolourData","updateScatterColour","updateSourceData","updateFigureDimensions","scatter_x","scatter_y","allZ","vmin","vmax","low","high","color_mapper","v_compute","height","predicted_factor","old_area","old_predicted_factor","_f","_g","_h","_j","a","settingsUpdated","allMachineSpecifications","machineList","currentMachineSpecifications","updateMachineID","newCurrentMachine","item","updateEnergy","newCurrentEnergy","updateApplicator","newCurrentApplicator","updateSSD","newCurrentSSD"],"mappings":"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","file":"app.859199ba7a2003296388.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar app_module_1 = __webpack_require__(23);\r\n\tif (true) {\r\n\t    core_1.enableProdMode();\r\n\t}\r\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\r\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar platform_browser_1 = __webpack_require__(21);\r\n\tvar forms_1 = __webpack_require__(24);\r\n\tvar http_1 = __webpack_require__(28);\r\n\tvar platform_browser_2 = __webpack_require__(21);\r\n\t// import {MaterialModule} from '@angular/material'\r\n\tvar app_routing_1 = __webpack_require__(29);\r\n\tvar angulartics2_google_analytics_1 = __webpack_require__(118);\r\n\tvar angulartics2_1 = __webpack_require__(130);\r\n\tvar angular2_mdl_1 = __webpack_require__(132);\r\n\tvar app_component_1 = __webpack_require__(183);\r\n\tvar plot_component_1 = __webpack_require__(185);\r\n\tvar parameterise_component_1 = __webpack_require__(58);\r\n\tvar page_not_found_component_1 = __webpack_require__(66);\r\n\tvar width_length_table_component_1 = __webpack_require__(188);\r\n\tvar json_input_component_1 = __webpack_require__(190);\r\n\tvar home_component_1 = __webpack_require__(68);\r\n\tvar create_model_component_1 = __webpack_require__(70);\r\n\tvar use_model_component_1 = __webpack_require__(72);\r\n\tvar storage_management_component_1 = __webpack_require__(75);\r\n\tvar specifications_component_1 = __webpack_require__(79);\r\n\tvar dicom_component_1 = __webpack_require__(81);\r\n\tvar json_edit_component_1 = __webpack_require__(193);\r\n\tvar send_to_parameterisation_component_1 = __webpack_require__(195);\r\n\tvar bokeh_create_model_component_1 = __webpack_require__(197);\r\n\tvar bokeh_use_model_component_1 = __webpack_require__(199);\r\n\tvar choose_specifications_component_1 = __webpack_require__(200);\r\n\tvar my_json_pipe_1 = __webpack_require__(191);\r\n\tvar model_data_1 = __webpack_require__(64);\r\n\tvar electron_api_service_1 = __webpack_require__(59);\r\n\tvar data_service_1 = __webpack_require__(61);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\tvar local_storage_service_1 = __webpack_require__(76);\r\n\tvar AppModule = (function () {\r\n\t    function AppModule() {\r\n\t    }\r\n\t    AppModule = __decorate([\r\n\t        core_1.NgModule({\r\n\t            imports: [\r\n\t                platform_browser_1.BrowserModule,\r\n\t                forms_1.FormsModule,\r\n\t                http_1.HttpModule,\r\n\t                angular2_mdl_1.MdlModule,\r\n\t                //  MaterialModule.forRoot(),\r\n\t                app_routing_1.routing,\r\n\t                angulartics2_1.Angulartics2Module.forRoot()\r\n\t            ],\r\n\t            declarations: [\r\n\t                app_component_1.AppComponent,\r\n\t                parameterise_component_1.ParameteriseComponent,\r\n\t                plot_component_1.PlotComponent,\r\n\t                page_not_found_component_1.PageNotFoundComponent,\r\n\t                width_length_table_component_1.WidthLengthTableComponent,\r\n\t                json_input_component_1.JsonInputComponent,\r\n\t                my_json_pipe_1.MyJsonPipe,\r\n\t                home_component_1.HomeComponent,\r\n\t                create_model_component_1.CreateModelComponent,\r\n\t                use_model_component_1.UseModelComponent,\r\n\t                storage_management_component_1.StorageManagementComponent,\r\n\t                specifications_component_1.SpecificationsComponent,\r\n\t                dicom_component_1.DicomComponent,\r\n\t                send_to_parameterisation_component_1.SendToParameterisationComponent,\r\n\t                json_edit_component_1.JsonEditComponent,\r\n\t                bokeh_create_model_component_1.BokehCreateModelComponent,\r\n\t                bokeh_use_model_component_1.BokehUseModelComponent,\r\n\t                choose_specifications_component_1.ChooseSpecificationsComponent\r\n\t            ],\r\n\t            providers: [\r\n\t                electron_api_service_1.ElectronApiService,\r\n\t                data_service_1.DataService,\r\n\t                title_service_1.TitleService,\r\n\t                platform_browser_2.Title,\r\n\t                local_storage_service_1.LocalStorageService,\r\n\t                angulartics2_google_analytics_1.Angulartics2GoogleAnalytics,\r\n\t                model_data_1.ModelData, model_data_1.ModelMeasurement, model_data_1.ModelGrid, model_data_1.Predictions\r\n\t            ],\r\n\t            bootstrap: [\r\n\t                app_component_1.AppComponent\r\n\t            ]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], AppModule);\r\n\t    return AppModule;\r\n\t}());\r\n\texports.AppModule = AppModule;\r\n\n\n/***/ },\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar router_1 = __webpack_require__(30);\r\n\tvar parameterise_component_1 = __webpack_require__(58);\r\n\tvar page_not_found_component_1 = __webpack_require__(66);\r\n\tvar home_component_1 = __webpack_require__(68);\r\n\tvar create_model_component_1 = __webpack_require__(70);\r\n\tvar use_model_component_1 = __webpack_require__(72);\r\n\tvar storage_management_component_1 = __webpack_require__(75);\r\n\tvar specifications_component_1 = __webpack_require__(79);\r\n\tvar dicom_component_1 = __webpack_require__(81);\r\n\tvar appRoutes = [\r\n\t    {\r\n\t        path: 'home',\r\n\t        component: home_component_1.HomeComponent,\r\n\t        data: {\r\n\t            title: 'Home'\r\n\t        }\r\n\t    },\r\n\t    {\r\n\t        path: 'storage',\r\n\t        component: storage_management_component_1.StorageManagementComponent\r\n\t    },\r\n\t    {\r\n\t        path: 'specifications',\r\n\t        component: specifications_component_1.SpecificationsComponent\r\n\t    },\r\n\t    {\r\n\t        path: 'dicom',\r\n\t        component: dicom_component_1.DicomComponent\r\n\t    },\r\n\t    {\r\n\t        path: 'parameterise',\r\n\t        component: parameterise_component_1.ParameteriseComponent\r\n\t    },\r\n\t    {\r\n\t        path: 'create-model',\r\n\t        component: create_model_component_1.CreateModelComponent\r\n\t    },\r\n\t    {\r\n\t        path: 'use-model',\r\n\t        component: use_model_component_1.UseModelComponent\r\n\t    },\r\n\t    {\r\n\t        path: '',\r\n\t        component: home_component_1.HomeComponent\r\n\t    },\r\n\t    {\r\n\t        path: 'model',\r\n\t        redirectTo: 'create-model'\r\n\t    },\r\n\t    {\r\n\t        path: '**', component: page_not_found_component_1.PageNotFoundComponent\r\n\t    }\r\n\t];\r\n\texports.appRoutingProviders = [];\r\n\texports.routing = router_1.RouterModule.forRoot(appRoutes);\r\n\n\n/***/ },\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar router_1 = __webpack_require__(30);\r\n\t// import { CookieService } from 'angular2-cookie/core';\r\n\tvar electron_api_service_1 = __webpack_require__(59);\r\n\tvar data_service_1 = __webpack_require__(61);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\t// import { LocalStorageService } from './local-storage.service';\r\n\tvar model_data_1 = __webpack_require__(64);\r\n\tvar demo_data_1 = __webpack_require__(62);\r\n\tvar ParameteriseComponent = (function () {\r\n\t    function ParameteriseComponent(electronApiService, dataService, myTitleService, router, modelData) {\r\n\t        this.electronApiService = electronApiService;\r\n\t        this.dataService = dataService;\r\n\t        this.myTitleService = myTitleService;\r\n\t        this.router = router;\r\n\t        this.modelData = modelData;\r\n\t        this.parameterisation = {\r\n\t            insert: {\r\n\t                x: [0],\r\n\t                y: [0]\r\n\t            },\r\n\t            width: null,\r\n\t            length: null,\r\n\t            circle: null,\r\n\t            ellipse: null\r\n\t        };\r\n\t        this.jsonValid = true;\r\n\t        this.xInputValid = true;\r\n\t        this.yInputValid = true;\r\n\t        this.equalLengths = true;\r\n\t        this.serverResponseValid = true;\r\n\t        this.dataInFlight = false;\r\n\t        this.submitDisabled = false;\r\n\t        this.refreshJsonInput = false;\r\n\t        this.insertData = {\r\n\t            machine: null,\r\n\t            parameterisation: this.parameterisation,\r\n\t            energy: null,\r\n\t            applicator: null,\r\n\t            ssd: null,\r\n\t            factor: null\r\n\t        };\r\n\t        this.machineExists = false;\r\n\t        this.machineSettingsExist = false;\r\n\t        this.modelExists = false;\r\n\t        this.ableToAddDataToModel = false;\r\n\t        this.dataAlreadyExistsOnModel = false;\r\n\t        this.serverError = false;\r\n\t    }\r\n\t    ParameteriseComponent.prototype.ngOnInit = function () {\r\n\t        this.getData();\r\n\t        this.myTitleService.setTitle('Parameterisation');\r\n\t        this.parameteriseURL = localStorage.getItem(\"parameteriseURL\");\r\n\t        if (this.parameteriseURL == null) {\r\n\t            this.parameteriseURL = 'http://electronapi.simonbiggs.net/parameterise';\r\n\t        }\r\n\t        this.machineSpecifications = JSON.parse(localStorage.getItem(\"specifications\"));\r\n\t        if (this.machineSpecifications == null) {\r\n\t            this.machineSpecifications = {};\r\n\t        }\r\n\t        this.checkMachineSettings();\r\n\t        this.checkIfCanBeSentToModel();\r\n\t        this.updateTextAreaValues();\r\n\t    };\r\n\t    ParameteriseComponent.prototype.createKey = function () {\r\n\t        var key = ('{\"machine\":' + JSON.stringify(String(this.insertData.machine)) + ',' +\r\n\t            '\"energy\":' + JSON.stringify(Number(this.insertData.energy)) + ',' +\r\n\t            '\"applicator\":' + JSON.stringify(String(this.insertData.applicator)) + ',' +\r\n\t            '\"ssd\":' + JSON.stringify(Number(this.insertData.ssd)) +\r\n\t            '}');\r\n\t        return key;\r\n\t    };\r\n\t    ParameteriseComponent.prototype.addMeasuredFactor = function (factor) {\r\n\t        this.dataAlreadyExistsOnModel = true;\r\n\t        this.ableToAddDataToModel = false;\r\n\t        var key = this.createKey();\r\n\t        var modelData = JSON.parse(localStorage.getItem(key));\r\n\t        if (modelData == null) {\r\n\t            modelData = {\r\n\t                measurement: {\r\n\t                    width: [],\r\n\t                    length: [],\r\n\t                    factor: [],\r\n\t                },\r\n\t                model: {\r\n\t                    width: [],\r\n\t                    length: [],\r\n\t                    factor: []\r\n\t                }\r\n\t            };\r\n\t        }\r\n\t        modelData.model.width = [];\r\n\t        modelData.model.length = [];\r\n\t        modelData.model.factor = [];\r\n\t        modelData.measurement.width.push(Number(this.insertData.parameterisation.width));\r\n\t        modelData.measurement.length.push(Number(this.insertData.parameterisation.length));\r\n\t        modelData.measurement.factor.push(Number(factor));\r\n\t        localStorage.setItem(key, JSON.stringify(modelData));\r\n\t        localStorage.setItem(\"current_machine\", JSON.stringify(Number(this.insertData.machine)));\r\n\t        localStorage.setItem(\"currentEnergy\", JSON.stringify(Number(this.insertData.energy)));\r\n\t        localStorage.setItem(\"currentApplicator\", JSON.stringify(this.insertData.applicator));\r\n\t        localStorage.setItem(\"currentSSD\", JSON.stringify(Number(this.insertData.ssd)));\r\n\t    };\r\n\t    ParameteriseComponent.prototype.predictFactor = function () {\r\n\t        localStorage.setItem(\"current_machine\", JSON.stringify(Number(this.insertData.machine)));\r\n\t        localStorage.setItem(\"currentEnergy\", JSON.stringify(Number(this.insertData.energy)));\r\n\t        localStorage.setItem(\"currentApplicator\", JSON.stringify(this.insertData.applicator));\r\n\t        localStorage.setItem(\"currentSSD\", JSON.stringify(Number(this.insertData.ssd)));\r\n\t        this.currentSettings = {\r\n\t            machine: this.insertData.machine,\r\n\t            energy: this.insertData.energy,\r\n\t            applicator: this.insertData.applicator,\r\n\t            ssd: this.insertData.ssd\r\n\t        };\r\n\t        this.modelData.loadModelData(this.currentSettings);\r\n\t        this.modelData.predictions.width.unshift(this.parameterisation.width);\r\n\t        this.modelData.predictions.length.unshift(this.parameterisation.length);\r\n\t        if (this.insertData.factor != 0 && this.insertData.factor != null) {\r\n\t            this.modelData.predictions.measuredFactor.unshift(this.insertData.factor);\r\n\t        }\r\n\t        this.modelData.saveModelData(this.currentSettings);\r\n\t        this.router.navigate([\"/use-model\"]);\r\n\t    };\r\n\t    ParameteriseComponent.prototype.updateTextAreaValues = function () {\r\n\t        this.textAreaX = String(this.parameterisation.insert.x)\r\n\t            .replace(/,/g, ', ');\r\n\t        this.textAreaY = String(this.parameterisation.insert.y)\r\n\t            .replace(/,/g, ', ');\r\n\t    };\r\n\t    ParameteriseComponent.prototype.checkIfEqualLengths = function () {\r\n\t        if (this.parameterisation.insert.x.length == this.parameterisation.insert.y.length) {\r\n\t            this.equalLengths = true;\r\n\t        }\r\n\t        else {\r\n\t            this.equalLengths = false;\r\n\t        }\r\n\t    };\r\n\t    ParameteriseComponent.prototype.saveInsertData = function () {\r\n\t        this.insertData['parameterisation'] = this.parameterisation;\r\n\t        localStorage.setItem(\"last_insertData\", JSON.stringify(this.insertData));\r\n\t    };\r\n\t    ParameteriseComponent.prototype.validateInput = function (input) {\r\n\t        // return /^(-?\\d*(\\.\\d+)?[,;\\s]+)*-?\\d*(\\.\\d+)?[,;\\s]*$/.test(input)\r\n\t        return /^[-\\d\\.,;\\s]*$/.test(input);\r\n\t        // return true\r\n\t    };\r\n\t    ParameteriseComponent.prototype.inputTextAreaX = function (xInput) {\r\n\t        try {\r\n\t            if (this.validateInput(xInput)) {\r\n\t                this.parameterisation.insert.x = eval('[' + xInput.replace(/[,;\\n\\t]\\s*/g, ', ') + ']');\r\n\t                this.insertUpdated(this.parameterisation.insert);\r\n\t                this.xInputValid = true;\r\n\t                this.checkIfEqualLengths();\r\n\t                this.saveInsertData();\r\n\t                this.checkIfCanBeSentToModel();\r\n\t            }\r\n\t            else {\r\n\t                this.xInputValid = false;\r\n\t            }\r\n\t        }\r\n\t        catch (err) {\r\n\t            console.log(err);\r\n\t            this.xInputValid = false;\r\n\t        }\r\n\t    };\r\n\t    ParameteriseComponent.prototype.inputTextAreaY = function (yInput) {\r\n\t        try {\r\n\t            if (this.validateInput(yInput)) {\r\n\t                this.parameterisation.insert.y = eval('[' + yInput.replace(/[,;\\n\\t]\\s*/g, ', ') + ']');\r\n\t                this.insertUpdated(this.parameterisation.insert);\r\n\t                this.yInputValid = true;\r\n\t                this.checkIfEqualLengths();\r\n\t                this.saveInsertData();\r\n\t                this.checkIfCanBeSentToModel();\r\n\t            }\r\n\t            else {\r\n\t                this.yInputValid = false;\r\n\t            }\r\n\t        }\r\n\t        catch (err) {\r\n\t            console.log(err);\r\n\t            this.yInputValid = false;\r\n\t        }\r\n\t    };\r\n\t    ParameteriseComponent.prototype.getData = function () {\r\n\t        var localStorageInsertDataString = localStorage['last_insertData'];\r\n\t        if (localStorageInsertDataString) {\r\n\t            this.insertData = JSON.parse(localStorageInsertDataString);\r\n\t            var insert = this.insertData['parameterisation']['insert'];\r\n\t            this.insertUpdated(insert);\r\n\t            this.insertData['parameterisation'] = this.parameterisation;\r\n\t        }\r\n\t        else {\r\n\t        }\r\n\t    };\r\n\t    ParameteriseComponent.prototype.loadDemoData = function () {\r\n\t        var demoData = JSON.parse(JSON.stringify(demo_data_1.DEMO_PARAMETERISE_INPUT));\r\n\t        this.insertUpdated(demoData.insert);\r\n\t        // this.jsonInputComponent.refresh = true;\r\n\t        this.insertData = {\r\n\t            machine: null,\r\n\t            parameterisation: this.parameterisation,\r\n\t            energy: null,\r\n\t            applicator: null,\r\n\t            ssd: null,\r\n\t            factor: null\r\n\t        };\r\n\t        this.updateTextAreaValues();\r\n\t        this.checkIfEqualLengths();\r\n\t    };\r\n\t    ParameteriseComponent.prototype.sleep = function (time) {\r\n\t        return new Promise(function (resolve) { return setTimeout(resolve, time); });\r\n\t    };\r\n\t    ParameteriseComponent.prototype.recursiveServerSubmit = function () {\r\n\t        var _this = this;\r\n\t        this.serverError = false;\r\n\t        this.electronApiService.sendToServer(this.parameteriseURL, JSON.stringify(this.parameterisation.insert))\r\n\t            .then(function (parameterisationResult) {\r\n\t            _this.parameterisation.circle = parameterisationResult.circle;\r\n\t            _this.parameterisation.ellipse = parameterisationResult.ellipse;\r\n\t            _this.parameterisation.width = parameterisationResult.width;\r\n\t            _this.parameterisation.length = parameterisationResult.length;\r\n\t            var complete = parameterisationResult.complete;\r\n\t            if (complete) {\r\n\t                _this.dataInFlight = false;\r\n\t                _this.serverResponseValid = true;\r\n\t                _this.checkSubmitButton();\r\n\t                localStorage.setItem(JSON.stringify(_this.parameterisation.insert), JSON.stringify(_this.parameterisation));\r\n\t                _this.saveInsertData();\r\n\t                _this.checkIfCanBeSentToModel();\r\n\t                if (_this.parameterisation.width == null) {\r\n\t                    _this.serverError = true;\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                _this.sleep(500).then(function () { return _this.recursiveServerSubmit(); });\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    ParameteriseComponent.prototype.checkIfCanBeSentToModel = function () {\r\n\t        this.ableToAddDataToModel = false;\r\n\t        this.dataAlreadyExistsOnModel = false;\r\n\t        if (this.machineSettingsExist) {\r\n\t            var key = this.createKey();\r\n\t            var modelData = JSON.parse(localStorage.getItem(key));\r\n\t            if (modelData == null) {\r\n\t                this.ableToAddDataToModel = true;\r\n\t            }\r\n\t            else if (modelData.measurement == null) {\r\n\t                this.ableToAddDataToModel = true;\r\n\t            }\r\n\t            else {\r\n\t                if (this.parameterisation.width != null && this.parameterisation.length != null && this.insertData.factor != null) {\r\n\t                    if (modelData.measurement.width.indexOf(Number(this.parameterisation.width)) > -1 &&\r\n\t                        modelData.measurement.length.indexOf(Number(this.parameterisation.length)) > -1 &&\r\n\t                        modelData.measurement.factor.indexOf(Number(this.insertData.factor)) > -1) {\r\n\t                        this.dataAlreadyExistsOnModel = true;\r\n\t                    }\r\n\t                    else {\r\n\t                        this.dataAlreadyExistsOnModel = false;\r\n\t                        this.ableToAddDataToModel = true;\r\n\t                    }\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        // console.log(this.ableToAddDataToModel)\r\n\t    };\r\n\t    ParameteriseComponent.prototype.checkMachineSettings = function () {\r\n\t        this.R50 = null;\r\n\t        var machine = this.insertData['machine'];\r\n\t        var energy = this.insertData['energy'];\r\n\t        var applicator = this.insertData['applicator'];\r\n\t        var ssd = this.insertData['ssd'];\r\n\t        if (this.machineSpecifications[machine]) {\r\n\t            var specifications = this.machineSpecifications[machine];\r\n\t            this.R50 = specifications['R50'][energy];\r\n\t            if (specifications['energy'].indexOf(Number(energy)) > -1 &&\r\n\t                specifications['applicator'].indexOf(String(applicator)) > -1 &&\r\n\t                specifications['ssd'].indexOf(Number(ssd)) > -1) {\r\n\t                this.machineSettingsExist = true;\r\n\t            }\r\n\t            else {\r\n\t                this.machineSettingsExist = false;\r\n\t            }\r\n\t            this.machineExists = true;\r\n\t        }\r\n\t        else {\r\n\t            this.machineExists = false;\r\n\t            this.machineSettingsExist = false;\r\n\t            this.modelExists = false;\r\n\t        }\r\n\t    };\r\n\t    ParameteriseComponent.prototype.insertDataChange = function () {\r\n\t        localStorage.setItem(\"last_insertData\", JSON.stringify(this.insertData));\r\n\t        this.checkMachineSettings();\r\n\t        this.checkIfCanBeSentToModel();\r\n\t    };\r\n\t    ParameteriseComponent.prototype.onSubmit = function () {\r\n\t        this.dataInFlight = true;\r\n\t        this.checkSubmitButton();\r\n\t        this.recursiveServerSubmit();\r\n\t    };\r\n\t    ParameteriseComponent.prototype.insertDataFromLocalStorage = function (localStorageInsertData) {\r\n\t    };\r\n\t    ParameteriseComponent.prototype.parameterisationFromLocalStorage = function (localStorageParameterisationString) {\r\n\t        var localStorageParameterisation = JSON.parse(localStorageParameterisationString);\r\n\t        this.parameterisation.insert = localStorageParameterisation['insert'];\r\n\t        this.parameterisation.width = localStorageParameterisation['width'];\r\n\t        this.parameterisation.length = localStorageParameterisation['length'];\r\n\t        this.parameterisation.circle = localStorageParameterisation['circle'];\r\n\t        this.parameterisation.ellipse = localStorageParameterisation['ellipse'];\r\n\t    };\r\n\t    ParameteriseComponent.prototype.insertUpdated = function (insert) {\r\n\t        var localStorageParameterisation = localStorage.getItem(JSON.stringify(insert));\r\n\t        if (localStorageParameterisation) {\r\n\t            this.parameterisationFromLocalStorage(localStorageParameterisation);\r\n\t        }\r\n\t        else {\r\n\t            this.parameterisation.insert = insert;\r\n\t            this.parameterisation.width = null;\r\n\t            this.parameterisation.length = null;\r\n\t            this.parameterisation.circle = null;\r\n\t            this.parameterisation.ellipse = null;\r\n\t        }\r\n\t    };\r\n\t    ParameteriseComponent.prototype.onJsonStatusChange = function (jsonStatus) {\r\n\t        this.jsonValid = jsonStatus;\r\n\t        this.checkSubmitButton();\r\n\t    };\r\n\t    ParameteriseComponent.prototype.checkSubmitButton = function () {\r\n\t        if (this.dataInFlight || !this.jsonValid) {\r\n\t            this.submitDisabled = true;\r\n\t        }\r\n\t        else {\r\n\t            this.submitDisabled = false;\r\n\t        }\r\n\t    };\r\n\t    ParameteriseComponent.prototype.parameterisationServerChange = function (serverUrl) {\r\n\t        localStorage.setItem(\"parameteriseURL\", serverUrl);\r\n\t    };\r\n\t    ParameteriseComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-parameterise',\r\n\t            template: __webpack_require__(65),\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [electron_api_service_1.ElectronApiService, data_service_1.DataService, title_service_1.TitleService, router_1.Router, model_data_1.ModelData])\r\n\t    ], ParameteriseComponent);\r\n\t    return ParameteriseComponent;\r\n\t}());\r\n\texports.ParameteriseComponent = ParameteriseComponent;\r\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar http_1 = __webpack_require__(28);\r\n\t__webpack_require__(60);\r\n\tvar ElectronApiService = (function () {\r\n\t    function ElectronApiService(http) {\r\n\t        this.http = http;\r\n\t        // private parameteriseURL = 'http://electronapi.simonbiggs.net/parameterise';\r\n\t        // private modelURL = 'http://electronapi.simonbiggs.net/model';\r\n\t        this.wakeUpURL = 'http://electronapi.simonbiggs.net/wakeup';\r\n\t    }\r\n\t    // Initial get from server to wake it up\r\n\t    ElectronApiService.prototype.wakeUpServer = function () {\r\n\t        return this.http\r\n\t            .get(this.wakeUpURL).toPromise();\r\n\t    };\r\n\t    ElectronApiService.prototype.sendToServer = function (URL, input) {\r\n\t        return this.http\r\n\t            .post(URL, input)\r\n\t            .toPromise()\r\n\t            .then(function (res) {\r\n\t            var nan = null;\r\n\t            return res.json();\r\n\t        })\r\n\t            .catch(this.handleError);\r\n\t    };\r\n\t    ElectronApiService.prototype.handleError = function (error) {\r\n\t        console.error('An error occurred', error);\r\n\t        return Promise.reject(error.message || error);\r\n\t    };\r\n\t    ElectronApiService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], ElectronApiService);\r\n\t    return ElectronApiService;\r\n\t}());\r\n\texports.ElectronApiService = ElectronApiService;\r\n\n\n/***/ },\n/* 60 */,\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar demo_data_1 = __webpack_require__(62);\r\n\t// import { DEMO_MODEL_INPUT } from './demo-data';\r\n\tvar DataService = (function () {\r\n\t    function DataService() {\r\n\t    }\r\n\t    DataService.prototype.getParameterisationData = function () {\r\n\t        return Promise.resolve(demo_data_1.DEMO_PARAMETERISE_INPUT);\r\n\t    };\r\n\t    ;\r\n\t    DataService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], DataService);\r\n\t    return DataService;\r\n\t}());\r\n\texports.DataService = DataService;\r\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar insert = {\r\n\t    x: [\r\n\t        0.99, -0.14, -1.0, -1.73, -2.56, -3.17, -3.49,\r\n\t        -3.57, -3.17, -2.52, -1.76, -1.04, -0.17,\r\n\t        0.77, 1.63, 2.36, 2.79, 2.91, 3.04, 3.22,\r\n\t        3.34, 3.37, 3.08, 2.54, 1.88, 1.02, 0.99],\r\n\t    y: [\r\n\t        5.05, 4.98, 4.42, 3.24, 1.68, 0.6, -0.64,\r\n\t        -1.48, -2.38, -3.77, -4.81, -5.26, -5.51,\r\n\t        -5.58, -5.23, -4.64, -3.77, -2.77, -1.68,\r\n\t        -0.29, 1.23, 2.68, 3.8, 4.6, 5.01, 5.08,\r\n\t        5.05]\r\n\t};\r\n\texports.DEMO_PARAMETERISE_INPUT = {\r\n\t    insert: insert,\r\n\t    circle: null,\r\n\t    ellipse: null,\r\n\t    width: null,\r\n\t    length: null\r\n\t};\r\n\t// export const DEMO_MODEL_INPUT: string =`{\r\n\t//   \"width\": [\r\n\t//     3.15, 3.16, 3.17, 3.17, 3.17, 3.55, 3.66, \r\n\t//     3.71, 4.2, 4.21, 4.21, 4.21, 4.21, 4.38, \r\n\t//     4.48, 4.59, 4.59, 4.67, 5.21, 5.25, 5.26,\r\n\t//     5.26, 5.26, 5.34, 5.43, 5.72, 5.86, 6, 6.04,\r\n\t//     6.08, 6.3, 6.31, 6.41, 6.53, 6.54, 6.64, 6.78,\r\n\t//     6.9, 7.08, 7.18, 7.21, 7.36, 7.56, 7.6, 7.64,\r\n\t//     7.82, 8.06, 8.4, 9.45], \r\n\t//   \"length\": [\r\n\t//     3.16, 5.25, 13.64, 6.83, 9.43, 7.7, 5.04, \r\n\t//     4.36, 4.21, 10.51, 13.65, 6.82, 8.41, 5.47, \r\n\t//     7.29, 5.67, 6.54, 6.28, 11.4, 5.26, 10.52, \r\n\t//     13.66, 8.41, 9.64, 11.02, 11.6, 8.62, 7.98,\r\n\t//     9.22, 6.64, 6.33, 8.24, 8.69, 10.99, 8.41, \r\n\t//     9.81, 10.98, 10.25, 10.77, 11.27, 9.03, 7.37,\r\n\t//     10.05, 10.26, 8.99, 10.85, 11.85, 8.42, 9.47],\r\n\t//   \"factor\": [\r\n\t//     0.9294, 0.9346, 0.9533, 0.9488, 0.9488, \r\n\t//     0.9443, 0.9434, 0.9488, 0.956, 0.9709, 0.9756,\r\n\t//     0.9606, 0.9709, 0.9634, 0.9606, 0.9588,\r\n\t//     0.9681, 0.9737, 0.9881, 0.9709, 0.9881,\r\n\t//     0.9872, 0.9833, 0.993, 0.9872, 0.999, 0.9891,\r\n\t//     0.9911, 0.999, 0.993, 0.9862, 0.9921, 0.999,\r\n\t//     1, 0.993, 0.999, 1.007, 0.999, 1.005, 0.999,\r\n\t//     1.0101, 1.003, 1.004, 1.0142, 1.003, 1.002,\r\n\t//     1.007, 1.007, 1.0081]\r\n\t// }` \r\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar TitleService = (function () {\r\n\t    function TitleService() {\r\n\t        this.title = 'Home';\r\n\t    }\r\n\t    TitleService.prototype.getTitle = function () {\r\n\t        return this.title;\r\n\t    };\r\n\t    TitleService.prototype.setTitle = function (title) {\r\n\t        this.title = title;\r\n\t    };\r\n\t    TitleService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], TitleService);\r\n\t    return TitleService;\r\n\t}());\r\n\texports.TitleService = TitleService;\r\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar Base = (function () {\r\n\t    function Base() {\r\n\t    }\r\n\t    Base.prototype.reset = function () {\r\n\t        for (var _i = 0, _a = this.propNames; _i < _a.length; _i++) {\r\n\t            var propName = _a[_i];\r\n\t            this[propName] = [];\r\n\t        }\r\n\t    };\r\n\t    Base.prototype.fillFromObject = function (object) {\r\n\t        object = this.updateOldKeyNames(object);\r\n\t        for (var _i = 0, _a = this.propNames; _i < _a.length; _i++) {\r\n\t            var propName = _a[_i];\r\n\t            if (object[propName] == null) {\r\n\t                this[propName] = [];\r\n\t            }\r\n\t            else {\r\n\t                this[propName] = object[propName];\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    Base.prototype.updateOldKeyNames = function (object) {\r\n\t        var newKey;\r\n\t        for (var oldKey in this.keyConversions) {\r\n\t            if (object[oldKey] != null && object[this.keyConversions[oldKey]] == null) {\r\n\t                newKey = this.keyConversions[oldKey];\r\n\t                Object.defineProperty(object, newKey, Object.getOwnPropertyDescriptor(object, oldKey));\r\n\t                delete object[oldKey];\r\n\t            }\r\n\t        }\r\n\t        return object;\r\n\t    };\r\n\t    return Base;\r\n\t}());\r\n\texports.Base = Base;\r\n\tvar ModelMeasurement = (function (_super) {\r\n\t    __extends(ModelMeasurement, _super);\r\n\t    function ModelMeasurement() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.propNames = ['width', 'length', 'measuredFactor'];\r\n\t        this.keyConversions = {\r\n\t            'factor': 'measuredFactor'\r\n\t        };\r\n\t        this.width = [];\r\n\t        this.length = [];\r\n\t        this.measuredFactor = [];\r\n\t    }\r\n\t    ModelMeasurement = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ModelMeasurement);\r\n\t    return ModelMeasurement;\r\n\t}(Base));\r\n\texports.ModelMeasurement = ModelMeasurement;\r\n\tvar ModelGrid = (function (_super) {\r\n\t    __extends(ModelGrid, _super);\r\n\t    function ModelGrid() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.propNames = ['width', 'length', 'predictedFactor'];\r\n\t        this.keyConversions = {\r\n\t            'factor': 'predictedFactor'\r\n\t        };\r\n\t        this.width = [];\r\n\t        this.length = [];\r\n\t        this.predictedFactor = [];\r\n\t    }\r\n\t    ModelGrid = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ModelGrid);\r\n\t    return ModelGrid;\r\n\t}(Base));\r\n\texports.ModelGrid = ModelGrid;\r\n\tvar Predictions = (function (_super) {\r\n\t    __extends(Predictions, _super);\r\n\t    function Predictions() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.propNames = ['width', 'length', 'area', 'measuredFactor', 'predictedFactor'];\r\n\t        this.width = [];\r\n\t        this.length = [];\r\n\t        this.area = [];\r\n\t        this.measuredFactor = [];\r\n\t        this.predictedFactor = [];\r\n\t    }\r\n\t    Predictions = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], Predictions);\r\n\t    return Predictions;\r\n\t}(Base));\r\n\texports.Predictions = Predictions;\r\n\tvar ModelData = (function () {\r\n\t    // currentSettings: {\r\n\t    //   machine: string, \r\n\t    //   energy: number, \r\n\t    //   applicator: string, \r\n\t    //   ssd: number\r\n\t    // }\r\n\t    function ModelData(measurement, model, predictions) {\r\n\t        this.measurement = measurement;\r\n\t        this.model = model;\r\n\t        this.predictions = predictions;\r\n\t        this.propNames = ['measurement', 'model', 'predictions'];\r\n\t    }\r\n\t    ModelData.prototype.fillFromObject = function (object) {\r\n\t        if (object == null) {\r\n\t            for (var _i = 0, _a = this.propNames; _i < _a.length; _i++) {\r\n\t                var propName = _a[_i];\r\n\t                this[propName].reset();\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            for (var _b = 0, _c = this.propNames; _b < _c.length; _b++) {\r\n\t                var propName = _c[_b];\r\n\t                if (object[propName] == null) {\r\n\t                    this[propName].reset();\r\n\t                }\r\n\t                else {\r\n\t                    this[propName].fillFromObject(object[propName]);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ModelData.prototype.createLocalStorageKey = function (currentSettings) {\r\n\t        var localStorageKey = ('{\"machine\":' + JSON.stringify(String(currentSettings.machine)) + ',' +\r\n\t            '\"energy\":' + JSON.stringify(Number(currentSettings.energy)) + ',' +\r\n\t            '\"applicator\":' + JSON.stringify(String(currentSettings.applicator)) + ',' +\r\n\t            '\"ssd\":' + JSON.stringify(Number(currentSettings.ssd)) +\r\n\t            '}');\r\n\t        return localStorageKey;\r\n\t    };\r\n\t    ModelData.prototype.loadModelData = function (currentSettings) {\r\n\t        var localStorageKey = this.createLocalStorageKey(currentSettings);\r\n\t        var parsedData = JSON.parse(localStorage.getItem(localStorageKey));\r\n\t        this.fillFromObject(parsedData);\r\n\t    };\r\n\t    ModelData.prototype.saveModelData = function (currentSettings) {\r\n\t        var localStorageKey = this.createLocalStorageKey(currentSettings);\r\n\t        localStorage.setItem(localStorageKey, JSON.stringify(this));\r\n\t    };\r\n\t    ModelData = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [ModelMeasurement, ModelGrid, Predictions])\r\n\t    ], ModelData);\r\n\t    return ModelData;\r\n\t}());\r\n\texports.ModelData = ModelData;\r\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\" style=\\\"display: flex; align-items: center; flex-flow: row wrap;\\\">\\r\\n    <h5>Equivalent ellipse parameterisation</h5>\\r\\n    <p>This is for the determination of equivalent ellipse widths and lengths as defined in the paper method.</p>\\r\\n\\r\\n    <p>\\r\\n      To begin shape parameterisation you need to define your insert shape. \\r\\n      This can be done by editing the x and y coordinates within the text boxes below or by using a shape       \\r\\n      <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n        pulled from a dicom file.\\r\\n      </a>\\r\\n    </p>\\r\\n\\r\\n    <p>\\r\\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\\r\\n      This web app should handle copying and pasting from a range of sources (including excel).\\r\\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\\r\\n    </p>\\r\\n\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"X coordinates (cm @iso)\\\"\\r\\n      [(ngModel)]=\\\"textAreaX\\\"\\r\\n      (input)=\\\"inputTextAreaX($event.target.value)\\\"\\r\\n      rows=4\\r\\n      floating-label\\r\\n      [disabled]=\\\"dataInFlight\\\"\\r\\n      [style.width]=\\\"'100%'\\\"></mdl-textfield>\\r\\n\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Y coordinates (cm @iso)\\\"\\r\\n      [(ngModel)]=\\\"textAreaY\\\"\\r\\n      (input)=\\\"inputTextAreaY($event.target.value)\\\"\\r\\n      rows=4\\r\\n      floating-label\\r\\n      [disabled]=\\\"dataInFlight\\\"\\r\\n      [style.width]=\\\"'100%'\\\"></mdl-textfield>\\r\\n\\r\\n    <p *ngIf=\\\"!equalLengths\\\">\\r\\n      The x and y coordinate lengths need to be the same as each other.\\r\\n    </p>\\r\\n\\r\\n    <p *ngIf=\\\"this.parameterisation.insert.x.length < 3 || this.parameterisation.insert.y.length < 3\\\">\\r\\n      You need at least 3 data points to create an insert shape.\\r\\n    </p>\\r\\n\\r\\n    <div style=\\\"width:100%; height:30px\\\"></div>\\r\\n\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Load demo data\\\"\\r\\n      [disabled]=\\\"submitDisabled\\\"\\r\\n      (click)=\\\"loadDemoData()\\\">Load Demo Data         \\r\\n    </button>\\r\\n\\r\\n    <div style=\\\"width:20px; height:30px\\\"></div>\\r\\n\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Parameterise insert\\\"\\r\\n      [disabled]=\\\"submitDisabled || !xInputValid || !yInputValid || !equalLengths\\\"\\r\\n      (click)=\\\"onSubmit()\\\">Parameterise Insert          \\r\\n    </button>\\r\\n\\r\\n\\r\\n\\r\\n    <div [hidden]=\\\"serverResponseValid\\\">\\r\\n      {{serverErrorMessage}}\\r\\n    </div>\\r\\n\\r\\n    <div style=\\\"height:20px; width:100%;\\\"></div>\\r\\n\\r\\n    <my-plot \\r\\n      [insert_x]=\\\"parameterisation.insert.x\\\"\\r\\n      [insert_y]=\\\"parameterisation.insert.y\\\"\\r\\n      [circle]=\\\"parameterisation.circle\\\"\\r\\n      [ellipse]=\\\"parameterisation.ellipse\\\"\\r\\n      [enabled]=\\\"xInputValid && yInputValid && equalLengths\\\">\\r\\n    </my-plot>\\r\\n\\r\\n    <div style=\\\"height:20px; width:20px;\\\"></div>\\r\\n\\r\\n    <my-width-length-table\\r\\n      [width]=\\\"parameterisation.width\\\"\\r\\n      [length]=\\\"parameterisation.length\\\"\\r\\n      [enabled]=\\\"xInputValid && yInputValid && equalLengths\\\">\\r\\n    </my-width-length-table>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Send parameterisation to model</h5>\\r\\n    <p>\\r\\n      Once you have parameterised an insert shape you may either predict this insert with the model, or you may add the insert to the model.\\r\\n    </p>\\r\\n    <p>\\r\\n      To predict the insert with the model you must have filled in the correct machine ID, energy, applicator, and ssd in the text boxes below.\\r\\n      Furthermore these inputs need to correspond to one of the \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        machine specifications you have defined.\\r\\n      </a>\\r\\n    </p>\\r\\n    <p>\\r\\n      To append the current insert shape along with its measured factor to the model you must have filled in the corresponding machine ID, energy, applicator, ssd, and measured factor in the text boxes below.\\r\\n      Once again the machine specifications given need to correspond to one of the \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        machine specifications you have defined.\\r\\n      </a>\\r\\n    </p>\\r\\n\\r\\n\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Machine (ID)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.machine\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n\\r\\n    <p *ngIf=\\\"!machineExists\\\">\\r\\n      This machine ID does not exist within your \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        provided machine specifications.\\r\\n      </a>\\r\\n    </p>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Energy (Nominal or MeV)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.energy\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Applicator (ID)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.applicator\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"SSD (cm)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.ssd\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n\\r\\n    <p *ngIf=\\\"!machineSettingsExist\\\">\\r\\n      These specific machine settings do not exist within your       \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        provided machine specifications.\\r\\n      </a>\\r\\n    </p>\\r\\n\\r\\n    <mdl-textfield #measuredFactor\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Measured insert factor (as per TG 25)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.factor\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Add measured factor to model\\\"\\r\\n      [disabled]=\\\"!ableToAddDataToModel || !machineSettingsExist || measuredFactor.value==null || measuredFactor.value=='' || submitDisabled || !xInputValid || !yInputValid || !equalLengths\\\"\\r\\n      (click)=\\\"addMeasuredFactor(measuredFactor.value)\\\">Add Measured Factor to Model            \\r\\n    </button>\\r\\n\\r\\n    <p *ngIf=\\\"dataAlreadyExistsOnModel && !submitDisabled && xInputValid && yInputValid && equalLengths && machineSettingsExist\\\">\\r\\n      This width, length, and measured factor combination exists within the model.       \\r\\n      <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n        View the model.\\r\\n      </a>\\r\\n    </p>\\r\\n    \\r\\n    <div style=\\\"height:20px; width:20px;\\\"></div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\"\\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Predict factor with model\\\"\\r\\n      [disabled]=\\\"!machineSettingsExist || submitDisabled || !xInputValid || !yInputValid || !equalLengths || parameterisation.width == null || parameterisation.length == null\\\"\\r\\n      (click)=\\\"predictFactor()\\\">Predict Factor with Model        \\r\\n    </button>\\r\\n\\r\\n    \\r\\n    <!--<p>\\r\\n      <font color=\\\"#d3d3d3\\\">\\r\\n        Currently the \\\"Predict Factor with Model\\\" button just changes the active machine specifications to match that given above and then takes you to the model component.\\r\\n        A future implementation is to have this button plot your insert shape on the model plot and display the predicted factor.\\r\\n      </font>\\r\\n    </p>-->\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\">\\r\\n    <h5>Change parameterisation server url (optional)</h5>\\r\\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default server is: <br>\\r\\n      <a>http://electronapi.simonbiggs.net/parameterise</a>       \\r\\n    </p>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Parameterisation Server Address\\\"\\r\\n      (input)=\\\"parameterisationServerChange($event.target.value)\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"parameteriseURL\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n  </div>\\r\\n\\r\\n  <!--<div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet\\\">\\r\\n    <h5>Edit raw coordinates</h5>\\r\\n    <my-json-input #jsonInput\\r\\n      [insert]=\\\"parameterisation.insert\\\"\\r\\n      [jsonDisabled]=\\\"dataInFlight\\\"\\r\\n      (insertUpdated)=\\\"insertUpdated($event)\\\"\\r\\n      (jsonStatus)=\\\"onJsonStatusChange($event)\\\">\\r\\n    </my-json-input>\\r\\n  </div>-->\\r\\n\\r\\n</div>\\r\\n\";\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar PageNotFoundComponent = (function () {\r\n\t    function PageNotFoundComponent() {\r\n\t    }\r\n\t    PageNotFoundComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-page-not-found',\r\n\t            template: __webpack_require__(67)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], PageNotFoundComponent);\r\n\t    return PageNotFoundComponent;\r\n\t}());\r\n\texports.PageNotFoundComponent = PageNotFoundComponent;\r\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    This page has not been found. Please provide feedback ...\\r\\n  </div>\\r\\n</div>\";\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\tvar HomeComponent = (function () {\r\n\t    function HomeComponent(myTitleService) {\r\n\t        this.myTitleService = myTitleService;\r\n\t    }\r\n\t    HomeComponent.prototype.ngOnInit = function () {\r\n\t        this.myTitleService.setTitle('Home');\r\n\t    };\r\n\t    HomeComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-home',\r\n\t            template: __webpack_require__(69)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [title_service_1.TitleService])\r\n\t    ], HomeComponent);\r\n\t    return HomeComponent;\r\n\t}());\r\n\texports.HomeComponent = HomeComponent;\r\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div itemscope itemtype=\\\"http://schema.org/SoftwareApplication\\\" class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h3 itemprop=\\\"name\\\">Electron insert factor modelling</h3>\\r\\n    <p>\\r\\n      Tags: <span itemprop=\\\"applicationCategory\\\">Medical physics, electron inserts, electron cutouts, Python, Angular2, Bokeh, spline modelling</span><br>\\r\\n      Last update: <span itemprop=\\\"datePublished\\\" content=\\\"2016-10-18\\\">2016-10-23</span><br>\\r\\n      Version: <span itemprop=\\\"softwareVersion\\\">0.1.4-beta</span><br>\\r\\n      Operating system: <span itemprop=\\\"operatingSystem\\\">Windows, Linux, Mac, Android, and iOS</span> <br>\\r\\n      Requirements: <span itemprop=\\\"requirements\\\">A browser that supports <a href=\\\"http://caniuse.com/#feat=namevalue-storage\\\">local storage</a></span><br>\\r\\n      Developed by: <span itemprop=\\\"author\\\" itemscope itemtype=\\\"http://schema.org/Person\\\"><a itemprop=\\\"name\\\" href=\\\"https://github.com/SimonBiggs\\\">Simon Biggs</a></span>\\r\\n\\r\\n    </p>\\r\\n    \\r\\n    <h4>Description</h4>\\r\\n    <p>\\r\\n      This online web app is for the modelling of the portion of the electron output factor that is dependent on the shape of the shielding insert mounted within the applicator. This allows modelling insert factors using only the measured factors already available at a centre. Should all outliers be removed from the data set the user might expect as low as 0.5% standard uncertainty for factor prediction with as little as 8 data points.\\r\\n    </p>\\r\\n\\r\\n\\r\\n    <p>If you have any issues or feedback please contact me at <a href=\\\"mailto:mail@simonbiggs.net\\\">mail@simonbiggs.net</a>.</p>\\r\\n\\r\\n    <h4>Instructions</h4>\\r\\n    <h5>Overview</h5>\\r\\n    <p>This web app is divided into four logical components:</p>\\r\\n      <ul>\\r\\n        <li>   \\r\\n          Defining your centre specific machine specifications within the   \\r\\n          <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n            machine specifications component\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          Insert shape extraction from a dicom patient plan within the\\r\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n            dicom component\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          Parameterise the insert shapes into equivalent widths and lengths within the\\r\\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n            parameterisation component\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          Take at least 8 widths, lengths, and measured factors for a given machine, applicator, energy, ssd combination and create an empirical model within the\\r\\n          <a routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <p>\\r\\n        All your model and machine data is saved on your local machine within your browser. \\r\\n        Your progress will be saved as long as you do not clear your browser data.\\r\\n        In the future I plan to implement a data export and import feature, as well as the ability to sync models between browsers via a server.\\r\\n        Currently however the only place your web app data is being stored is on your local machine.\\r\\n      </p>\\r\\n\\r\\n       \\r\\n      \\r\\n      <h5>To demo</h5>\\r\\n      <p>\\r\\n        If you wish to simply demo this app these are the following steps you can take:\\r\\n      </p>\\r\\n      <ul>\\r\\n        <li>\\r\\n          Within the \\r\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n            dicom component \\r\\n          </a>\\r\\n          download the demo dicom file, load it into the web app and see the insert shapes be pulled from the dicom file without any network traffic\\r\\n        </li>\\r\\n        <li>\\r\\n          Within the \\r\\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n            parameterise component\\r\\n          </a>\\r\\n          press the \\\"Load Demo Data\\\" button and then press the \\\"Parameteterise Insert\\\" button to see the parameterisation algorithim in action\\r\\n        </li>\\r\\n        <li>\\r\\n          Within the \\r\\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component\\r\\n          </a>\\r\\n          press the \\\"Load Demo Data\\\" button and then press the \\\"Run Spline Model\\\" to see the spline model being created. \\r\\n          You can then either hover over the model, or tap on the model to view the relevant values.\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <h5>To implement in your centre</h5>\\r\\n      <p>\\r\\n        To implement this web app in your centre you need to do the following:\\r\\n      </p>\\r\\n      <ul>\\r\\n        <li>  \\r\\n          Specify the machine models and the corresponding applicators, energies, and ssds within the    \\r\\n          <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n            machine specification component.\\r\\n          </a>\\r\\n        </li>\\r\\n        <li> \\r\\n          Collate / measure your electron insert factor measuremens. These factors are to measured in accordance to TG 25.   \\r\\n        </li>\\r\\n        <li>\\r\\n          If the insert shapes are ellipses, you may directly input the ellipse widths and lengths as projected to the isocentre within the \\r\\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component.\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          If the insert shape is a generic shape or you know the x and y coordinates of your insert then determine the equivalent ellipse widths and lengths by inputting x and y coordinates as defined at isocentre within the \\r\\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n            parameterisation component.\\r\\n          </a>          \\r\\n        </li>\\r\\n        <li>\\r\\n          If the insert shape is defined within your planning system, export the patient plan to dicom and then read the insert coordinates from the dicom file using the\\r\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n            dicom component.\\r\\n          </a>          \\r\\n        </li>\\r\\n        <li>\\r\\n          Once you have the corresponding equivalent ellipse widths and lengths for your measured factors these may be appended to the relevant machine configuration within the \\r\\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          Whenever a machine configuration gets at least 8 data points you may press the \\\"Run Spline Model\\\" on the \\r\\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component\\r\\n          </a>\\r\\n          which will allow the prediction of insert factors for other widths and lengths.\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <h5>To use the web app after it has been implemented</h5>\\r\\n      <ul>\\r\\n        <li>\\r\\n          Export the patient plan to dicom and then read the insert coordinates from the dicom file using the\\r\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n            dicom component.\\r\\n          </a>          \\r\\n        </li>\\r\\n        <li>\\r\\n          Press the \\\"Parameterise Insert\\\" button to determine the equivalent ellipse width and length\\r\\n        </li>\\r\\n        <li>\\r\\n          Press the \\\"Predict Factor with Model\\\" button to automatically change the machine configuration to that which matches your loaded insert\\r\\n        </li>\\r\\n        <li>\\r\\n          Hover your mouse over the relevant width and length within the model to predict your insert factor\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n\\r\\n    <h4>Publications</h4>\\r\\n    <!--<h6>Original paper</h6>-->\\r\\n    <p>The paper detailing the algorithim and its validation:</p>\\r\\n    <p>\\r\\n      S. Biggs, M. Sobolewski, R. Murry, J. Kenny, Spline modelling electron insert factors using routine measurements. Physica Medica (2015), <a href=\\\"http://dx.doi.org/10.1016/j.ejmp.2015.11.002\\\">doi:10.1016/j.ejmp.2015.11.002</a>.\\r\\n    </p>\\r\\n\\r\\n    <!--<h6>EPSM2016 Poster</h6>\\r\\n    <ul>\\r\\n      <li><a href=\\\"https://www.dropbox.com/s/09ij94rqc012ad8/ElectronInsertsWebAppPoster.jpg?dl=1\\\">Low resolution</a></li>\\r\\n      <li><a href=\\\"https://www.dropbox.com/s/ga5e64echv255b8/ElectronsPoster.svg?dl=1\\\">Original SVG file</a></li>\\r\\n    </ul>-->\\r\\n\\r\\n    <h4>Disclaimer</h4>\\r\\n    <p>\\r\\n      Any use of this web app or any of its code has you accepting the AGPL3+ license which includes no warranty that this code is fit for a particular purpose. Attempts have been made to make the code transparent and it is recommended that an experienced python programmer and physicist who understands the procedure outlined in the paper and the requirements of your centre identifies whether or not this method and code is fit for your use.</p>\\r\\n\\r\\n    <h4>Use of Google Analytics</h4>\\r\\n    <p>\\r\\n      To aid in quickly identifying bugs, user experience issues, and documenting app usage the Google Analytics service is employed. \\r\\n      This collates and reports page views, button clicks, and demographic information based upon your IP address.\\r\\n      For more information on privacy regarding Google Analytics <a href=\\\"https://support.google.com/analytics/answer/6004245\\\">click here.</a>\\r\\n      If you wish to opt-out of Google Analytics data collection please <a href=\\\"https://tools.google.com/dlpage/gaoptout\\\">click here.</a>\\r\\n    </p>   \\r\\n\\r\\n\\r\\n    <h4>Steps required to freeze your own version of this web app</h4>\\r\\n      As I make improvements to this web app I will be updating this online version. \\r\\n      You may desire to not have the web app you are using day to day change on you.\\r\\n      To achieve this you can create your own version of the server and your own version of the web app.\\r\\n      \\r\\n      For now this will require a bit of your own working out until I provide further instructions.\\r\\n\\r\\n\\r\\n\\r\\n    <h4>Source code</h4>\\r\\n    <p>\\r\\n      For the purpose of coding transparency and to enable the user to take responsibility for the code themselves any redistribution\\r\\n      or derivative works of this web app need to include the source code of any additions made and need to include a way\\r\\n      for users to easily access the source code of each of the components used or linked to.\\r\\n    </p>\\r\\n\\r\\n    <h5>Server Code</h5>\\r\\n\\r\\n    <h6>Base Electron Insert Factor Source Code</h6>\\r\\n    <p>\\r\\n      The python file which does the shape parameterisation and insert factor modelling which is used by the server is found here:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py\\\">\\r\\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py</a>\\r\\n    </p>\\r\\n\\r\\n    <h6>Tornado REST API</h6>\\r\\n    <p>\\r\\n      The Tornado REST API is found here:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py\\\">\\r\\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py</a>\\r\\n    </p>\\r\\n\\r\\n    <h6>Heroku App code</h6>\\r\\n    <p>\\r\\n      The code to make the heroku app is found here:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server\\\">\\r\\n              https://github.com/SimonBiggs/electronfactor-server</a>\\r\\n    </p>\\r\\n\\r\\n    <h5>Web App Code</h5>\\r\\n    <p>\\r\\n      The source code for this web app is found here:\\r\\n      <a itemprop=\\\"downloadUrl\\\" href=\\\"https://github.com/SimonBiggs/electroninserts-webapp\\\">\\r\\n            https://github.com/SimonBiggs/electroninserts-webapp</a>\\r\\n    </p>\\r\\n\\r\\n    <h5>Libraries used</h5>\\r\\n    <h6>Bokehjs</h6>\\r\\n    <p>\\r\\n      The bokehjs library is used for plots. Documentation can be found here:\\r\\n      <a href=\\\"http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs\\\">\\r\\n              http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs</a>\\r\\n    </p>\\r\\n    <p>\\r\\n      Source code can be found here:\\r\\n      <a href=\\\"https://github.com/bokeh/bokeh/tree/master/bokehjs\\\">\\r\\n              https://github.com/bokeh/bokeh/tree/master/bokehjs</a>\\r\\n    </p>\\r\\n\\r\\n    <h6>dcmjs</h6>\\r\\n    <p>\\r\\n      The dcmjs library is used for reading dicom files within javascript. Website can be found here:\\r\\n      <a href=\\\"http://dcmjs.org/\\\">\\r\\n              http://dcmjs.org/</a>\\r\\n    </p>\\r\\n    <p>\\r\\n      Source code can be found here:\\r\\n      <a href=\\\"https://github.com/commontk/dcmjs\\\">\\r\\n              https://github.com/commontk/dcmjs</a>\\r\\n    </p>\\r\\n\\r\\n    <h6>Angular2</h6>\\r\\n    <p>\\r\\n      This interface was built using Angular2. Documentation can be found here:\\r\\n      <a href=\\\"https://angular.io/docs/ts/latest/\\\">\\r\\n              https://angular.io/docs/ts/latest/</a>\\r\\n    </p>\\r\\n    <p>\\r\\n      Source code can be found here:\\r\\n      <a href=\\\"https://github.com/angular/angular\\\">\\r\\n              https://github.com/angular/angular</a>\\r\\n    </p>\\r\\n    <h6>Remaining libraries</h6>\\r\\n    <p>\\r\\n      For all remaining libraries used please see the npm package.json file:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json\\\">\\r\\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json</a>\\r\\n    </p>\\r\\n    <p>\\r\\n      And the index file for various imports:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html\\\">\\r\\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html</a>\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\";\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\tvar electron_api_service_1 = __webpack_require__(59);\r\n\tvar model_data_1 = __webpack_require__(64);\r\n\tvar CreateModelComponent = (function () {\r\n\t    function CreateModelComponent(modelData, myTitleService, electronApiService, ngZone) {\r\n\t        var _this = this;\r\n\t        this.modelData = modelData;\r\n\t        this.myTitleService = myTitleService;\r\n\t        this.electronApiService = electronApiService;\r\n\t        this.textboxInput = {\r\n\t            width: null,\r\n\t            length: null,\r\n\t            measuredFactor: null\r\n\t        };\r\n\t        this.textboxLabels = {\r\n\t            width: \"Equivalent ellipse widths (cm @iso)\",\r\n\t            length: \"Equivalent ellipse lengths (cm @iso)\",\r\n\t            measuredFactor: \"Measured insert factor (as per TG 25)\"\r\n\t        };\r\n\t        this.textboxValid = {\r\n\t            width: true,\r\n\t            length: true,\r\n\t            measuredFactor: true\r\n\t        };\r\n\t        this.currentSettings = {\r\n\t            machine: null,\r\n\t            energy: null,\r\n\t            applicator: null,\r\n\t            ssd: null\r\n\t        };\r\n\t        this.lengthSmallerThanWidth = false;\r\n\t        this.plot_width = 600;\r\n\t        this.dataInFlight = false;\r\n\t        window.onresize = function (e) {\r\n\t            ngZone.run(function () {\r\n\t                _this.updatePlotWidth();\r\n\t            });\r\n\t        };\r\n\t    }\r\n\t    CreateModelComponent.prototype.ngOnInit = function () {\r\n\t        this.myTitleService.setTitle('Create Model');\r\n\t        this.modelURL = localStorage.getItem(\"modelURL\");\r\n\t        if (this.modelURL == null) {\r\n\t            this.modelURL = 'http://electronapi.simonbiggs.net/model';\r\n\t        }\r\n\t        this.updatePlotWidth();\r\n\t    };\r\n\t    CreateModelComponent.prototype.updatePlotWidth = function () {\r\n\t        this.plot_width = this.plotContainer.nativeElement.clientWidth;\r\n\t    };\r\n\t    CreateModelComponent.prototype.currentMachineSettingsUpdated = function (newSettings) {\r\n\t        for (var _i = 0, _a = ['machine', 'energy', 'applicator', 'ssd']; _i < _a.length; _i++) {\r\n\t            var key = _a[_i];\r\n\t            this.currentSettings[key] = newSettings[key];\r\n\t        }\r\n\t        this.loadMeasuredData();\r\n\t        this.checkLengthSmallerThanWidth();\r\n\t    };\r\n\t    CreateModelComponent.prototype.createKey = function () {\r\n\t        var key = ('{\"machine\":' + JSON.stringify(String(this.currentSettings.machine)) + ',' +\r\n\t            '\"energy\":' + JSON.stringify(Number(this.currentSettings.energy)) + ',' +\r\n\t            '\"applicator\":' + JSON.stringify(String(this.currentSettings.applicator)) + ',' +\r\n\t            '\"ssd\":' + JSON.stringify(Number(this.currentSettings.ssd)) +\r\n\t            '}');\r\n\t        return key;\r\n\t    };\r\n\t    CreateModelComponent.prototype.loadMeasuredData = function () {\r\n\t        var localStorageKey = this.createKey();\r\n\t        var parsedData = JSON.parse(localStorage.getItem(localStorageKey));\r\n\t        this.modelData.fillFromObject(parsedData);\r\n\t        this.updateTextboxInput();\r\n\t    };\r\n\t    CreateModelComponent.prototype.saveModel = function () {\r\n\t        var key = this.createKey();\r\n\t        localStorage.setItem(key, JSON.stringify(this.modelData));\r\n\t    };\r\n\t    CreateModelComponent.prototype.updateTextboxInput = function () {\r\n\t        for (var _i = 0, _a = ['width', 'length', 'measuredFactor']; _i < _a.length; _i++) {\r\n\t            var key = _a[_i];\r\n\t            this.textboxInput[key] = String(this.modelData.measurement[key])\r\n\t                .replace(/,/g, ', ');\r\n\t        }\r\n\t    };\r\n\t    CreateModelComponent.prototype.checkLengthSmallerThanWidth = function () {\r\n\t        this.lengthSmallerThanWidth = false;\r\n\t        for (var i = 0; i < this.modelData.measurement.width.length; i++) {\r\n\t            if (this.modelData.measurement.width[i] > this.modelData.measurement.length[i]) {\r\n\t                this.lengthSmallerThanWidth = true;\r\n\t                return;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    CreateModelComponent.prototype.validateInput = function (input) {\r\n\t        // return /^(-?\\d*(\\.\\d+)?[,;\\s]+)*-?\\d*(\\.\\d+)?[,;\\s]*$/.test(input)\r\n\t        return true;\r\n\t    };\r\n\t    CreateModelComponent.prototype.onTextboxChange = function (key, newInput) {\r\n\t        this.textboxValid[key] = false;\r\n\t        this.modelData.model.reset();\r\n\t        try {\r\n\t            if (this.validateInput(newInput)) {\r\n\t                this.modelData.measurement[key] = eval('[' + newInput.replace(/[,;\\n\\t]\\s*/g, ', ') + ']');\r\n\t                this.saveModel();\r\n\t                this.textboxValid[key] = true;\r\n\t                this.checkLengthSmallerThanWidth();\r\n\t            }\r\n\t        }\r\n\t        catch (err) {\r\n\t            console.log(err);\r\n\t        }\r\n\t    };\r\n\t    CreateModelComponent.prototype.basicServerSubmit = function () {\r\n\t        var _this = this;\r\n\t        this.dataInFlight = true;\r\n\t        this.electronApiService.sendToServer(this.modelURL, JSON.stringify(this.modelData.measurement))\r\n\t            .then(function (modelResult) {\r\n\t            _this.modelData.model.width = modelResult.model_width;\r\n\t            _this.modelData.model.length = modelResult.model_length;\r\n\t            _this.modelData.model.predictedFactor = modelResult.model_factor;\r\n\t            _this.dataInFlight = false;\r\n\t            _this.saveModel();\r\n\t        });\r\n\t    };\r\n\t    CreateModelComponent.prototype.modelServerChange = function (newModelURL) {\r\n\t        localStorage.setItem(\"modelURL\", newModelURL);\r\n\t    };\r\n\t    CreateModelComponent.prototype.defaultServer = function () {\r\n\t        this.modelURL = 'http://electronapi.simonbiggs.net/model';\r\n\t        localStorage.setItem(\"modelURL\", this.modelURL);\r\n\t    };\r\n\t    CreateModelComponent.prototype.loadDemoData = function () {\r\n\t        for (var _i = 0, _a = ['machine', 'energy', 'applicator', 'ssd']; _i < _a.length; _i++) {\r\n\t            var key = _a[_i];\r\n\t            this.currentSettings[key] = null;\r\n\t        }\r\n\t        this.settingsPicker.currentSettings = this.currentSettings;\r\n\t        this.modelData.model.reset();\r\n\t        this.modelData.measurement.width = [\r\n\t            3.71, 6.78, 6.3, 7.56, 5.26, 6.53, 7.08, 4.38, 3.66,\r\n\t            4.21, 4.21, 6.54, 5.86, 3.17, 6., 8.06, 6.31, 5.26,\r\n\t            4.21, 5.21, 4.59, 5.34, 6.41, 5.26, 5.25, 7.82, 4.2,\r\n\t            3.16, 7.18, 5.72, 6.08, 6.64, 8.4, 4.59, 3.15, 4.67,\r\n\t            4.21, 9.45, 7.64, 3.17, 3.17, 7.36];\r\n\t        this.modelData.measurement.length = [\r\n\t            4.36, 10.97, 6.33, 10.05, 13.66, 10.99, 10.77, 5.47,\r\n\t            5.04, 8.41, 13.65, 8.41, 8.62, 9.43, 7.97, 11.85,\r\n\t            8.24, 10.52, 6.82, 11.4, 5.67, 9.64, 8.69, 8.41,\r\n\t            5.26, 10.85, 4.21, 5.25, 11.27, 11.6, 6.64, 9.81,\r\n\t            8.42, 6.54, 3.16, 6.28, 10.51, 9.47, 8.99, 13.64,\r\n\t            6.83, 7.37];\r\n\t        this.modelData.measurement.measuredFactor = [\r\n\t            0.9489, 1.0067, 0.9858, 1.0045, 0.9868, 1.0004, 1.0052,\r\n\t            0.9634, 0.9437, 0.9708, 0.9757, 0.9931, 0.9896, 0.9492,\r\n\t            0.9911, 1.0067, 0.9923, 0.9879, 0.9609, 0.9884, 0.9587,\r\n\t            0.9934, 0.9991, 0.9831, 0.9705, 1.0019, 0.9562, 0.9348,\r\n\t            0.9987, 0.9989, 0.9933, 0.9991, 1.0067, 0.9683, 0.9296,\r\n\t            0.9735, 0.9709, 1.0084, 1.0028, 0.953, 0.9484, 1.0032];\r\n\t        this.checkLengthSmallerThanWidth();\r\n\t        this.updateTextboxInput();\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild('plotContainer'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], CreateModelComponent.prototype, \"plotContainer\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('settingsPicker'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], CreateModelComponent.prototype, \"settingsPicker\", void 0);\r\n\t    CreateModelComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-create-model',\r\n\t            template: __webpack_require__(71)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [model_data_1.ModelData, title_service_1.TitleService, electron_api_service_1.ElectronApiService, core_1.NgZone])\r\n\t    ], CreateModelComponent);\r\n\t    return CreateModelComponent;\r\n\t}());\r\n\texports.CreateModelComponent = CreateModelComponent;\r\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Description</h5>\\r\\n    <p>\\r\\n      Use this component to turn a set of at least 8 measured factors with corresponding equivalent widths and lengths into a spline model.\\r\\n      These widths and lengths need to be determined using the parameterisation method employed within the \\r\\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n        parameterisation component.\\r\\n      </a>\\r\\n    </p>\\r\\n    <p>\\r\\n      You are free to edit the widths, lengths, and factors manually below, or have the       \\r\\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n        parameterisation component\\r\\n      </a>\\r\\n      automatically add the measured factors to the correct model. Both work interchangably.\\r\\n      You may only add shapes via the \\r\\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n        parameterisation component\\r\\n      </a>\\r\\n      if machine ID, applicator, energy, ssd, and measured factor are filled in and they match a machine configuration defined within the \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        specifications component.\\r\\n      </a> \\r\\n    </p>\\r\\n    <p>\\r\\n      A spline model is only valid for a single machine configuration. \\r\\n      Therefore each machine, applicator, energy, ssd has its own model. \\r\\n      Using the machine configuration section below you can change between the configurations.\\r\\n      This will only work if you have already\\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        defined your machine configurations.\\r\\n      </a> \\r\\n    </p>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Choose machine configuration</h5>\\r\\n    <p>\\r\\n      Here is where you select the machine specifications for the model you with to edit. \\r\\n      You will only see options here if you have actually       \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        defined your machine configurations.\\r\\n      </a> \\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div [style.width]=\\\"'100%'\\\">\\r\\n    <my-choose-specifications #settingsPicker\\r\\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\\r\\n    </my-choose-specifications>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <div [style.width]=\\\"'100%'\\\" [style.height]=\\\"'30px'\\\"></div>\\r\\n    <h5>\\r\\n      The model\\r\\n      <span *ngIf=\\\"currentSettings.machine != null && currentSettings.energy != null && currentSettings.energy != 0 && currentSettings.applicator != null && currentSettings.applicator != '' && currentSettings.ssd != null && currentSettings.ssd != 0\\\">\\r\\n        for machine ID {{currentSettings.machine}}, at an energy of {{currentSettings.energy}} MeV, on the {{currentSettings.applicator}} applicator at {{currentSettings.ssd}} cm SSD\\r\\n      </span>\\r\\n      </h5>    \\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n\\r\\n    <h6>Input widths, lengths, and factors</h6>\\r\\n    <p>\\r\\n      Use the following text boxes to directly edit the measured data used by the spline model.\\r\\n    </p>\\r\\n    <p>\\r\\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\\r\\n      This web app should handle copying and pasting from a range of sources (including excel).\\r\\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\\r\\n    </p>\\r\\n\\r\\n    <div *ngFor=\\\"let key of ['width', 'length', 'measuredFactor']\\\">\\r\\n      <mdl-textfield \\r\\n        type=\\\"text\\\"\\r\\n        [label]=\\\"textboxLabels[key]\\\"\\r\\n        [(ngModel)]=\\\"this.textboxInput[key]\\\"\\r\\n        (input)=\\\"onTextboxChange(key, $event.target.value)\\\"\\r\\n        rows=4\\r\\n        floating-label\\r\\n        [disabled]=\\\"dataInFlight\\\"\\r\\n        [style.width]=\\\"'100%'\\\"></mdl-textfield>\\r\\n      <p *ngIf=\\\"!textboxValid[key]\\\">\\r\\n        The {{key}} input is invalid\\r\\n      </p>\\r\\n      <span *ngIf=\\\"key=='length'\\\">\\r\\n        <p *ngIf=\\\"lengthSmallerThanWidth\\\">\\r\\n          There exists a length value that is smaller than its corresponding width. Spline modelling is disabled as a result.\\r\\n        </p>\\r\\n      </span>\\r\\n    </div>\\r\\n    <p *ngIf=\\\"modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length\\\">\\r\\n      The lengths of the inputs are not equal. Spline modelling is disabled as a result.\\r\\n    </p>\\r\\n    <p *ngIf=\\\"modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8\\\">\\r\\n      There are currently less than 8 data points. Spline modelling is disabled as a result.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\" #plotContainer>\\r\\n    <h6>The spline model</h6>\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Model | Load demo data\\\"\\r\\n      [disabled]=\\\"dataInFlight\\\"\\r\\n      (click)=\\\"loadDemoData()\\\">Load demo data         \\r\\n    </button>\\r\\n      \\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Model | Calculate spline model\\\"\\r\\n      [disabled]=\\\"modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8 || dataInFlight || modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length || !textboxValid['width'] || !textboxValid['length'] || !textboxValid['measuredFactor'] || lengthSmallerThanWidth\\\"\\r\\n      (click)=\\\"basicServerSubmit()\\\">Calculate Spline Model\\r\\n    </button>\\r\\n    \\r\\n\\r\\n    <div *ngIf=\\\"modelData.measurement.width.length > 0 && modelData.measurement.length.length > 0 && modelData.measurement.measuredFactor.length > 0\\\">\\r\\n      <my-bokeh-create-model\\r\\n        [title]=\\\"'Model Plot'\\\"\\r\\n        [scatter_x]=\\\"modelData.measurement.width\\\"\\r\\n        [scatter_y]=\\\"modelData.measurement.length\\\"\\r\\n        [scatter_z]=\\\"modelData.measurement.measuredFactor\\\"\\r\\n        [pcolour_x]=\\\"modelData.model.width\\\"\\r\\n        [pcolour_y]=\\\"modelData.model.length\\\"\\r\\n        [pcolour_z]=\\\"modelData.model.predictedFactor\\\"\\r\\n        [plot_width]=\\\"plot_width\\\"\\r\\n        [plot_height]=\\\"380\\\">\\r\\n      </my-bokeh-create-model>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"modelData.measurement.width.length == 0 || modelData.measurement.length.length == 0|| modelData.measurement.measuredFactor.length == 0\\\">\\r\\n      <p>\\r\\n        <font color=\\\"red\\\">There is currently no data for this combination.</font> If you wish to load some demo data to see the model in action press the \\\"load demo data\\\" button below.\\r\\n        To set this model up with your own data follow the instructions in the description at the top of this page.\\r\\n      </p>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\">\\r\\n    <h5>Change modelling server url (optional)</h5>\\r\\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default is: <br>\\r\\n      <a (click)=\\\"defaultServer()\\\">http://electronapi.simonbiggs.net/model</a>        \\r\\n    </p>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Spline model server address\\\"\\r\\n      (input)=\\\"modelServerChange($event.target.value)\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"modelURL\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\";\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\tvar model_data_1 = __webpack_require__(64);\r\n\tvar sanitise_validation_1 = __webpack_require__(73);\r\n\tvar UseModelComponent = (function () {\r\n\t    function UseModelComponent(modelData, myTitleService, ngZone) {\r\n\t        var _this = this;\r\n\t        this.modelData = modelData;\r\n\t        this.myTitleService = myTitleService;\r\n\t        this.textboxInput = {\r\n\t            width: null,\r\n\t            length: null,\r\n\t            area: null,\r\n\t            measuredFactor: null\r\n\t        };\r\n\t        this.textboxLabels = {\r\n\t            width: \"Width of ellipse given by diameter of largest encompassed circle (cm @iso)\",\r\n\t            length: \"Length of ellipse that matches insert shape area (cm @iso)\",\r\n\t            area: \"[Optional] Area of insert shape (cm^2 @iso)\",\r\n\t            measuredFactor: \"[Optional] Measured insert factor (as per TG 25)\"\r\n\t        };\r\n\t        this.textboxValid = {\r\n\t            width: true,\r\n\t            length: true,\r\n\t            area: true,\r\n\t            measuredFactor: true\r\n\t        };\r\n\t        this.currentSettings = {\r\n\t            machine: null,\r\n\t            energy: null,\r\n\t            applicator: null,\r\n\t            ssd: null\r\n\t        };\r\n\t        this.modelLookup = {};\r\n\t        this.predictionDifference = [];\r\n\t        this.lengthSmallerThanWidth = false;\r\n\t        this.plot_width = 600;\r\n\t        this.lastEdit = 'length';\r\n\t        window.onresize = function (e) {\r\n\t            ngZone.run(function () {\r\n\t                _this.updatePlotWidth();\r\n\t            });\r\n\t        };\r\n\t    }\r\n\t    UseModelComponent.prototype.ngOnInit = function () {\r\n\t        this.myTitleService.setTitle('Use Model');\r\n\t        this.updatePlotWidth();\r\n\t        this.updateModelLookup();\r\n\t        this.loadMeasuredData();\r\n\t        this.updatePredictedFactors();\r\n\t    };\r\n\t    // linearInterpolate(x: number, x1: number, x2: number, y1: number, y2: number) {\r\n\t    //   let m = (y2 - y1) / (x2 - x1)\r\n\t    //   let c = y1 - m * x1\r\n\t    //   let y = m * x + c\r\n\t    //   return y\r\n\t    // }\r\n\t    // bilinearInterpolate(\r\n\t    //     x: number, y: number, \r\n\t    //     x_1: number, x_2: number, \r\n\t    //     y_1: number, y_2: number, \r\n\t    //     z_x1y1: number, z_x1y2: number, z_x2y1: number, z_x2y2: number) {\r\n\t    //   let z_xy1 = this.linearInterpolate(x, x_1, x_2, z_x1y1, z_x2y1)\r\n\t    //   let z_xy2 = this.linearInterpolate(x, x_1, x_2, z_x1y2, z_x2y2)\r\n\t    //   let z_xy = this.linearInterpolate(y, y_1, y_2, z_xy1, z_xy2)\r\n\t    //   return z_xy\r\n\t    // }\r\n\t    UseModelComponent.prototype.lookupFactor = function (width, length) {\r\n\t        width = Math.round(width * 10) / 10;\r\n\t        length = Math.round(length * 10) / 10;\r\n\t        var key;\r\n\t        key = String(width) + \",\" + String(length);\r\n\t        return Math.round(this.modelLookup[key] * 1000) / 1000;\r\n\t    };\r\n\t    UseModelComponent.prototype.updatePredictedFactors = function () {\r\n\t        this.modelData.predictions.predictedFactor = [];\r\n\t        var amount = Math.min(this.modelData.predictions.width.length, this.modelData.predictions.length.length);\r\n\t        var predictedFactor;\r\n\t        var width;\r\n\t        var length;\r\n\t        for (var i = 0; i < amount; i++) {\r\n\t            width = this.modelData.predictions.width[i];\r\n\t            length = this.modelData.predictions.length[i];\r\n\t            predictedFactor = this.lookupFactor(width, length);\r\n\t            this.modelData.predictions.predictedFactor.push(predictedFactor);\r\n\t        }\r\n\t        this.updatePredictionDifference();\r\n\t    };\r\n\t    UseModelComponent.prototype.updatePredictionDifference = function () {\r\n\t        this.predictionDifference = [];\r\n\t        var measuredFactor;\r\n\t        var predictedFactor;\r\n\t        var difference;\r\n\t        for (var i in this.modelData.predictions.measuredFactor) {\r\n\t            measuredFactor = this.modelData.predictions.measuredFactor[i];\r\n\t            predictedFactor = this.modelData.predictions.predictedFactor[i];\r\n\t            difference = predictedFactor - measuredFactor;\r\n\t            difference = Math.round(difference * 1000) / 1000;\r\n\t            this.predictionDifference.push(difference);\r\n\t        }\r\n\t    };\r\n\t    UseModelComponent.prototype.updateModelLookup = function () {\r\n\t        this.modelLookup = {};\r\n\t        var key;\r\n\t        for (var i in this.modelData.model.width) {\r\n\t            key = String(this.modelData.model.width[i]) + \",\" + String(this.modelData.model.length[i]);\r\n\t            this.modelLookup[key] = this.modelData.model.predictedFactor[i];\r\n\t        }\r\n\t    };\r\n\t    UseModelComponent.prototype.convertLengthToArea = function (width, length) {\r\n\t        var area = Math.PI * width * length / 4;\r\n\t        return Math.round(area * 10) / 10;\r\n\t    };\r\n\t    UseModelComponent.prototype.convertAreaToLength = function (width, area) {\r\n\t        var length = 4 * area / (Math.PI * width);\r\n\t        return Math.round(length * 10) / 10;\r\n\t    };\r\n\t    UseModelComponent.prototype.updateAreaFromLength = function () {\r\n\t        var width;\r\n\t        var length;\r\n\t        var area;\r\n\t        this.modelData.predictions.area = [];\r\n\t        for (var i in this.modelData.predictions.length) {\r\n\t            width = this.modelData.predictions.width[i];\r\n\t            length = this.modelData.predictions.length[i];\r\n\t            area = this.convertLengthToArea(width, length);\r\n\t            this.modelData.predictions.area.push(area);\r\n\t        }\r\n\t    };\r\n\t    UseModelComponent.prototype.updateLengthFromArea = function () {\r\n\t        var width;\r\n\t        var length;\r\n\t        var area;\r\n\t        this.modelData.predictions.length = [];\r\n\t        for (var i in this.modelData.predictions.area) {\r\n\t            width = this.modelData.predictions.width[i];\r\n\t            area = this.modelData.predictions.area[i];\r\n\t            length = this.convertAreaToLength(width, area);\r\n\t            this.modelData.predictions.length.push(length);\r\n\t        }\r\n\t    };\r\n\t    UseModelComponent.prototype.updatePlotWidth = function () {\r\n\t        this.plot_width = this.plotContainer.nativeElement.clientWidth;\r\n\t    };\r\n\t    UseModelComponent.prototype.currentMachineSettingsUpdated = function (newSettings) {\r\n\t        for (var _i = 0, _a = ['machine', 'energy', 'applicator', 'ssd']; _i < _a.length; _i++) {\r\n\t            var key = _a[_i];\r\n\t            this.currentSettings[key] = newSettings[key];\r\n\t        }\r\n\t        this.loadMeasuredData();\r\n\t    };\r\n\t    // createLocalStorageKey() {\r\n\t    //   let localStorageKey = (\r\n\t    //     '{\"machine\":' + JSON.stringify(String(this.currentSettings.machine)) + ',' +\r\n\t    //     '\"energy\":' + JSON.stringify(Number(this.currentSettings.energy)) + ',' +\r\n\t    //     '\"applicator\":' + JSON.stringify(String(this.currentSettings.applicator)) + ',' +\r\n\t    //     '\"ssd\":' + JSON.stringify(Number(this.currentSettings.ssd)) +\r\n\t    //     '}')\r\n\t    //   return localStorageKey\r\n\t    // }\r\n\t    UseModelComponent.prototype.loadMeasuredData = function () {\r\n\t        this.modelData.loadModelData(this.currentSettings);\r\n\t        // let localStorageKey = this.createLocalStorageKey()\r\n\t        // let parsedData = JSON.parse(localStorage.getItem(localStorageKey))\r\n\t        // this.modelData.fillFromObject(parsedData)\r\n\t        if (this.modelData.predictions.length.length < this.modelData.predictions.area.length) {\r\n\t            this.updateLengthFromArea();\r\n\t        }\r\n\t        else {\r\n\t            this.updateAreaFromLength();\r\n\t        }\r\n\t        this.updateModelLookup();\r\n\t        this.updatePredictedFactors();\r\n\t        this.updateAllTextboxInputs();\r\n\t    };\r\n\t    UseModelComponent.prototype.saveModel = function () {\r\n\t        this.modelData.saveModelData(this.currentSettings);\r\n\t        // let localStorageKey = this.createLocalStorageKey()\r\n\t        // localStorage.setItem(localStorageKey, JSON.stringify(this.modelData))\r\n\t    };\r\n\t    UseModelComponent.prototype.updateAllTextboxInputs = function () {\r\n\t        for (var _i = 0, _a = ['width', 'length', 'area', 'measuredFactor']; _i < _a.length; _i++) {\r\n\t            var key = _a[_i];\r\n\t            this.updateTextboxInput(key);\r\n\t        }\r\n\t    };\r\n\t    UseModelComponent.prototype.updateTextboxInput = function (key) {\r\n\t        this.textboxInput[key] = String(this.modelData.predictions[key])\r\n\t            .replace(/,/g, ', ');\r\n\t    };\r\n\t    UseModelComponent.prototype.onTextboxChange = function (key, newInput) {\r\n\t        this.textboxValid[key] = false;\r\n\t        try {\r\n\t            if (sanitise_validation_1.validateInput(newInput)) {\r\n\t                this.modelData.predictions[key] = eval('[' + newInput.replace(/[,;\\n\\t]\\s*/g, ', ') + ']');\r\n\t                this.textboxValid[key] = true;\r\n\t                if (key == 'length' || (key == 'width' && this.lastEdit == 'length')) {\r\n\t                    this.updateAreaFromLength();\r\n\t                    this.updateTextboxInput('area');\r\n\t                    this.lastEdit = 'length';\r\n\t                }\r\n\t                if (key == 'area' || (key == 'width' && this.lastEdit == 'area')) {\r\n\t                    this.updateLengthFromArea();\r\n\t                    this.updateTextboxInput('length');\r\n\t                    this.lastEdit = 'area';\r\n\t                }\r\n\t                this.updatePredictedFactors();\r\n\t                this.saveModel();\r\n\t            }\r\n\t        }\r\n\t        catch (err) {\r\n\t            console.log(err);\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild('plotContainer'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], UseModelComponent.prototype, \"plotContainer\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('settingsPicker'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], UseModelComponent.prototype, \"settingsPicker\", void 0);\r\n\t    UseModelComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-use-model',\r\n\t            template: __webpack_require__(74)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [model_data_1.ModelData, title_service_1.TitleService, core_1.NgZone])\r\n\t    ], UseModelComponent);\r\n\t    return UseModelComponent;\r\n\t}());\r\n\texports.UseModelComponent = UseModelComponent;\r\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tfunction validateInput(input) {\r\n\t    // return /^(-?\\d*(\\.\\d+)?[,;\\s]+)*-?\\d*(\\.\\d+)?[,;\\s]*$/.test(input)\r\n\t    return /^[-\\d\\.,;\\sNa]*$/.test(input);\r\n\t}\r\n\texports.validateInput = validateInput;\r\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Use models</h5>\\r\\n    <p>\\r\\n      This component is where created models are used. \\r\\n      Factors for prediction will be able to be inputted using width, and then either length or area, and optionally\\r\\n      a measured factor can be included for the purpose of comparing model results with measurement.\\r\\n    </p>\\r\\n    <p>\\r\\n      You can either use the parameterisation component to parameterise your shapes, or if you have a large data set of \\r\\n      generic shapes you need only determine the diameter of the largest encompassed circle to define width, and then\\r\\n      you may input shape area instead of length.\\r\\n      This allows you to quickly check large data sets of previous measurements on generic shapes.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Choose machine configuration</h5>\\r\\n    <my-choose-specifications #settingsPicker\\r\\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\\r\\n    </my-choose-specifications>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Inserts being predicted</h5>\\r\\n    <div *ngFor=\\\"let key of ['width', 'length', 'area', 'measuredFactor']\\\">\\r\\n      <mdl-textfield \\r\\n        type=\\\"text\\\"\\r\\n        [label]=\\\"textboxLabels[key]\\\"\\r\\n        [(ngModel)]=\\\"this.textboxInput[key]\\\"\\r\\n        (input)=\\\"onTextboxChange(key, $event.target.value)\\\"\\r\\n        rows=2\\r\\n        floating-label\\r\\n        [style.width]=\\\"'100%'\\\"></mdl-textfield>\\r\\n      <p *ngIf=\\\"!textboxValid[key]\\\">\\r\\n        The {{key}} input is invalid\\r\\n      </p>\\r\\n    </div>\\r\\n    <p>Predicted factors: {{modelData.predictions.predictedFactor}}</p>\\r\\n    <p>Prediction minus measured: {{predictionDifference}}</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\" #plotContainer>\\r\\n    <div *ngIf=\\\"modelData.model.width.length > 0 && modelData.model.length.length > 0 && modelData.model.predictedFactor.length > 0\\\">\\r\\n      <my-bokeh-use-model\\r\\n        [title]=\\\"'Model Plot'\\\"\\r\\n        [scatter_x]=\\\"modelData.predictions.width\\\"\\r\\n        [scatter_y]=\\\"modelData.predictions.length\\\"\\r\\n        [area]=\\\"modelData.predictions.area\\\"\\r\\n        [scatter_z]=\\\"modelData.predictions.measuredFactor\\\"\\r\\n        [predicted_factor]=\\\"modelData.predictions.predictedFactor\\\"\\r\\n        [pcolour_x]=\\\"modelData.model.width\\\"\\r\\n        [pcolour_y]=\\\"modelData.model.length\\\"\\r\\n        [pcolour_z]=\\\"modelData.model.predictedFactor\\\"\\r\\n        [plot_width]=\\\"plot_width\\\"\\r\\n        [plot_height]=\\\"380\\\">\\r\\n      </my-bokeh-use-model>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"modelData.model.width.length == 0 || modelData.model.length.length == 0|| modelData.model.predictedFactor.length == 0\\\">\\r\\n      <p>\\r\\n        A model has not been calculated for this machine specification.\\r\\n        If you do have at least 8 data points please calculate the spline model on the           \\r\\n        <a routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\">\\r\\n          create model component.\\r\\n        </a>\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\tvar local_storage_service_1 = __webpack_require__(76);\r\n\tvar StorageManagementComponent = (function () {\r\n\t    function StorageManagementComponent(myTitleService, myLocalStorageService) {\r\n\t        this.myTitleService = myTitleService;\r\n\t        this.myLocalStorageService = myLocalStorageService;\r\n\t    }\r\n\t    StorageManagementComponent.prototype.ngOnInit = function () {\r\n\t        this.myTitleService.setTitle('Storage');\r\n\t        this.testLocalStorage = this.myLocalStorageService.isSupported;\r\n\t        this.usedLocalStorageSpace = this.myLocalStorageService.getUsedSpace();\r\n\t    };\r\n\t    StorageManagementComponent.prototype.testRemainingStorage = function () {\r\n\t        this.remainingLocalStorageSpace = this.myLocalStorageService.getRemainingSpace();\r\n\t    };\r\n\t    StorageManagementComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-storage-management',\r\n\t            template: __webpack_require__(78)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [title_service_1.TitleService, local_storage_service_1.LocalStorageService])\r\n\t    ], StorageManagementComponent);\r\n\t    return StorageManagementComponent;\r\n\t}());\r\n\texports.StorageManagementComponent = StorageManagementComponent;\r\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar localstoragemodule_1 = __webpack_require__(77);\r\n\tvar LocalStorageService = (function () {\r\n\t    function LocalStorageService() {\r\n\t        this.isSupported = localstoragemodule_1.LocalStorage.isSupported;\r\n\t        this.hasItem = localstoragemodule_1.LocalStorage.hasItem;\r\n\t        this.getRemainingSpace = localstoragemodule_1.LocalStorage.getRemainingSpace;\r\n\t        this.getMaximumSpace = localstoragemodule_1.LocalStorage.getMaximumSpace;\r\n\t        this.getUsedSpace = localstoragemodule_1.LocalStorage.getUsedSpace;\r\n\t        this.getItemUsedSpace = localstoragemodule_1.LocalStorage.getItemUsedSpace;\r\n\t        this.getBackup = localstoragemodule_1.LocalStorage.getBackup;\r\n\t        this.applyBackup = localstoragemodule_1.LocalStorage.applyBackup;\r\n\t        this.consoleInfo = localstoragemodule_1.LocalStorage.consoleInfo;\r\n\t    }\r\n\t    LocalStorageService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], LocalStorageService);\r\n\t    return LocalStorageService;\r\n\t}());\r\n\texports.LocalStorageService = LocalStorageService;\r\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Check if localStorage is supported                       const isSupported: boolean\r\n\t * Check if localStorage has an Item                        function hasItem(key: string): boolean\r\n\t * Get the amount of space left in localStorage             function getRemainingSpace(): number\r\n\t * Get the maximum amount of space in localStorage          function getMaximumSpace(): number\r\n\t * Get the used space in localStorage                       function getUsedSpace(): number\r\n\t * Get the used space of an item in localStorage            function getItemUsedSpace(): number\r\n\t * Backup Assosiative Array                                 interface Backup\r\n\t * Get a Backup of localStorage                             function getBackup(): Backup\r\n\t * Apply a Backup to localStorage                           function applyBackup(backup: Backup, fClear: boolean = true, fOverwriteExisting: boolean = true)\r\n\t * Dump all information of localStorage in the console      function consoleInfo(fShowMaximumSize: boolean = false)\r\n\t */\r\n\tvar LocalStorage;\r\n\t(function (LocalStorage) {\r\n\t    // Copied from https://gist.github.com/CodeiSir/1fb8bd9154dfde7eb0c7\r\n\t    // found from http://stackoverflow.com/a/34245594\r\n\t    /**\r\n\t     * Flag set true if the Browser supports localStorage, widthout affecting it\r\n\t     */\r\n\t    LocalStorage.isSupported = (function () {\r\n\t        try {\r\n\t            var itemBackup = localStorage.getItem(\"\");\r\n\t            localStorage.removeItem(\"\");\r\n\t            localStorage.setItem(\"\", itemBackup);\r\n\t            if (itemBackup === null)\r\n\t                localStorage.removeItem(\"\");\r\n\t            else\r\n\t                localStorage.setItem(\"\", itemBackup);\r\n\t            return true;\r\n\t        }\r\n\t        catch (e) {\r\n\t            return false;\r\n\t        }\r\n\t    })();\r\n\t    /**\r\n\t     * Check if localStorage has an Item / exists with the give key\r\n\t     * @param key the key of the Item\r\n\t     */\r\n\t    function hasItem(key) {\r\n\t        return localStorage.getItem(key) !== null;\r\n\t    }\r\n\t    LocalStorage.hasItem = hasItem;\r\n\t    /**\r\n\t     * This will return the left space in localStorage without affecting it's content\r\n\t     * Might be slow !!!\r\n\t     */\r\n\t    function getRemainingSpace() {\r\n\t        var itemBackup = localStorage.getItem(\"\");\r\n\t        var increase = true;\r\n\t        var data = \"1\";\r\n\t        var totalData = \"\";\r\n\t        var trytotalData = \"\";\r\n\t        while (true) {\r\n\t            try {\r\n\t                trytotalData = totalData + data;\r\n\t                localStorage.setItem(\"\", trytotalData);\r\n\t                totalData = trytotalData;\r\n\t                if (increase)\r\n\t                    data += data;\r\n\t            }\r\n\t            catch (e) {\r\n\t                if (data.length < 2) {\r\n\t                    break;\r\n\t                }\r\n\t                increase = false;\r\n\t                data = data.substr(data.length / 2);\r\n\t            }\r\n\t        }\r\n\t        if (itemBackup === null)\r\n\t            localStorage.removeItem(\"\");\r\n\t        else\r\n\t            localStorage.setItem(\"\", itemBackup);\r\n\t        return totalData.length;\r\n\t    }\r\n\t    LocalStorage.getRemainingSpace = getRemainingSpace;\r\n\t    /**\r\n\t     * This function returns the maximum size of localStorage without affecting it's content\r\n\t     * Might be slow !!!\r\n\t     */\r\n\t    function getMaximumSpace() {\r\n\t        var backup = getBackup();\r\n\t        localStorage.clear();\r\n\t        var max = getRemainingSpace();\r\n\t        applyBackup(backup);\r\n\t        return max;\r\n\t    }\r\n\t    LocalStorage.getMaximumSpace = getMaximumSpace;\r\n\t    /**\r\n\t     * This will return the currently used size of localStorage\r\n\t     */\r\n\t    function getUsedSpace() {\r\n\t        var sum = 0;\r\n\t        for (var i = 0; i < localStorage.length; ++i) {\r\n\t            var key = localStorage.key(i);\r\n\t            var value = localStorage.getItem(key);\r\n\t            sum += key.length + value.length;\r\n\t        }\r\n\t        return sum;\r\n\t    }\r\n\t    LocalStorage.getUsedSpace = getUsedSpace;\r\n\t    /**\r\n\t     * This will return the currently used size of a given Item, returns NaN if key is not found\r\n\t     * @param key\r\n\t     */\r\n\t    function getItemUsedSpace(key) {\r\n\t        var value = localStorage.getItem(key);\r\n\t        if (value === null) {\r\n\t            return NaN;\r\n\t        }\r\n\t        else {\r\n\t            return key.length + value.length;\r\n\t        }\r\n\t    }\r\n\t    LocalStorage.getItemUsedSpace = getItemUsedSpace;\r\n\t    /**\r\n\t     * This will return a localStorage-backup (Associative-Array key->value)\r\n\t     */\r\n\t    function getBackup() {\r\n\t        var backup = {};\r\n\t        for (var i = 0; i < localStorage.length; ++i) {\r\n\t            var key = localStorage.key(i);\r\n\t            var value = localStorage.getItem(key);\r\n\t            backup[key] = value;\r\n\t        }\r\n\t        return backup;\r\n\t    }\r\n\t    LocalStorage.getBackup = getBackup;\r\n\t    /**\r\n\t     * This will apply a localStorage-Backup (Associative-Array key->value)\r\n\t     * @param backup            associative-array\r\n\t     * @param fClear             optional flag to clear all existing storage first. Default: true\r\n\t     * @param fOverwriteExisting optional flag to replace existing keys. Default: true\r\n\t     */\r\n\t    function applyBackup(backup, fClear, fOverwriteExisting) {\r\n\t        if (fClear === void 0) { fClear = true; }\r\n\t        if (fOverwriteExisting === void 0) { fOverwriteExisting = true; }\r\n\t        if (fClear == true) {\r\n\t            localStorage.clear();\r\n\t        }\r\n\t        for (var key in backup) {\r\n\t            if (fOverwriteExisting === false && backup[key] !== undefined) {\r\n\t                continue;\r\n\t            }\r\n\t            var value = backup[key];\r\n\t            localStorage.setItem(key, value);\r\n\t        }\r\n\t    }\r\n\t    LocalStorage.applyBackup = applyBackup;\r\n\t    /**\r\n\t     * This functions dumps all keys and values of the local Storage to the console,\r\n\t     * as well as the current size and number of items\r\n\t     * @param fShowMaximumSize optional, flag show maximum size of localStorage. Default: false\r\n\t     */\r\n\t    function consoleInfo(fShowMaximumSize) {\r\n\t        if (fShowMaximumSize === void 0) { fShowMaximumSize = false; }\r\n\t        var amount = 0;\r\n\t        var size = 0;\r\n\t        for (var i = 0; i < localStorage.length; ++i) {\r\n\t            var key = localStorage.key(i);\r\n\t            var value = localStorage.getItem(key);\r\n\t            console.log(amount, key, value);\r\n\t            size += key.length + value.length;\r\n\t            amount++;\r\n\t        }\r\n\t        console.log(\"Total entries:\", amount);\r\n\t        console.log(\"Total size:\", size);\r\n\t        if (fShowMaximumSize === true) {\r\n\t            var maxSize = getMaximumSpace();\r\n\t            console.log(\"Total size:\", maxSize);\r\n\t        }\r\n\t    }\r\n\t    LocalStorage.consoleInfo = consoleInfo;\r\n\t})(LocalStorage = exports.LocalStorage || (exports.LocalStorage = {}));\r\n\t/*\r\n\t    // Example\r\n\t    console.log(\"LocalStorage supported:\", LocalStorage.isSupported)// true - I hope so anyways 😉\r\n\t    localStorage.setItem(\"asd\", \"ASDASD\")                           // sets / overwrites the item \"asd\"\r\n\t    localStorage.setItem(\"asd\" + Math.random(), \"ASDASD\")           // set another item each time you refresh the page\r\n\t    var backup = LocalStorage.getBackup()                           // creates a backup, we will need it later!\r\n\t    console.log(JSON.stringify(backup))                             // this is how the backup looks like\r\n\t    var usedSpace = LocalStorage.getUsedSpace()                     // amount of space used right now\r\n\t    console.log(\"Used Space:\", usedSpace)\r\n\t    var maxSpace = LocalStorage.getMaximumSpace()                   // amount of maximum space aviable\r\n\t    console.log(\"Maximum Space:\", maxSpace)\r\n\t    var remSpace = LocalStorage.getRemainingSpace()                 // amount of remaining space\r\n\t    console.log(\"Remaining Space:\", remSpace)\r\n\t    console.log(\"SpaceCheck\", maxSpace === usedSpace + remSpace)    // true\r\n\t    console.log(\"hasItem\", LocalStorage.hasItem(\"nothis0ne\"))       // we don't have this one in our localStorage\r\n\t    localStorage.clear()                                            // oops, we deleted the localStorage!\r\n\t    console.log(\"has asd\",LocalStorage.hasItem(\"asd\"))              // item asd is lost 😒\r\n\t    LocalStorage.applyBackup(backup)                                // but we have a backup, restore it!\r\n\t    LocalStorage.consoleInfo()                                      // show all the info we have, see the backup worked 😊\r\n\t*/ \r\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <h5>Storage management</h5>\\r\\n    <p>\\r\\n      Component still under construction\\r\\n    </p>\\r\\n    <p>\\r\\n      This component is for the management of the data stored within this browser.\\r\\n      In the future you will be able to come here to bulk export/import your data to a '.json' file for backup and transfer.\\r\\n      At this current point in time the only function of this component is to see how much browser storage this web app\\r\\n      has left for its use.\\r\\n    </p>\\r\\n\\r\\n    <p>\\r\\n      None of your measured data, or your model data is stored on a remote server. \\r\\n      Your measurements and models are only sent to the server in the form of x and y coordinates for parameterisation, and \\r\\n      in the form of widths, lengths, and measured factors for modelling. \\r\\n      The server does not save a copy to disk of any of that data.\\r\\n    </p>\\r\\n\\r\\n    <p>\\r\\n      In the future it is envisaged that an option will be provided for you to easily share your model with \\r\\n      the community under the AGPLv3+ license should you so choose, but this will not be automatic. \\r\\n      It will be opt-in only.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <h5>Local storage tests</h5>\\r\\n    <p></p>\\r\\n\\r\\n    <div *ngIf=\\\"testLocalStorage\\\">\\r\\n      <p>Your browser supports local storage. You currently have {{usedLocalStorageSpace}} B of used space. Most browsers support\\r\\n        5 MiB.\\r\\n      </p>\\r\\n\\r\\n      <p>To check your remaining storage press the button below. Warning, this might be slow.</p>\\r\\n      <button mdl-button mdl-button-type=\\\"raised\\\" mdl-colored=\\\"primary\\\" mdl-ripple (click)=\\\"testRemainingStorage()\\\">Test remaining local storage           \\r\\n      </button>\\r\\n      <div *ngIf=\\\"remainingLocalStorageSpace\\\">\\r\\n        <p>You have {{remainingLocalStorageSpace}} B of local storage remaining which is available for use by this webapp.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!testLocalStorage\\\">\\r\\n      <p>\\r\\n        This webapp relies upon local storage working within your browser. Your browser does not support local storage. Please download\\r\\n        and use a modern standards compliant browser such as\\r\\n        <a href=\\\"https://www.google.com.au/chrome/browser/desktop/\\\">Chrome</a> or\\r\\n        <a href=\\\"https://www.mozilla.org/en-GB/firefox/new/\\\">Firefox</a> to use this webapp.\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\tvar SpecificationsComponent = (function () {\r\n\t    function SpecificationsComponent(myTitleService) {\r\n\t        this.myTitleService = myTitleService;\r\n\t        this.specifications = {};\r\n\t        this.newMachineIDValid = false;\r\n\t        this.newModelValid = false;\r\n\t        this.newMachineValid = false;\r\n\t        this.edittingMachine = null;\r\n\t        this.newEnergyValid = false;\r\n\t        this.newR50Valid = false;\r\n\t        this.newEnergySetValid = false;\r\n\t        this.edittingEnergy = null;\r\n\t        this.newApplicatorValid = false;\r\n\t        this.edittingApplicator = null;\r\n\t        this.newSSDValid = false;\r\n\t        this.edittingSSD = null;\r\n\t    }\r\n\t    SpecificationsComponent.prototype.ngOnInit = function () {\r\n\t        this.myTitleService.setTitle('Specifications');\r\n\t        this.changeSpecifications(JSON.parse(localStorage.getItem(\"specifications\")));\r\n\t    };\r\n\t    SpecificationsComponent.prototype.changeSpecifications = function (newSpecifications) {\r\n\t        this.specifications = newSpecifications;\r\n\t        if (this.specifications == null) {\r\n\t            this.specifications = {};\r\n\t            this.machines = [];\r\n\t        }\r\n\t        else {\r\n\t            this.machines = Object.keys(this.specifications).sort();\r\n\t            this.currentMachine = JSON.parse(localStorage.getItem(\"current_machine\"));\r\n\t            if (this.currentMachine == null || this.specifications[this.currentMachine] === undefined) {\r\n\t                this.currentMachine = this.machines[0];\r\n\t            }\r\n\t        }\r\n\t        this.updateSpecifications();\r\n\t    };\r\n\t    SpecificationsComponent.prototype.updateSpecifications = function () {\r\n\t        localStorage.setItem(\"specifications\", JSON.stringify(this.specifications));\r\n\t    };\r\n\t    SpecificationsComponent.prototype.changeCurrentMachine = function (machine) {\r\n\t        this.currentMachine = machine;\r\n\t        this.updateCurrentMachine();\r\n\t    };\r\n\t    SpecificationsComponent.prototype.checkNewMachineIDInput = function () {\r\n\t        if (this.specifications[this.newMachineID] == null && this.newMachineID != null && this.newMachineID != \"\") {\r\n\t            this.newMachineIDValid = true;\r\n\t        }\r\n\t        else {\r\n\t            this.newMachineIDValid = false;\r\n\t        }\r\n\t        this.checkNewMachineValid();\r\n\t    };\r\n\t    SpecificationsComponent.prototype.checkNewModelInput = function () {\r\n\t        if (this.newModel != null && this.newModel != \"\") {\r\n\t            this.newModelValid = true;\r\n\t        }\r\n\t        else {\r\n\t            this.newModelValid = false;\r\n\t        }\r\n\t        this.checkNewMachineValid();\r\n\t    };\r\n\t    SpecificationsComponent.prototype.checkNewMachineValid = function () {\r\n\t        this.newMachineValid = (this.newMachineIDValid && this.newModelValid);\r\n\t    };\r\n\t    SpecificationsComponent.prototype.addMachineID = function () {\r\n\t        if (this.newMachineValid) {\r\n\t            this.machines.push(this.newMachineID);\r\n\t            this.specifications[this.newMachineID] = {};\r\n\t            this.specifications[this.newMachineID][\"model\"] = this.newModel;\r\n\t            this.specifications[this.newMachineID][\"energy\"] = [];\r\n\t            this.specifications[this.newMachineID][\"R50\"] = {};\r\n\t            this.specifications[this.newMachineID][\"applicator\"] = [];\r\n\t            this.specifications[this.newMachineID][\"ssd\"] = [];\r\n\t            this.changeCurrentMachine(this.newMachineID);\r\n\t            this.newMachineID = null;\r\n\t            this.newModel = null;\r\n\t            this.newMachineIDValid = false;\r\n\t            this.newModelValid = false;\r\n\t            this.newMachineValid = false;\r\n\t            this.updateSpecifications();\r\n\t        }\r\n\t    };\r\n\t    SpecificationsComponent.prototype.checkNewEnergyInput = function () {\r\n\t        if (this.specifications[this.currentMachine][\"energy\"].indexOf(Number(this.newEnergy)) < 0 && this.newEnergy != null && !isNaN(Number(this.newEnergy))) {\r\n\t            this.newEnergyValid = true;\r\n\t        }\r\n\t        else {\r\n\t            this.newEnergyValid = false;\r\n\t        }\r\n\t        this.checkNewEnergySetValid();\r\n\t    };\r\n\t    SpecificationsComponent.prototype.checkNewR50Input = function () {\r\n\t        if (this.newR50 != null && !isNaN(Number(this.newR50))) {\r\n\t            this.newR50Valid = true;\r\n\t        }\r\n\t        else {\r\n\t            this.newR50Valid = false;\r\n\t        }\r\n\t        this.checkNewEnergySetValid();\r\n\t    };\r\n\t    SpecificationsComponent.prototype.checkNewEnergySetValid = function () {\r\n\t        this.newEnergySetValid = (this.newEnergyValid && this.newR50Valid);\r\n\t    };\r\n\t    SpecificationsComponent.prototype.addEnergy = function () {\r\n\t        if (this.newEnergySetValid) {\r\n\t            this.specifications[this.currentMachine][\"energy\"].push(Number(this.newEnergy));\r\n\t            this.specifications[this.currentMachine][\"R50\"][this.newEnergy] = Number(this.newR50);\r\n\t            this.newEnergy = null;\r\n\t            this.newR50 = null;\r\n\t            this.newEnergyValid = false;\r\n\t            this.newR50Valid = false;\r\n\t            this.newEnergySetValid = false;\r\n\t            this.updateSpecifications();\r\n\t        }\r\n\t    };\r\n\t    SpecificationsComponent.prototype.checkNewApplicatorInput = function () {\r\n\t        if (this.specifications[this.currentMachine][\"applicator\"].indexOf(this.newApplicator.toLowerCase()) < 0 && this.newApplicator != null && this.newApplicator != \"\") {\r\n\t            this.newApplicatorValid = true;\r\n\t        }\r\n\t        else {\r\n\t            this.newApplicatorValid = false;\r\n\t        }\r\n\t    };\r\n\t    SpecificationsComponent.prototype.addApplicator = function () {\r\n\t        if (this.newApplicatorValid) {\r\n\t            this.specifications[this.currentMachine][\"applicator\"].push(this.newApplicator.toLowerCase());\r\n\t            this.newApplicator = null;\r\n\t            this.newApplicatorValid = false;\r\n\t            this.updateSpecifications();\r\n\t        }\r\n\t    };\r\n\t    SpecificationsComponent.prototype.checkNewSSDInput = function () {\r\n\t        if (this.specifications[this.currentMachine][\"ssd\"].indexOf(Number(this.newSSD)) < 0 && this.newSSD != null && !isNaN(Number(this.newSSD))) {\r\n\t            this.newSSDValid = true;\r\n\t        }\r\n\t        else {\r\n\t            this.newSSDValid = false;\r\n\t        }\r\n\t    };\r\n\t    SpecificationsComponent.prototype.addSSD = function () {\r\n\t        if (this.newSSDValid) {\r\n\t            this.specifications[this.currentMachine][\"ssd\"].push(Number(this.newSSD));\r\n\t            this.newSSD = null;\r\n\t            this.newSSDValid = false;\r\n\t            this.updateSpecifications();\r\n\t        }\r\n\t    };\r\n\t    SpecificationsComponent.prototype.updateCurrentMachine = function () {\r\n\t        localStorage.setItem(\"current_machine\", JSON.stringify(this.currentMachine));\r\n\t    };\r\n\t    SpecificationsComponent.prototype.editMachine = function (machine) {\r\n\t        this.currentMachine = null;\r\n\t        this.edittingMachine = machine;\r\n\t    };\r\n\t    SpecificationsComponent.prototype.finishMachineEdit = function (machine, idInput, modelInput) {\r\n\t        if (idInput != machine) {\r\n\t            this.specifications[idInput] = this.specifications[machine];\r\n\t            delete this.specifications[machine];\r\n\t            this.machines = Object.keys(this.specifications).sort();\r\n\t        }\r\n\t        this.specifications[idInput][\"model\"] = modelInput;\r\n\t        this.updateSpecifications();\r\n\t        this.currentMachine = this.edittingMachine;\r\n\t        this.edittingMachine = null;\r\n\t    };\r\n\t    SpecificationsComponent.prototype.deleteMachine = function (machine) {\r\n\t        var index = this.machines.indexOf(machine);\r\n\t        this.machines.splice(index, 1);\r\n\t        delete this.specifications[machine];\r\n\t        this.edittingMachine = null;\r\n\t        this.updateSpecifications();\r\n\t    };\r\n\t    SpecificationsComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-specifications',\r\n\t            template: __webpack_require__(80)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [title_service_1.TitleService])\r\n\t    ], SpecificationsComponent);\r\n\t    return SpecificationsComponent;\r\n\t}());\r\n\texports.SpecificationsComponent = SpecificationsComponent;\r\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Machine specifications editing</h5>\\r\\n    <p>\\r\\n      Use this component to define your centre's machine specifications. \\r\\n      These will be used throughout this web app to silo each model into its own specific machine ID, applicator, energy, ssd combination.\\r\\n    </p>\\r\\n    <p>\\r\\n      <font color=\\\"#d3d3d3\\\">\\r\\n        Currently the editing and deleting of energy, applicator, and SSD entries is not yet implimented.\\r\\n      </font>\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\" style=\\\"width:100%\\\">\\r\\n      <mdl-card-title>\\r\\n        <h2 mdl-card-title-text>Machine IDs</h2>\\r\\n      </mdl-card-title>\\r\\n\\r\\n      <mdl-list>\\r\\n        \\r\\n        <div *ngFor=\\\"let machine of machines\\\">\\r\\n        \\r\\n          <div *ngIf=\\\"machine!=edittingMachine\\\">\\r\\n            <mdl-list-item lines=\\\"3\\\">\\r\\n              <mdl-list-item-primary-content>\\r\\n                <!--<div (click)=\\\"editMachine(machine)\\\">-->\\r\\n                <div>\\r\\n                  <span>{{machine}}</span>\\r\\n                  <mdl-list-item-text-body>{{specifications[machine].model}}</mdl-list-item-text-body>\\r\\n                </div>\\r\\n              </mdl-list-item-primary-content>\\r\\n              <mdl-list-item-secondary-action>\\r\\n                <button\\r\\n                  mdl-button\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  [disabled]=\\\"machine==currentMachine || edittingMachine!=null\\\"\\r\\n                  (click)=\\\"changeCurrentMachine(machine)\\\"><mdl-icon>dashboard</mdl-icon>       \\r\\n                </button>\\r\\n                <button\\r\\n                  mdl-button *ngIf=\\\"machine!=edittingMachine\\\"\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  [disabled]=\\\"false\\\"\\r\\n                  (click)=\\\"editMachine(machine)\\\"><mdl-icon>edit</mdl-icon>       \\r\\n                </button>\\r\\n              </mdl-list-item-secondary-action>\\r\\n            </mdl-list-item>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"machine==edittingMachine\\\">\\r\\n            <mdl-list-item lines=\\\"3\\\">\\r\\n              <mdl-list-item-primary-content>\\r\\n                <mdl-textfield #machineIDTextField\\r\\n                  type=\\\"text\\\"\\r\\n                  label=\\\"Machine ID\\\"\\r\\n                  [value]=\\\"machine\\\"\\r\\n                  (keyup.enter)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"\\r\\n                  floating-label\\r\\n                  style=\\\"display:inline;\\\"></mdl-textfield>\\r\\n                <mdl-textfield #modelTextField\\r\\n                  type=\\\"text\\\"\\r\\n                  label=\\\"Model\\\"\\r\\n                  [value]=\\\"specifications[machine].model\\\"\\r\\n                  (keyup.enter)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"\\r\\n                  floating-label\\r\\n                  style=\\\"display:inline;\\\"></mdl-textfield>\\r\\n              </mdl-list-item-primary-content>\\r\\n\\r\\n              <mdl-list-item-secondary-action>\\r\\n                <button\\r\\n                  mdl-button\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  [disabled]=\\\"machine!=edittingMachine\\\"\\r\\n                  (click)=\\\"deleteMachine(machine)\\\"><mdl-icon>delete</mdl-icon>       \\r\\n                </button>\\r\\n                <button\\r\\n                  mdl-button\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  mdl-colored=\\\"primary\\\" \\r\\n                  [disabled]=\\\"machine==currentMachine || edittingMachine!=null\\\"\\r\\n                  (click)=\\\"changeCurrentMachine(machine)\\\"><mdl-icon>dashboard</mdl-icon>       \\r\\n                </button>\\r\\n                <button\\r\\n                  mdl-button\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  [disabled]=\\\"false\\\"\\r\\n                  (click)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"><mdl-icon>done</mdl-icon>       \\r\\n                </button>\\r\\n              </mdl-list-item-secondary-action>\\r\\n            </mdl-list-item>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </mdl-list>\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"New Machine ID\\\"\\r\\n          [(ngModel)]=\\\"newMachineID\\\"\\r\\n          (input)=\\\"checkNewMachineIDInput()\\\"\\r\\n          (keyup.enter)=\\\"addMachineID()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:100%\\\"></mdl-textfield>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"Machine Make and Model\\\"\\r\\n          [(ngModel)]=\\\"newModel\\\"\\r\\n          (input)=\\\"checkNewModelInput()\\\"\\r\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add machine ID\\\"\\r\\n          (keyup.enter)=\\\"addMachineID()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:70%\\\"></mdl-textfield>\\r\\n        <button \\r\\n          [disabled]=\\\"!newMachineValid\\\"\\r\\n          mdl-button \\r\\n          mdl-button-type=\\\"mini-fab\\\"\\r\\n          mdl-ripple\\r\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add machine ID\\\"\\r\\n          (click)=\\\"addMachineID()\\\">\\r\\n          <mdl-icon>add</mdl-icon>\\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n\\r\\n    </mdl-card>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"currentMachine\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\r\\n      <mdl-card-title>\\r\\n        <h2 mdl-card-title-text>Energies for {{currentMachine}}</h2>\\r\\n      </mdl-card-title>\\r\\n        <mdl-list>\\r\\n          <mdl-list-item *ngFor=\\\"let energy of specifications[currentMachine].energy\\\" lines=\\\"3\\\">\\r\\n            <mdl-list-item-primary-content>\\r\\n              <span>{{energy}} MeV</span>\\r\\n              <mdl-list-item-text-body>R50: {{specifications[currentMachine].R50[energy]}} cm</mdl-list-item-text-body>\\r\\n            </mdl-list-item-primary-content>\\r\\n            <mdl-list-item-secondary-action>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\r\\n              </button>\\r\\n            </mdl-list-item-secondary-action>\\r\\n          </mdl-list-item>\\r\\n        </mdl-list>\\r\\n\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"New Energy (MeV)\\\"\\r\\n          [(ngModel)]=\\\"newEnergy\\\"\\r\\n          (input)=\\\"checkNewEnergyInput()\\\"\\r\\n          (keyup.enter)=\\\"addEnergy()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:100%\\\"></mdl-textfield>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"R50 for New Energy (cm)\\\"\\r\\n          [(ngModel)]=\\\"newR50\\\"\\r\\n          (input)=\\\"checkNewR50Input()\\\"\\r\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add energy\\\"\\r\\n          (keyup.enter)=\\\"addEnergy()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:70%\\\"></mdl-textfield>\\r\\n        <button \\r\\n          [disabled]=\\\"!newEnergySetValid\\\" \\r\\n          mdl-button \\r\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add energy\\\"\\r\\n          mdl-button-type=\\\"mini-fab\\\"\\r\\n          (click)=\\\"addEnergy()\\\">\\r\\n          <mdl-icon>add</mdl-icon>\\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n    </mdl-card>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"currentMachine\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\r\\n      <mdl-card-title>\\r\\n        <h2 mdl-card-title-text>Applicators for {{currentMachine}}</h2>\\r\\n      </mdl-card-title>\\r\\n        <mdl-list>\\r\\n          <mdl-list-item *ngFor=\\\"let applicator of specifications[currentMachine].applicator\\\">\\r\\n            <mdl-list-item-primary-content>\\r\\n              <mdl-list-item-text-body>{{applicator}}</mdl-list-item-text-body>\\r\\n            </mdl-list-item-primary-content>\\r\\n            <mdl-list-item-secondary-action>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\r\\n              </button>\\r\\n            </mdl-list-item-secondary-action>\\r\\n          </mdl-list-item>\\r\\n        </mdl-list>\\r\\n\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"New Applicator\\\"\\r\\n          [(ngModel)]=\\\"newApplicator\\\"\\r\\n          (input)=\\\"checkNewApplicatorInput()\\\"\\r\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add applicator\\\"\\r\\n          (keyup.enter)=\\\"addApplicator()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:70%\\\"></mdl-textfield>\\r\\n        <button \\r\\n          [disabled]=\\\"!newApplicatorValid\\\" \\r\\n          mdl-button \\r\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add applicator\\\"\\r\\n          mdl-button-type=\\\"mini-fab\\\"\\r\\n          (click)=\\\"addApplicator()\\\">\\r\\n          <mdl-icon>add</mdl-icon>\\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n    </mdl-card>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"currentMachine\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\r\\n      <mdl-card-title>\\r\\n        <h2 mdl-card-title-text>SSDs for {{currentMachine}}</h2>\\r\\n      </mdl-card-title>\\r\\n        <mdl-list>\\r\\n          <mdl-list-item *ngFor=\\\"let ssd of specifications[currentMachine].ssd\\\">\\r\\n            <mdl-list-item-primary-content>\\r\\n              <mdl-list-item-text-body>{{ssd}} cm</mdl-list-item-text-body>\\r\\n            </mdl-list-item-primary-content>\\r\\n            <mdl-list-item-secondary-action>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\r\\n              </button>\\r\\n            </mdl-list-item-secondary-action>\\r\\n          </mdl-list-item>\\r\\n        </mdl-list>\\r\\n\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"New SSD (cm)\\\"\\r\\n          [(ngModel)]=\\\"newSSD\\\"\\r\\n          (input)=\\\"checkNewSSDInput()\\\"\\r\\n          (keyup.enter)=\\\"addSSD()\\\"\\r\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add ssd\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:70%\\\"></mdl-textfield>\\r\\n        <button \\r\\n          [disabled]=\\\"!newSSDValid\\\" \\r\\n          mdl-button \\r\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add ssd\\\"\\r\\n          mdl-button-type=\\\"mini-fab\\\"\\r\\n          (click)=\\\"addSSD()\\\">\\r\\n          <mdl-icon>add</mdl-icon>\\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n    </mdl-card>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Raw specification data editing (optional)</h5>\\r\\n    <p>\\r\\n      If you desire you may edit the raw machine specifications in its raw format below. \\r\\n      Currently error checking on this raw input is not implemented.\\r\\n      Incorrectly editing the data below may cause the web app not to function.\\r\\n      Input data above to determine the data structure required.</p>\\r\\n    <my-json-edit\\r\\n      [input]=\\\"specifications\\\"\\r\\n      (inputUpdated)=\\\"changeSpecifications($event)\\\"\\r\\n      buttonText=\\\"Update Specifications\\\">\\r\\n    </my-json-edit>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\";\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar router_1 = __webpack_require__(30);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\tvar js_yaml_1 = __webpack_require__(82);\r\n\t// declare var yaml: any;\r\n\t// declare var pypyjs: any;\r\n\tvar DicomComponent = (function () {\r\n\t    function DicomComponent(myTitleService, router) {\r\n\t        this.myTitleService = myTitleService;\r\n\t        this.router = router;\r\n\t        this.parameterisation = {\r\n\t            insert: {\r\n\t                x: [0],\r\n\t                y: [0]\r\n\t            },\r\n\t            width: null,\r\n\t            length: null,\r\n\t            circle: null,\r\n\t            ellipse: null\r\n\t        };\r\n\t        this.insertData = {\r\n\t            machine: null,\r\n\t            parameterisation: this.parameterisation,\r\n\t            energy: null,\r\n\t            applicator: null,\r\n\t            ssd: null,\r\n\t            factor: null\r\n\t        };\r\n\t        this.dicomExitCode = 1;\r\n\t        this.reader = new FileReader();\r\n\t    }\r\n\t    DicomComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        window['dicomData'] = ' ';\r\n\t        this.reader.onload = function () { return _this.onceFileIsLoaded(); };\r\n\t        var insertListString = localStorage.getItem('dicom_insertList');\r\n\t        if (insertListString) {\r\n\t            this.insertList = JSON.parse(insertListString);\r\n\t        }\r\n\t        else {\r\n\t            this.insertList = [];\r\n\t        }\r\n\t        // localStorage.removeItem('dicomPrint');\r\n\t        Module.print = this.sendDicomDumpToGlobalVariable;\r\n\t        // Module.printErr = this.sendDicomDumpToLocalStorage;\r\n\t        this.myTitleService.setTitle('Dicom');\r\n\t        // pypyjs.exec(\"import json; print json.dumps({'hello': 'world'})\")\r\n\t        // pypyjs.exec(\"import dicom; print json.dumps({'hello': 'world'})\")\r\n\t    };\r\n\t    DicomComponent.prototype.sendDicomDumpToGlobalVariable = function (print) {\r\n\t        window['dicomData'] = window['dicomData'] + '\\n' + print;\r\n\t    };\r\n\t    DicomComponent.prototype.updateDicomWarning = function () {\r\n\t        var status = Number(localStorage.getItem('dicomLoadStatus'));\r\n\t        if (status == 0) {\r\n\t            this.getBlockDataButton.disabled = false;\r\n\t            this.dicomWarning = null;\r\n\t        }\r\n\t        else {\r\n\t            this.getBlockDataButton.disabled = true;\r\n\t            this.dicomWarning = 'An error occured while trying to find the block data within the provided Dicom file.';\r\n\t        }\r\n\t    };\r\n\t    DicomComponent.prototype.onceFileIsLoaded = function () {\r\n\t        var content = new Int8Array(this.reader.result);\r\n\t        console.log(content.length);\r\n\t        var fileName = 'dicomfile';\r\n\t        if (FS.isFile(fileName)) {\r\n\t            FS.unlink(fileName);\r\n\t        }\r\n\t        FS.writeFile(fileName, content, { encoding: \"binary\" });\r\n\t        var exit_orig = Module.exit;\r\n\t        Module.exit = function (status) {\r\n\t            localStorage.setItem('dicomLoadStatus', status);\r\n\t            exit_orig(status);\r\n\t        };\r\n\t        Module.callMain(['dcmdump', fileName, '--print-all']);\r\n\t        Module.exit = exit_orig;\r\n\t        console.log(Module);\r\n\t        this.updateDicomWarning();\r\n\t        FS.unlink(fileName);\r\n\t    };\r\n\t    DicomComponent.prototype.openFile = function (event) {\r\n\t        if (typeof event.target !== 'undefined') {\r\n\t            console.log(event.target.files);\r\n\t            var file = event.target.files[0];\r\n\t            window['dicomData'] = ' ';\r\n\t            this.reader.readAsArrayBuffer(file);\r\n\t        }\r\n\t        else {\r\n\t            console.log(event);\r\n\t        }\r\n\t    };\r\n\t    DicomComponent.prototype.convertDicomDumpToDict = function (dump) {\r\n\t        var yamlConvert = dump.replace(/\\s*#[^#\\n]*\\n/g, '\\n');\r\n\t        yamlConvert = yamlConvert.replace(/\\s*#[^#\\n]*$/g, '');\r\n\t        yamlConvert = yamlConvert.replace(/^\\n*/, '');\r\n\t        yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\))/g, '$1:');\r\n\t        yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) SQ \\(Sequence with undefined length #=\\d+\\)/g, '$1');\r\n\t        yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) na \\(Item with undefined length #=\\d+\\)/g, '$1');\r\n\t        yamlConvert = yamlConvert.replace(/ *\\(fffe,e00d\\): na \\(ItemDelimitationItem\\) *\\n/g, '');\r\n\t        yamlConvert = yamlConvert.replace(/ *\\(fffe,e0dd\\): na \\(SequenceDelimitationItem\\)\\n/g, '');\r\n\t        yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) (.*)/g, '$1 \"$2\"');\r\n\t        yamlConvert = yamlConvert.replace(/\\\\/g, ', ');\r\n\t        yamlConvert = yamlConvert.replace(/\\(fffe,e000\\):/g, ' - ');\r\n\t        yamlConvert = js_yaml_1.safeLoad(yamlConvert);\r\n\t        return yamlConvert;\r\n\t    };\r\n\t    DicomComponent.prototype.convertBlockDataToCoords = function (blockData) {\r\n\t        var listString = /\\[[, \\d\\.-]*\\]/.exec(blockData).toString();\r\n\t        var parsedData = JSON.parse('{ \"data\": ' + listString + '}');\r\n\t        var x = [];\r\n\t        var y = [];\r\n\t        var i = 0;\r\n\t        for (var _i = 0, _a = parsedData['data']; _i < _a.length; _i++) {\r\n\t            var num = _a[_i];\r\n\t            if (i % 2 == 0) {\r\n\t                x.push(parseFloat((num / 10).toFixed(2)));\r\n\t            }\r\n\t            else {\r\n\t                y.push(parseFloat((num / 10).toFixed(2)));\r\n\t            }\r\n\t            i++;\r\n\t        }\r\n\t        var insert = {\r\n\t            \"x\": x,\r\n\t            \"y\": y\r\n\t        };\r\n\t        return insert;\r\n\t    };\r\n\t    DicomComponent.prototype.dicomPullNumber = function (input) {\r\n\t        return Number(input.replace(/.*\\[([\\d\\.-]*)\\].*/, \"$1\"));\r\n\t    };\r\n\t    DicomComponent.prototype.dicomPullString = function (input) {\r\n\t        return input.replace(/.*\\[(.*)\\].*/, \"$1\");\r\n\t    };\r\n\t    DicomComponent.prototype.getBlockData = function () {\r\n\t        var dicomPrint = window['dicomData'];\r\n\t        var dicomDict = this.convertDicomDumpToDict(dicomPrint);\r\n\t        // console.log(dicomDict)\r\n\t        this.insertList = [];\r\n\t        var beamSequence = dicomDict[\"(300a,00b0)\"];\r\n\t        for (var _i = 0, beamSequence_1 = beamSequence; _i < beamSequence_1.length; _i++) {\r\n\t            var beam = beamSequence_1[_i];\r\n\t            var temp = beam[\"(300a,00f4)\"];\r\n\t            if (temp != undefined) {\r\n\t                var blockData = beam[\"(300a,00f4)\"][0][\"(300a,0106)\"];\r\n\t                var coordinates = this.convertBlockDataToCoords(blockData);\r\n\t                var applicator = null;\r\n\t                try {\r\n\t                    applicator = this.dicomPullString(beam[\"(300a,0107)\"][0][\"(300a,0108)\"]);\r\n\t                }\r\n\t                catch (err) {\r\n\t                    applicator = null;\r\n\t                    console.log(err);\r\n\t                }\r\n\t                var energy = null;\r\n\t                try {\r\n\t                    energy = this.dicomPullNumber(beam[\"(300a,0111)\"][0][\"(300a,0114)\"]);\r\n\t                }\r\n\t                catch (err) {\r\n\t                    energy = null;\r\n\t                    console.log(err);\r\n\t                }\r\n\t                var ssd = null;\r\n\t                try {\r\n\t                    ssd = this.dicomPullNumber(beam[\"(300a,0111)\"][0][\"(300a,0130)\"]) / 10;\r\n\t                }\r\n\t                catch (err) {\r\n\t                    ssd = null;\r\n\t                    console.log(err);\r\n\t                }\r\n\t                var machine = null;\r\n\t                try {\r\n\t                    machine = this.dicomPullString(beam[\"(300a,00b2)\"]);\r\n\t                }\r\n\t                catch (err) {\r\n\t                    machine = null;\r\n\t                    console.log(err);\r\n\t                }\r\n\t                var insert = {\r\n\t                    \"machine\": machine,\r\n\t                    \"coordinates\": coordinates,\r\n\t                    \"applicator\": applicator.toLowerCase(),\r\n\t                    \"energy\": energy,\r\n\t                    \"ssd\": ssd\r\n\t                };\r\n\t                this.insertList.push(insert);\r\n\t            }\r\n\t        }\r\n\t        localStorage.setItem('dicom_insertList', JSON.stringify(this.insertList));\r\n\t    };\r\n\t    DicomComponent.prototype.sendToParameterisation = function (insert) {\r\n\t        this.insertUpdated(insert['coordinates']);\r\n\t        this.insertData['machine'] = insert['machine'];\r\n\t        this.insertData['parameterisation'] = this.parameterisation;\r\n\t        this.insertData['energy'] = insert['energy'];\r\n\t        this.insertData['applicator'] = insert['applicator'];\r\n\t        this.insertData['ssd'] = insert['ssd'];\r\n\t        localStorage.setItem(\"last_insertData\", JSON.stringify(this.insertData));\r\n\t        this.router.navigate([\"/parameterise\"]);\r\n\t    };\r\n\t    DicomComponent.prototype.parameterisationFromLocalStorage = function (localStorageParameterisationString) {\r\n\t        var localStorageParameterisation = JSON.parse(localStorageParameterisationString);\r\n\t        this.parameterisation.insert = localStorageParameterisation['insert'];\r\n\t        this.parameterisation.width = localStorageParameterisation['width'];\r\n\t        this.parameterisation.length = localStorageParameterisation['length'];\r\n\t        this.parameterisation.circle = localStorageParameterisation['circle'];\r\n\t        this.parameterisation.ellipse = localStorageParameterisation['ellipse'];\r\n\t    };\r\n\t    DicomComponent.prototype.insertUpdated = function (insert) {\r\n\t        var localStorageParameterisation = localStorage.getItem(JSON.stringify(insert));\r\n\t        if (localStorageParameterisation) {\r\n\t            this.parameterisationFromLocalStorage(localStorageParameterisation);\r\n\t        }\r\n\t        else {\r\n\t            this.parameterisation.insert = insert;\r\n\t            this.parameterisation.width = null;\r\n\t            this.parameterisation.length = null;\r\n\t            this.parameterisation.circle = null;\r\n\t            this.parameterisation.ellipse = null;\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild('dicomOutput'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], DicomComponent.prototype, \"dicomOutputDir\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('getBlockDataButton'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], DicomComponent.prototype, \"getBlockDataButton\", void 0);\r\n\t    DicomComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-dicom',\r\n\t            template: __webpack_require__(117),\r\n\t            styles: ['./dicom.component.css']\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [title_service_1.TitleService, router_1.Router])\r\n\t    ], DicomComponent);\r\n\t    return DicomComponent;\r\n\t}());\r\n\texports.DicomComponent = DicomComponent;\r\n\n\n/***/ },\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */,\n/* 99 */,\n/* 100 */,\n/* 101 */,\n/* 102 */,\n/* 103 */,\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    <h5>Locally reading Dicom patient plan files</h5>\\r\\n    <p>\\r\\n      Use this component to read a dicom patient plan file and extract the electron insert shape. \\r\\n      Export a dicom patient plan file that containts an electron plan from your planning system then open it using the file input box below.\\r\\n    </p>\\r\\n    <p>\\r\\n      For testing purposes you can download a demo dicom file from <a href=\\\"/30x16x30_RandomElectronShapes.dcm\\\">here</a>.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <input type='file' (change)='openFile($event)'>\\r\\n    <div *ngIf=\\\"dicomWarning\\\">{{dicomWarning}}</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <button #getBlockDataButton\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      [disabled]=\\\"true\\\"\\r\\n      (click)=\\\"getBlockData()\\\">Get Dicom Insert Data\\r\\n    </button>\\r\\n\\r\\n    \\r\\n  </div>\\r\\n\\r\\n  <div *ngFor=\\\"let insert of insertList\\\" class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\">\\r\\n\\r\\n\\r\\n      <my-send-to-parameterisation\\r\\n        [machine]=insert.machine\\r\\n        [coordinates]=insert.coordinates\\r\\n        [applicator]=insert.applicator\\r\\n        [ssd]=insert.ssd\\r\\n        [energy]=insert.energy>\\r\\n      </my-send-to-parameterisation>\\r\\n\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <button\\r\\n          mdl-button \\r\\n          mdl-ripple\\r\\n          (click)=\\\"sendToParameterisation(insert)\\\">Send to parameterisation           \\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n    </mdl-card>\\r\\n    \\r\\n\\r\\n\\r\\n    <!--<p>{{insert | json}}</p>-->\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    <h5>Further information</h5>\\r\\n    <p>This Dicom loader does not send the Dicom file off to a server. The entire reading of the dicom file is done within javascript.\\r\\n    You can confirm this yourself by using the chrome web browser, pressing 'Ctrl + Shift + I'\\r\\n    and then clicking on the network tab. When the file is chosen, then the block data is pulled and sent to parameterisation,\\r\\n    at no point in this interaction is there network traffic.</p>\\r\\n\\r\\n    <p>The only data that will be sent to the server will be on either the paremeterisation tab or the model tab, and this data will\\r\\n      just consist of x and y coordinates or widths, lengths, and factors.\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\";\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar core_1 = __webpack_require__(3);\n\tvar angulartics2_1 = __webpack_require__(119);\n\tvar Angulartics2GoogleAnalytics = (function () {\n\t    function Angulartics2GoogleAnalytics(angulartics2) {\n\t        var _this = this;\n\t        this.angulartics2 = angulartics2;\n\t        this.angulartics2.settings.pageTracking.trackRelativePath = true;\n\t        this.angulartics2.settings.ga = {\n\t            additionalAccountNames: [],\n\t            userId: null\n\t        };\n\t        this.angulartics2.pageTrack.subscribe(function (x) { return _this.pageTrack(x.path); });\n\t        this.angulartics2.eventTrack.subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });\n\t        this.angulartics2.exceptionTrack.subscribe(function (x) { return _this.exceptionTrack(x); });\n\t        this.angulartics2.setUsername.subscribe(function (x) { return _this.setUsername(x); });\n\t        this.angulartics2.setUserProperties.subscribe(function (x) { return _this.setUserProperties(x); });\n\t        this.angulartics2.userTimings.subscribe(function (x) { return _this.userTimings(x); });\n\t    }\n\t    Angulartics2GoogleAnalytics.prototype.pageTrack = function (path) {\n\t        if (typeof _gaq !== 'undefined' && _gaq) {\n\t            _gaq.push(['_trackPageview', path]);\n\t            for (var _i = 0, _a = this.angulartics2.settings.ga.additionalAccountNames; _i < _a.length; _i++) {\n\t                var accountName = _a[_i];\n\t                _gaq.push([accountName + '._trackPageview', path]);\n\t            }\n\t            ;\n\t        }\n\t        if (typeof ga !== 'undefined' && ga) {\n\t            if (this.angulartics2.settings.ga.userId) {\n\t                ga('set', '&uid', this.angulartics2.settings.ga.userId);\n\t            }\n\t            ga('send', 'pageview', path);\n\t            for (var _b = 0, _c = this.angulartics2.settings.ga.additionalAccountNames; _b < _c.length; _b++) {\n\t                var accountName = _c[_b];\n\t                ga(accountName + '.send', 'pageview', path);\n\t            }\n\t            ;\n\t        }\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.eventTrack = function (action, properties) {\n\t        if (!properties || !properties.category) {\n\t            properties = properties || {};\n\t            properties.category = 'Event';\n\t        }\n\t        if (properties.value) {\n\t            var parsed = parseInt(properties.value, 10);\n\t            properties.value = isNaN(parsed) ? 0 : parsed;\n\t        }\n\t        if (ga) {\n\t            var eventOptions = {\n\t                eventCategory: properties.category,\n\t                eventAction: action,\n\t                eventLabel: properties.label,\n\t                eventValue: properties.value,\n\t                nonInteraction: properties.noninteraction,\n\t                page: properties.page || location.hash.substring(1) || location.pathname,\n\t                userId: this.angulartics2.settings.ga.userId\n\t            };\n\t            this.setDimensionsAndMetrics(properties);\n\t            if (this.angulartics2.settings.ga.transport) {\n\t                ga('send', 'event', eventOptions, { transport: this.angulartics2.settings.ga.transport });\n\t            }\n\t            else {\n\t                ga('send', 'event', eventOptions);\n\t            }\n\t            for (var _i = 0, _a = this.angulartics2.settings.ga.additionalAccountNames; _i < _a.length; _i++) {\n\t                var accountName = _a[_i];\n\t                ga(accountName + '.send', 'event', eventOptions);\n\t            }\n\t        }\n\t        else if (_gaq) {\n\t            _gaq.push(['_trackEvent', properties.category, action, properties.label, properties.value, properties.noninteraction]);\n\t        }\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.exceptionTrack = function (properties) {\n\t        if (!properties || !properties.appId || !properties.appName || !properties.appVersion) {\n\t            console.error('Must be setted appId, appName and appVersion.');\n\t            return;\n\t        }\n\t        if (properties.fatal === undefined) {\n\t            console.log('No \"fatal\" provided, sending with fatal=true');\n\t            properties.exFatal = true;\n\t        }\n\t        properties.exDescription = properties.description;\n\t        ga('send', 'exception', properties);\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.setUsername = function (userId) {\n\t        this.angulartics2.settings.ga.userId = userId;\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.setUserProperties = function (properties) {\n\t        this.setDimensionsAndMetrics(properties);\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.userTimings = function (properties) {\n\t        if (!properties || !properties.timingCategory || !properties.timingVar || !properties.timingValue) {\n\t            console.error('Properties timingCategory, timingVar, and timingValue are required to be set.');\n\t            return;\n\t        }\n\t        if (ga) {\n\t            ga('send', 'timing', properties);\n\t        }\n\t    };\n\t    Angulartics2GoogleAnalytics.prototype.setDimensionsAndMetrics = function (properties) {\n\t        if (ga) {\n\t            for (var idx = 1; idx <= 200; idx++) {\n\t                if (properties['dimension' + idx.toString()]) {\n\t                    ga('set', 'dimension' + idx.toString(), properties['dimension' + idx.toString()]);\n\t                }\n\t                if (properties['metric' + idx.toString()]) {\n\t                    ga('set', 'metric' + idx.toString(), properties['metric' + idx.toString()]);\n\t                }\n\t            }\n\t        }\n\t    };\n\t    Angulartics2GoogleAnalytics.decorators = [\n\t        { type: core_1.Injectable },\n\t    ];\n\t    Angulartics2GoogleAnalytics.ctorParameters = [\n\t        { type: angulartics2_1.Angulartics2, },\n\t    ];\n\t    return Angulartics2GoogleAnalytics;\n\t}());\n\texports.Angulartics2GoogleAnalytics = Angulartics2GoogleAnalytics;\n\n\n/***/ },\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */,\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */,\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */,\n/* 159 */,\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar router_1 = __webpack_require__(30);\r\n\tvar platform_browser_1 = __webpack_require__(21);\r\n\tvar angulartics2_1 = __webpack_require__(130);\r\n\tvar angulartics2_google_analytics_1 = __webpack_require__(118);\r\n\tvar electron_api_service_1 = __webpack_require__(59);\r\n\tvar title_service_1 = __webpack_require__(63);\r\n\tvar AppComponent = (function () {\r\n\t    function AppComponent(electronApiService, myTitleService, router, title, angulartics2, angulartics2GoogleAnalytics) {\r\n\t        var _this = this;\r\n\t        this.electronApiService = electronApiService;\r\n\t        this.myTitleService = myTitleService;\r\n\t        this.router = router;\r\n\t        this.title = title;\r\n\t        router.events\r\n\t            .filter(function (event) { return event instanceof router_1.NavigationEnd; })\r\n\t            .subscribe(function () {\r\n\t            _this.pageTitle = _this.myTitleService.getTitle();\r\n\t            _this.title.setTitle(_this.myTitleService.getTitle() +\r\n\t                ' | Electron Insert Factor Modelling');\r\n\t        });\r\n\t    }\r\n\t    AppComponent.prototype.ngOnInit = function () {\r\n\t        var redirect = sessionStorage['redirect'];\r\n\t        delete sessionStorage['redirect'];\r\n\t        if (redirect && redirect != location.href) {\r\n\t            history.replaceState(null, null, redirect);\r\n\t            this.router.navigate([redirect]);\r\n\t        }\r\n\t        this.electronApiService.wakeUpServer();\r\n\t        this.pageTitle = this.myTitleService.getTitle();\r\n\t        this.title.setTitle(this.myTitleService.getTitle() +\r\n\t            ' | Electron Insert Factor Modelling');\r\n\t    };\r\n\t    AppComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-app',\r\n\t            template: __webpack_require__(184),\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [electron_api_service_1.ElectronApiService, title_service_1.TitleService, router_1.Router, platform_browser_1.Title, angulartics2_1.Angulartics2, angulartics2_google_analytics_1.Angulartics2GoogleAnalytics])\r\n\t    ], AppComponent);\r\n\t    return AppComponent;\r\n\t}());\r\n\texports.AppComponent = AppComponent;\r\n\n\n/***/ },\n/* 184 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\\r\\n<!--<md-sidenav-layout>\\r\\n\\r\\n  <md-sidenav #sidenav mode=\\\"side\\\" class=\\\"app-sidenav\\\">\\r\\n    <nav class=\\\"mdl-navigation\\\">\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" href>Home</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/export-import\\\" routerLinkActive=\\\"active\\\" href>Export / Import</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\" href>Machine specifications</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\" href>Dicom shape extraction</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\" href>Parameterise inserts</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\" href>Model insert factors</a>\\r\\n    </nav>\\r\\n  </md-sidenav>\\r\\n\\r\\n  <md-toolbar color=\\\"primary\\\">\\r\\n    <button class=\\\"app-icon-button\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n      <i class=\\\"material-icons app-toolbar-menu\\\">menu</i>\\r\\n    </button>\\r\\n\\r\\n    {{pageTitle}}\\r\\n\\r\\n    <span class=\\\"app-toolbar-filler\\\"></span>\\r\\n    <button md-button (click)=\\\"isDarkTheme = !isDarkTheme\\\">TOGGLE DARK THEME</button>\\r\\n  </md-toolbar>\\r\\n\\r\\n  <div class=\\\"app-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</md-sidenav-layout>-->\\r\\n\\r\\n\\r\\n<mdl-layout mdl-layout-fixed-drawer mdl-layout-fixed-header>\\r\\n  <mdl-layout-header>\\r\\n    <mdl-layout-header-row>\\r\\n      <mdl-layout-title>{{pageTitle}}</mdl-layout-title>\\r\\n    </mdl-layout-header-row>\\r\\n  </mdl-layout-header>\\r\\n  <mdl-layout-drawer>\\r\\n    <mdl-layout-title>Electron Factors</mdl-layout-title>\\r\\n    <nav class=\\\"mdl-navigation\\\">\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" href>Home</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\" href>Machine specifications</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\" href>Dicom shape extraction</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\" href>Parameterise inserts</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\" href>Create electron model</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/use-model\\\" routerLinkActive=\\\"active\\\" href>Use electron model</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/storage\\\" routerLinkActive=\\\"active\\\" href>Storage management</a>\\r\\n    </nav>\\r\\n  </mdl-layout-drawer>\\r\\n  <mdl-layout-content>\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n\\r\\n  </mdl-layout-content>\\r\\n</mdl-layout>\";\n\n/***/ },\n/* 185 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar coordinates_1 = __webpack_require__(186);\r\n\tvar PlotComponent = (function () {\r\n\t    function PlotComponent() {\r\n\t        this.insert_x = null;\r\n\t        this.insert_y = null;\r\n\t        this.circle = null;\r\n\t        this.ellipse = null;\r\n\t        this.enabled = true;\r\n\t        this.plot_width = 300;\r\n\t        this.plot_height = 300;\r\n\t        this.jsonValid = true;\r\n\t        this.plt = Bokeh.Plotting;\r\n\t        this.tools = 'pan,crosshair,wheel_zoom,box_zoom,reset,save';\r\n\t        this.xrange = Bokeh.Range1d(-6, 6);\r\n\t        this.yrange = Bokeh.Range1d(-6, 6);\r\n\t        this.fig = this.plt.figure({\r\n\t            title: 'Electron Insert Plot', tools: this.tools,\r\n\t            x_range: this.xrange, y_range: this.yrange,\r\n\t            plot_width: 300, plot_height: 300\r\n\t        });\r\n\t        this.source = new Bokeh.ColumnDataSource();\r\n\t        this.doc = new Bokeh.Document();\r\n\t    }\r\n\t    PlotComponent.prototype.ngOnChanges = function () {\r\n\t        this.jsonValid = false;\r\n\t        this.tempSource = {\r\n\t            \"xs\": [[0], [0], [0]],\r\n\t            \"ys\": [[0], [0], [0]],\r\n\t            \"colour\": [\"navy\", \"firebrick\", \"green\"]\r\n\t        };\r\n\t        var xAll = [];\r\n\t        var yAll = [];\r\n\t        if (this.enabled) {\r\n\t            if (this.insert_x != null && this.insert_y != null) {\r\n\t                this.tempSource.xs[0] = this.insert_x.concat(this.insert_x[0]);\r\n\t                this.tempSource.ys[0] = this.insert_y.concat(this.insert_y[0]);\r\n\t                xAll = xAll.concat(this.tempSource.xs[0]);\r\n\t                yAll = yAll.concat(this.tempSource.ys[0]);\r\n\t            }\r\n\t            if (this.circle) {\r\n\t                if ('x' in this.circle && 'y' in this.circle) {\r\n\t                    this.tempSource.xs[1] = this.circle.x;\r\n\t                    this.tempSource.ys[1] = this.circle.y;\r\n\t                    xAll = xAll.concat(this.tempSource.xs[1]);\r\n\t                    yAll = yAll.concat(this.tempSource.ys[1]);\r\n\t                }\r\n\t            }\r\n\t            if (this.ellipse) {\r\n\t                if ('x' in this.ellipse && 'y' in this.ellipse) {\r\n\t                    this.tempSource.xs[2] = this.ellipse.x;\r\n\t                    this.tempSource.ys[2] = this.ellipse.y;\r\n\t                    xAll = xAll.concat(this.tempSource.xs[2]);\r\n\t                    yAll = yAll.concat(this.tempSource.ys[2]);\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        var xMax = Math.max.apply(Math, xAll);\r\n\t        var xMin = Math.min.apply(Math, xAll);\r\n\t        var yMax = Math.max.apply(Math, yAll);\r\n\t        var yMin = Math.min.apply(Math, yAll);\r\n\t        var range = Math.max(xMax - xMin, yMax - yMin) * 1.1;\r\n\t        var sqXMax = (xMax + xMin) / 2 + range / 2;\r\n\t        var sqXMin = (xMax + xMin) / 2 - range / 2;\r\n\t        var sqYMax = (yMax + yMin) / 2 + range / 2;\r\n\t        var sqYMin = (yMax + yMin) / 2 - range / 2;\r\n\t        this.fig.attributes.x_range.start = sqXMin;\r\n\t        this.fig.attributes.x_range.end = sqXMax;\r\n\t        this.fig.attributes.y_range.start = sqYMin;\r\n\t        this.fig.attributes.y_range.end = sqYMax;\r\n\t        // this.fig.update_range();\r\n\t        // console.log(this.fig);\r\n\t        this.source.data = this.tempSource;\r\n\t    };\r\n\t    PlotComponent.prototype.ngAfterViewInit = function () {\r\n\t        // this.ngOnChanges();\r\n\t        this.fig.multi_line({ field: 'xs' }, { field: 'ys' }, {\r\n\t            source: this.source,\r\n\t            line_width: 2,\r\n\t            color: { field: 'colour' }\r\n\t        });\r\n\t        this.doc.add_root(this.fig);\r\n\t        Bokeh.embed.add_document_standalone(this.doc, this.bokehplot.nativeElement);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], PlotComponent.prototype, \"insert_x\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], PlotComponent.prototype, \"insert_y\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', coordinates_1.Coordinates)\r\n\t    ], PlotComponent.prototype, \"circle\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', coordinates_1.Coordinates)\r\n\t    ], PlotComponent.prototype, \"ellipse\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], PlotComponent.prototype, \"enabled\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], PlotComponent.prototype, \"plot_width\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], PlotComponent.prototype, \"plot_height\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('bokehplot'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], PlotComponent.prototype, \"bokehplot\", void 0);\r\n\t    PlotComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-plot',\r\n\t            template: __webpack_require__(187)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], PlotComponent);\r\n\t    return PlotComponent;\r\n\t}());\r\n\texports.PlotComponent = PlotComponent;\r\n\n\n/***/ },\n/* 186 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Coordinates = (function () {\r\n\t    function Coordinates(x, y) {\r\n\t        this.x = x;\r\n\t        this.y = y;\r\n\t    }\r\n\t    return Coordinates;\r\n\t}());\r\n\texports.Coordinates = Coordinates;\r\n\n\n/***/ },\n/* 187 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div \\r\\n    class=\\\"bk-root\\\" \\r\\n    [style.width]=\\\"plot_width + 'px'\\\" \\r\\n    [style.height]=\\\"plot_height + 'px'\\\">\\r\\n  <div #bokehplot></div>\\r\\n</div>\\r\\n\";\n\n/***/ },\n/* 188 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar angular2_mdl_1 = __webpack_require__(132);\r\n\tvar WidthLengthTableComponent = (function () {\r\n\t    function WidthLengthTableComponent() {\r\n\t        this.tableData = [\r\n\t            { width: null, length: null }\r\n\t        ];\r\n\t        this.tableModel = new angular2_mdl_1.MdlDefaultTableModel([\r\n\t            { key: 'width', name: 'Width', sortable: true, numeric: true },\r\n\t            { key: 'length', name: 'Length', sortable: true, numeric: true }\r\n\t        ]);\r\n\t    }\r\n\t    WidthLengthTableComponent.prototype.ngOnChanges = function () {\r\n\t        if (this.enabled) {\r\n\t            this.tableData[0].width = this.width;\r\n\t            this.tableData[0].length = this.length;\r\n\t        }\r\n\t        else {\r\n\t            this.tableData[0].width = null;\r\n\t            this.tableData[0].length = null;\r\n\t        }\r\n\t    };\r\n\t    WidthLengthTableComponent.prototype.ngOnInit = function () {\r\n\t        this.tableModel.addAll(this.tableData);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], WidthLengthTableComponent.prototype, \"width\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], WidthLengthTableComponent.prototype, \"length\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], WidthLengthTableComponent.prototype, \"enabled\", void 0);\r\n\t    WidthLengthTableComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-width-length-table',\r\n\t            template: __webpack_require__(189),\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], WidthLengthTableComponent);\r\n\t    return WidthLengthTableComponent;\r\n\t}());\r\n\texports.WidthLengthTableComponent = WidthLengthTableComponent;\r\n\n\n/***/ },\n/* 189 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<mdl-table mdl-shadow=\\\"2\\\"\\r\\n  [table-model]=\\\"tableModel\\\">\\r\\n</mdl-table>\";\n\n/***/ },\n/* 190 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar my_json_pipe_1 = __webpack_require__(191);\r\n\tvar coordinates_1 = __webpack_require__(186);\r\n\tvar JsonInputComponent = (function () {\r\n\t    function JsonInputComponent() {\r\n\t        this.insertUpdated = new core_1.EventEmitter();\r\n\t        this.jsonStatus = new core_1.EventEmitter();\r\n\t        this.jsonValid = true;\r\n\t    }\r\n\t    JsonInputComponent.prototype.onInput = function (jsonInput) {\r\n\t        this.parseAndCheckJSON(jsonInput);\r\n\t        this.insertUpdated.emit(this.insert);\r\n\t    };\r\n\t    JsonInputComponent.prototype.ngOnChanges = function () {\r\n\t        if (this.refresh) {\r\n\t            this.jsonInputDir.value = new my_json_pipe_1.MyJsonPipe().transform(this.insert);\r\n\t            this.parseAndCheckJSON(this.jsonInputDir.value);\r\n\t            this.refresh = false;\r\n\t        }\r\n\t    };\r\n\t    JsonInputComponent.prototype.parseAndCheckJSON = function (jsonInput) {\r\n\t        var oldJsonValid = this.jsonValid;\r\n\t        this.jsonValid = false;\r\n\t        try {\r\n\t            var parsedJSON = JSON.parse(jsonInput);\r\n\t            if ('x' in parsedJSON && 'y' in parsedJSON) {\r\n\t                if (parsedJSON.x.length === parsedJSON.y.length) {\r\n\t                    var x = parsedJSON.x;\r\n\t                    var y = parsedJSON.y;\r\n\t                    var insert = {\r\n\t                        x: x,\r\n\t                        y: y\r\n\t                    };\r\n\t                    this.insert = insert;\r\n\t                    this.jsonValid = true;\r\n\t                }\r\n\t                else {\r\n\t                    this.jsonErrorMessage = 'The length of x doesn\\'t match the length of y.';\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                this.jsonErrorMessage = 'Either x or y is missing.';\r\n\t            }\r\n\t        }\r\n\t        catch (err) {\r\n\t            this.jsonErrorMessage = 'Error in JSON input. ' + err;\r\n\t        }\r\n\t        finally {\r\n\t            if (this.jsonValid != oldJsonValid) {\r\n\t                this.jsonStatus.emit(this.jsonValid);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', coordinates_1.Coordinates)\r\n\t    ], JsonInputComponent.prototype, \"insert\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], JsonInputComponent.prototype, \"jsonDisabled\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], JsonInputComponent.prototype, \"refresh\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], JsonInputComponent.prototype, \"insertUpdated\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], JsonInputComponent.prototype, \"jsonStatus\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('jsonInput'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], JsonInputComponent.prototype, \"jsonInputDir\", void 0);\r\n\t    JsonInputComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-json-input',\r\n\t            template: __webpack_require__(192),\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], JsonInputComponent);\r\n\t    return JsonInputComponent;\r\n\t}());\r\n\texports.JsonInputComponent = JsonInputComponent;\r\n\n\n/***/ },\n/* 191 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar MyJsonPipe = (function () {\r\n\t    function MyJsonPipe() {\r\n\t    }\r\n\t    MyJsonPipe.prototype.transform = function (input) {\r\n\t        var jsonText = JSON.stringify(input, null, 4);\r\n\t        jsonText = jsonText.replace(/(-?\\d+(\\.\\d+)?),\\n\\s*/g, \"$1, \");\r\n\t        jsonText = jsonText.replace(/null,\\n\\s*/g, \"null, \");\r\n\t        // jsonText = jsonText.replace(/:/g, \":\\n\");\r\n\t        return jsonText;\r\n\t    };\r\n\t    MyJsonPipe = __decorate([\r\n\t        core_1.Pipe({ name: 'myJson', pure: false }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], MyJsonPipe);\r\n\t    return MyJsonPipe;\r\n\t}());\r\n\texports.MyJsonPipe = MyJsonPipe;\r\n\n\n/***/ },\n/* 192 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<mdl-textfield #jsonInput\\r\\n  [value]=\\\"insert | myJson\\\"\\r\\n  (input)=\\\"onInput($event.target.value)\\\"\\r\\n  rows=\\\"12\\\" \\r\\n  style=\\\"width:100%\\\"\\r\\n  [disabled]=jsonDisabled>\\r\\n</mdl-textfield>\\r\\n<div *ngIf=\\\"!jsonValid\\\">\\r\\n  {{jsonErrorMessage}}\\r\\n</div>\";\n\n/***/ },\n/* 193 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar my_json_pipe_1 = __webpack_require__(191);\r\n\tvar common_1 = __webpack_require__(22);\r\n\tvar JsonEditComponent = (function () {\r\n\t    function JsonEditComponent() {\r\n\t        this.buttonText = \"Button\";\r\n\t        this.inputUpdated = new core_1.EventEmitter();\r\n\t        this.validationCheck = function (parsedJSON) { };\r\n\t        this.useMyJsonPipe = false;\r\n\t        this.lines = 10;\r\n\t        this.jsonValid = true;\r\n\t    }\r\n\t    JsonEditComponent.prototype.onInput = function (jsonInput) {\r\n\t        this.parseAndCheckJSON(jsonInput);\r\n\t    };\r\n\t    JsonEditComponent.prototype.ngOnInit = function () {\r\n\t        var value = \"\";\r\n\t        if (this.useMyJsonPipe) {\r\n\t            value = new my_json_pipe_1.MyJsonPipe().transform(this.input);\r\n\t        }\r\n\t        else {\r\n\t            value = new common_1.JsonPipe().transform(this.input);\r\n\t        }\r\n\t        this.lines = value.split(/\\r\\n|\\r|\\n/).length;\r\n\t        this.editedInput = this.input;\r\n\t    };\r\n\t    JsonEditComponent.prototype.updateInput = function () {\r\n\t        this.input = this.editedInput;\r\n\t        this.inputUpdated.emit(this.input);\r\n\t    };\r\n\t    JsonEditComponent.prototype.parseAndCheckJSON = function (jsonInput) {\r\n\t        var oldJsonValid = this.jsonValid;\r\n\t        this.jsonValid = false;\r\n\t        try {\r\n\t            var parsedJSON = JSON.parse(jsonInput);\r\n\t            this.validationCheck(parsedJSON);\r\n\t            this.editedInput = parsedJSON;\r\n\t            this.jsonValid = true;\r\n\t        }\r\n\t        catch (err) {\r\n\t            this.jsonErrorMessage = 'Error in JSON input. ' + err;\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], JsonEditComponent.prototype, \"input\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], JsonEditComponent.prototype, \"buttonText\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], JsonEditComponent.prototype, \"inputUpdated\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Function)\r\n\t    ], JsonEditComponent.prototype, \"validationCheck\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], JsonEditComponent.prototype, \"useMyJsonPipe\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('jsonInput'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], JsonEditComponent.prototype, \"jsonInputDir\", void 0);\r\n\t    JsonEditComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-json-edit',\r\n\t            template: __webpack_require__(194),\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], JsonEditComponent);\r\n\t    return JsonEditComponent;\r\n\t}());\r\n\texports.JsonEditComponent = JsonEditComponent;\r\n\n\n/***/ },\n/* 194 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<button\\r\\n  mdl-button mdl-button-type=\\\"raised\\\" \\r\\n  mdl-colored=\\\"primary\\\" \\r\\n  mdl-ripple\\r\\n  [disabled]=\\\"!jsonValid || input==editedInput\\\"\\r\\n  (click)=\\\"updateInput()\\\">{{buttonText}} \\r\\n</button>\\r\\n<div *ngIf=\\\"!jsonValid\\\">\\r\\n  {{jsonErrorMessage}}\\r\\n</div>\\r\\n<mdl-textfield *ngIf=\\\"!useMyJsonPipe\\\" #jsonInput\\r\\n  [value]=\\\"input | json\\\"\\r\\n  (input)=\\\"onInput($event.target.value)\\\"\\r\\n  [rows]=\\\"20\\\" \\r\\n  style=\\\"width:100%\\\">\\r\\n</mdl-textfield>\\r\\n<mdl-textfield *ngIf=\\\"useMyJsonPipe\\\" #jsonInput\\r\\n  [value]=\\\"input | myJson\\\"\\r\\n  (input)=\\\"onInput($event.target.value)\\\"\\r\\n  [rows]=\\\"20\\\" \\r\\n  style=\\\"width:100%\\\">\\r\\n</mdl-textfield>\";\n\n/***/ },\n/* 195 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar coordinates_1 = __webpack_require__(186);\r\n\tvar angular2_mdl_1 = __webpack_require__(132);\r\n\tvar SendToParameterisationComponent = (function () {\r\n\t    function SendToParameterisationComponent() {\r\n\t        this.tableData = [\r\n\t            { machine: null, applicator: null, energy: null, ssd: null }\r\n\t        ];\r\n\t        this.tableModel = new angular2_mdl_1.MdlDefaultTableModel([\r\n\t            { key: 'machine', name: 'Machine', sortable: true, numeric: false },\r\n\t            { key: 'applicator', name: 'App', sortable: true, numeric: false },\r\n\t            { key: 'energy', name: 'Eng', sortable: true, numeric: true },\r\n\t            { key: 'ssd', name: 'SSD', sortable: true, numeric: true }\r\n\t        ]);\r\n\t    }\r\n\t    SendToParameterisationComponent.prototype.ngOnInit = function () {\r\n\t        this.tableData[0].machine = this.machine;\r\n\t        this.tableData[0].applicator = this.applicator;\r\n\t        this.tableData[0].energy = this.energy;\r\n\t        this.tableData[0].ssd = this.ssd;\r\n\t        this.tableModel.addAll(this.tableData);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], SendToParameterisationComponent.prototype, \"applicator\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], SendToParameterisationComponent.prototype, \"machine\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], SendToParameterisationComponent.prototype, \"energy\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], SendToParameterisationComponent.prototype, \"ssd\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', coordinates_1.Coordinates)\r\n\t    ], SendToParameterisationComponent.prototype, \"coordinates\", void 0);\r\n\t    SendToParameterisationComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-send-to-parameterisation',\r\n\t            template: __webpack_require__(196),\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], SendToParameterisationComponent);\r\n\t    return SendToParameterisationComponent;\r\n\t}());\r\n\texports.SendToParameterisationComponent = SendToParameterisationComponent;\r\n\n\n/***/ },\n/* 196 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    <my-plot \\r\\n      [insert_x]=\\\"coordinates.x\\\"\\r\\n      [insert_y]=\\\"coordinates.y\\\">\\r\\n    </my-plot>\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    <mdl-table mdl-shadow=\\\"2\\\"\\r\\n      [table-model]=\\\"tableModel\\\">\\r\\n    </mdl-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\";\n\n/***/ },\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar bokeh_pcolour_1 = __webpack_require__(198);\r\n\tvar BokehCreateModelComponent = (function (_super) {\r\n\t    __extends(BokehCreateModelComponent, _super);\r\n\t    function BokehCreateModelComponent() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.title = \"Figure Title\";\r\n\t        this.plot_width = 300;\r\n\t        this.plot_height = 300;\r\n\t        this.scatter_z = [0.5];\r\n\t        this.enabled = true;\r\n\t    }\r\n\t    BokehCreateModelComponent.prototype.ngOnChanges = function () {\r\n\t        this.updateHoverData();\r\n\t        this.runAllUpdates();\r\n\t    };\r\n\t    BokehCreateModelComponent.prototype.updateHoverData = function () {\r\n\t        if (this.pcolour_data.x != this.pcolour_x) {\r\n\t            this.pcolour_hover_width = [];\r\n\t            for (var _i = 0, _a = this.pcolour_x; _i < _a.length; _i++) {\r\n\t                var x = _a[_i];\r\n\t                this.pcolour_hover_width.push(x.toFixed(1));\r\n\t            }\r\n\t        }\r\n\t        if (this.pcolour_data.y != this.pcolour_y) {\r\n\t            this.pcolour_hover_length = [];\r\n\t            for (var _b = 0, _c = this.pcolour_y; _b < _c.length; _b++) {\r\n\t                var y = _c[_b];\r\n\t                this.pcolour_hover_length.push(y.toFixed(1));\r\n\t            }\r\n\t        }\r\n\t        if (this.pcolour_data.z != this.pcolour_z) {\r\n\t            this.pcolour_hover_predicted_factor = [];\r\n\t            for (var _d = 0, _e = this.pcolour_z; _d < _e.length; _d++) {\r\n\t                var z = _e[_d];\r\n\t                this.pcolour_hover_predicted_factor.push((Math.round(z * 1000) / 1000).toFixed(3));\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    BokehCreateModelComponent.prototype.ngAfterViewInit = function () {\r\n\t        var hover_tool = new Bokeh.HoverTool({\r\n\t            tooltips: [\r\n\t                [\"Width\", \" @hover_width cm\"],\r\n\t                [\"Length\", \" @hover_length cm\"],\r\n\t                [\"Predicted Factor\", \" @hover_predicted_factor\"]\r\n\t            ],\r\n\t            renderers: [\r\n\t                this.pcolour_renderer\r\n\t            ]\r\n\t        });\r\n\t        this.fig.add_tools(hover_tool);\r\n\t        this.doc.add_root(this.fig);\r\n\t        Bokeh.embed.add_document_standalone(this.doc, this.bokehplot.nativeElement);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], BokehCreateModelComponent.prototype, \"title\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], BokehCreateModelComponent.prototype, \"plot_width\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], BokehCreateModelComponent.prototype, \"plot_height\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehCreateModelComponent.prototype, \"scatter_x\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehCreateModelComponent.prototype, \"scatter_y\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehCreateModelComponent.prototype, \"scatter_z\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehCreateModelComponent.prototype, \"pcolour_x\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehCreateModelComponent.prototype, \"pcolour_y\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehCreateModelComponent.prototype, \"pcolour_z\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], BokehCreateModelComponent.prototype, \"enabled\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('bokehplot'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], BokehCreateModelComponent.prototype, \"bokehplot\", void 0);\r\n\t    BokehCreateModelComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-bokeh-create-model',\r\n\t            template: __webpack_require__(187)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], BokehCreateModelComponent);\r\n\t    return BokehCreateModelComponent;\r\n\t}(bokeh_pcolour_1.BokehPcolour));\r\n\texports.BokehCreateModelComponent = BokehCreateModelComponent;\r\n\n\n/***/ },\n/* 198 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar BokehPcolour = (function () {\r\n\t    function BokehPcolour() {\r\n\t        this.title = \"Figure Title\";\r\n\t        this.plot_width = 300;\r\n\t        this.plot_height = 300;\r\n\t        this.scatter_z = [0.5];\r\n\t        this.enabled = true;\r\n\t        this.pcolour_hover_width = [];\r\n\t        this.pcolour_hover_length = [];\r\n\t        this.pcolour_hover_predicted_factor = [];\r\n\t        this.scatter_hover_width = [];\r\n\t        this.scatter_hover_length = [];\r\n\t        this.scatter_hover_area = [];\r\n\t        this.scatter_hover_measured_factor = [];\r\n\t        this.scatter_hover_predicted_factor = [];\r\n\t        this.plt = Bokeh.Plotting;\r\n\t        this.tools = 'pan,crosshair,wheel_zoom,box_zoom,reset,save';\r\n\t        this.old_scatter_z = [];\r\n\t        this.old_pcolour_z = [];\r\n\t        this.scatter_c = [];\r\n\t        this.pcolour_c = [];\r\n\t        this.scatter_data = {\r\n\t            x: [],\r\n\t            y: [],\r\n\t            z: [],\r\n\t            hover_width: [],\r\n\t            hover_length: [],\r\n\t            hover_area: [],\r\n\t            hover_measured_factor: [],\r\n\t            hover_predicted_factor: [],\r\n\t            c: []\r\n\t        };\r\n\t        this.scatter_source = new Bokeh.ColumnDataSource({\r\n\t            data: this.scatter_data\r\n\t        });\r\n\t        this.pcolour_data = {\r\n\t            x: [],\r\n\t            y: [],\r\n\t            z: [],\r\n\t            hover_width: [],\r\n\t            hover_length: [],\r\n\t            hover_predicted_factor: [],\r\n\t            c: []\r\n\t        };\r\n\t        this.pcolour_source = new Bokeh.ColumnDataSource({\r\n\t            data: this.pcolour_data\r\n\t        });\r\n\t        this.doc = new Bokeh.Document();\r\n\t        this.viridis_hex = [\r\n\t            \"#440154\", \"#440256\", \"#450457\", \"#450559\", \"#46075a\", \"#46085c\", \"#460a5d\", \"#460b5e\", \"#470d60\", \"#470e61\", \"#471063\", \"#471164\", \"#471365\", \"#481467\", \"#481668\", \"#481769\", \"#48186a\", \"#481a6c\", \"#481b6d\", \"#481c6e\", \"#481d6f\", \"#481f70\", \"#482071\", \"#482173\", \"#482374\", \"#482475\", \"#482576\", \"#482677\", \"#482878\", \"#482979\", \"#472a7a\", \"#472c7a\", \"#472d7b\", \"#472e7c\", \"#472f7d\", \"#46307e\", \"#46327e\", \"#46337f\", \"#463480\", \"#453581\", \"#453781\", \"#453882\", \"#443983\", \"#443a83\", \"#443b84\", \"#433d84\", \"#433e85\", \"#423f85\", \"#424086\", \"#424186\", \"#414287\", \"#414487\", \"#404588\", \"#404688\", \"#3f4788\", \"#3f4889\", \"#3e4989\", \"#3e4a89\", \"#3e4c8a\", \"#3d4d8a\", \"#3d4e8a\", \"#3c4f8a\", \"#3c508b\", \"#3b518b\", \"#3b528b\", \"#3a538b\", \"#3a548c\", \"#39558c\", \"#39568c\", \"#38588c\", \"#38598c\", \"#375a8c\", \"#375b8d\", \"#365c8d\", \"#365d8d\", \"#355e8d\", \"#355f8d\", \"#34608d\", \"#34618d\", \"#33628d\", \"#33638d\", \"#32648e\", \"#32658e\", \"#31668e\", \"#31678e\", \"#31688e\", \"#30698e\", \"#306a8e\", \"#2f6b8e\", \"#2f6c8e\", \"#2e6d8e\", \"#2e6e8e\", \"#2e6f8e\", \"#2d708e\", \"#2d718e\", \"#2c718e\", \"#2c728e\", \"#2c738e\", \"#2b748e\", \"#2b758e\", \"#2a768e\", \"#2a778e\", \"#2a788e\", \"#29798e\", \"#297a8e\", \"#297b8e\", \"#287c8e\", \"#287d8e\", \"#277e8e\", \"#277f8e\", \"#27808e\", \"#26818e\", \"#26828e\", \"#26828e\", \"#25838e\", \"#25848e\", \"#25858e\", \"#24868e\", \"#24878e\", \"#23888e\", \"#23898e\", \"#238a8d\", \"#228b8d\", \"#228c8d\", \"#228d8d\", \"#218e8d\", \"#218f8d\", \"#21908d\", \"#21918c\", \"#20928c\", \"#20928c\", \"#20938c\", \"#1f948c\", \"#1f958b\", \"#1f968b\", \"#1f978b\", \"#1f988b\", \"#1f998a\", \"#1f9a8a\", \"#1e9b8a\", \"#1e9c89\", \"#1e9d89\", \"#1f9e89\", \"#1f9f88\", \"#1fa088\", \"#1fa188\", \"#1fa187\", \"#1fa287\", \"#20a386\", \"#20a486\", \"#21a585\", \"#21a685\", \"#22a785\", \"#22a884\", \"#23a983\", \"#24aa83\", \"#25ab82\", \"#25ac82\", \"#26ad81\", \"#27ad81\", \"#28ae80\", \"#29af7f\", \"#2ab07f\", \"#2cb17e\", \"#2db27d\", \"#2eb37c\", \"#2fb47c\", \"#31b57b\", \"#32b67a\", \"#34b679\", \"#35b779\", \"#37b878\", \"#38b977\", \"#3aba76\", \"#3bbb75\", \"#3dbc74\", \"#3fbc73\", \"#40bd72\", \"#42be71\", \"#44bf70\", \"#46c06f\", \"#48c16e\", \"#4ac16d\", \"#4cc26c\", \"#4ec36b\", \"#50c46a\", \"#52c569\", \"#54c568\", \"#56c667\", \"#58c765\", \"#5ac864\", \"#5cc863\", \"#5ec962\", \"#60ca60\", \"#63cb5f\", \"#65cb5e\", \"#67cc5c\", \"#69cd5b\", \"#6ccd5a\", \"#6ece58\", \"#70cf57\", \"#73d056\", \"#75d054\", \"#77d153\", \"#7ad151\", \"#7cd250\", \"#7fd34e\", \"#81d34d\", \"#84d44b\", \"#86d549\", \"#89d548\", \"#8bd646\", \"#8ed645\", \"#90d743\", \"#93d741\", \"#95d840\", \"#98d83e\", \"#9bd93c\", \"#9dd93b\", \"#a0da39\", \"#a2da37\", \"#a5db36\", \"#a8db34\", \"#aadc32\", \"#addc30\", \"#b0dd2f\", \"#b2dd2d\", \"#b5de2b\", \"#b8de29\", \"#bade28\", \"#bddf26\", \"#c0df25\", \"#c2df23\", \"#c5e021\", \"#c8e020\", \"#cae11f\", \"#cde11d\", \"#d0e11c\", \"#d2e21b\", \"#d5e21a\", \"#d8e219\", \"#dae319\", \"#dde318\", \"#dfe318\", \"#e2e418\", \"#e5e419\", \"#e7e419\", \"#eae51a\", \"#ece51b\", \"#efe51c\", \"#f1e51d\", \"#f4e61e\", \"#f6e620\", \"#f8e621\", \"#fbe723\", \"#fde725\"];\r\n\t        this.colour_mapper = new Bokeh.LinearColorMapper({\r\n\t            palette: this.viridis_hex\r\n\t        });\r\n\t        this.ticker = new Bokeh.BasicTicker();\r\n\t        this.colour_bar = new Bokeh.ColorBar({\r\n\t            ticker: this.ticker,\r\n\t            label_standoff: 7,\r\n\t            location: [-6, 0]\r\n\t        });\r\n\t    }\r\n\t    BokehPcolour.prototype.ngOnInit = function () {\r\n\t        this.figureInitialise();\r\n\t    };\r\n\t    BokehPcolour.prototype.figureInitialise = function () {\r\n\t        this.fig = this.plt.figure({\r\n\t            title: this.title, tools: this.tools,\r\n\t            plot_width: this.plot_width, plot_height: this.plot_height\r\n\t        });\r\n\t        this.pcolour_renderer = this.fig.rect({ field: 'x' }, { field: 'y' }, 0.1, 0.1, {\r\n\t            source: this.pcolour_source,\r\n\t            color: { field: 'c' }\r\n\t        });\r\n\t        this.scatter_renderer = this.fig.circle({ field: 'x' }, { field: 'y' }, {\r\n\t            source: this.scatter_source,\r\n\t            size: 15,\r\n\t            line_color: 'black',\r\n\t            fill_color: { field: 'c' },\r\n\t            line_width: 2\r\n\t        });\r\n\t        this.fig.add_layout(this.colour_bar, 'left');\r\n\t    };\r\n\t    BokehPcolour.prototype.runAllUpdates = function () {\r\n\t        this.updateScatterData();\r\n\t        this.updatePcolourData();\r\n\t        this.updateScatterColour();\r\n\t        this.updateSourceData();\r\n\t        this.updateFigureDimensions();\r\n\t    };\r\n\t    BokehPcolour.prototype.updateScatterData = function () {\r\n\t        this.scatter_data = {\r\n\t            x: this.scatter_x,\r\n\t            y: this.scatter_y,\r\n\t            z: this.scatter_z,\r\n\t            hover_width: this.scatter_hover_width,\r\n\t            hover_length: this.scatter_hover_length,\r\n\t            hover_area: this.scatter_hover_area,\r\n\t            hover_measured_factor: this.scatter_hover_measured_factor,\r\n\t            hover_predicted_factor: this.scatter_hover_predicted_factor,\r\n\t            c: this.scatter_c\r\n\t        };\r\n\t    };\r\n\t    BokehPcolour.prototype.updatePcolourData = function () {\r\n\t        this.pcolour_data = {\r\n\t            x: this.pcolour_x,\r\n\t            y: this.pcolour_y,\r\n\t            z: this.pcolour_z,\r\n\t            hover_width: this.pcolour_hover_width,\r\n\t            hover_length: this.pcolour_hover_length,\r\n\t            hover_predicted_factor: this.pcolour_hover_predicted_factor,\r\n\t            c: this.pcolour_c\r\n\t        };\r\n\t    };\r\n\t    BokehPcolour.prototype.updateScatterColour = function () {\r\n\t        if (this.old_scatter_z != this.scatter_z || this.old_pcolour_z != this.pcolour_z) {\r\n\t            var allZ = this.scatter_z.concat(this.pcolour_z);\r\n\t            this.vmin = Math.min.apply(Math, allZ);\r\n\t            this.vmax = Math.max.apply(Math, allZ);\r\n\t            this.colour_mapper.low = this.vmin;\r\n\t            this.colour_mapper.high = this.vmax;\r\n\t            this.colour_bar.color_mapper = this.colour_mapper;\r\n\t            this.scatter_c = this.colour_mapper.v_compute(this.scatter_z);\r\n\t            this.pcolour_c = this.colour_mapper.v_compute(this.pcolour_z);\r\n\t            this.scatter_data.c = this.scatter_c;\r\n\t            this.pcolour_data.c = this.pcolour_c;\r\n\t            this.old_scatter_z = this.scatter_z;\r\n\t            this.old_pcolour_z = this.pcolour_z;\r\n\t            if (this.scatter_data.c.length < this.scatter_data.x.length) {\r\n\t                var difference = this.scatter_data.x.length - this.scatter_data.c.length;\r\n\t                for (var i = 0; i < difference; i++) {\r\n\t                    this.scatter_data.c.push('#ffffff');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    BokehPcolour.prototype.updateSourceData = function () {\r\n\t        if (this.scatter_source.data != this.scatter_data) {\r\n\t            this.scatter_source.data = this.scatter_data;\r\n\t        }\r\n\t        if (this.pcolour_source.data != this.pcolour_data) {\r\n\t            this.pcolour_source.data = this.pcolour_data;\r\n\t        }\r\n\t    };\r\n\t    BokehPcolour.prototype.updateFigureDimensions = function () {\r\n\t        if (this.fig != null) {\r\n\t            if (this.fig.width != this.plot_width) {\r\n\t                if (this.plot_width < 200) {\r\n\t                    this.fig.width = 200;\r\n\t                }\r\n\t                else {\r\n\t                    this.fig.width = this.plot_width;\r\n\t                }\r\n\t            }\r\n\t            if (this.fig.height != this.plot_height) {\r\n\t                this.fig.height = this.plot_height;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    return BokehPcolour;\r\n\t}());\r\n\texports.BokehPcolour = BokehPcolour;\r\n\n\n/***/ },\n/* 199 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar bokeh_pcolour_1 = __webpack_require__(198);\r\n\tvar BokehUseModelComponent = (function (_super) {\r\n\t    __extends(BokehUseModelComponent, _super);\r\n\t    function BokehUseModelComponent() {\r\n\t        _super.apply(this, arguments);\r\n\t        this.title = \"Figure Title\";\r\n\t        this.plot_width = 300;\r\n\t        this.plot_height = 300;\r\n\t        this.scatter_z = [0.5];\r\n\t        this.enabled = true;\r\n\t        this.predicted_factor = [];\r\n\t        this.area = [];\r\n\t        this.old_area = [];\r\n\t        this.old_predicted_factor = [];\r\n\t    }\r\n\t    BokehUseModelComponent.prototype.ngOnChanges = function () {\r\n\t        this.updateHoverData();\r\n\t        this.runAllUpdates();\r\n\t    };\r\n\t    BokehUseModelComponent.prototype.updateHoverData = function () {\r\n\t        if (this.scatter_data.x != this.scatter_x) {\r\n\t            this.scatter_hover_width = [];\r\n\t            for (var _i = 0, _a = this.scatter_x; _i < _a.length; _i++) {\r\n\t                var x = _a[_i];\r\n\t                this.scatter_hover_width.push((Math.round(x * 10) / 10).toFixed(1));\r\n\t            }\r\n\t        }\r\n\t        if (this.scatter_data.y != this.scatter_y) {\r\n\t            this.scatter_hover_length = [];\r\n\t            for (var _b = 0, _c = this.scatter_y; _b < _c.length; _b++) {\r\n\t                var y = _c[_b];\r\n\t                this.scatter_hover_length.push((Math.round(y * 10) / 10).toFixed(1));\r\n\t            }\r\n\t        }\r\n\t        if (this.scatter_data.z != this.scatter_z) {\r\n\t            this.scatter_hover_measured_factor = [];\r\n\t            for (var _d = 0, _e = this.scatter_z; _d < _e.length; _d++) {\r\n\t                var z = _e[_d];\r\n\t                this.scatter_hover_measured_factor.push((Math.round(z * 1000) / 1000).toFixed(3));\r\n\t            }\r\n\t            if (this.scatter_hover_measured_factor.length < this.scatter_x.length) {\r\n\t                var difference = this.scatter_x.length - this.scatter_hover_measured_factor.length;\r\n\t                for (var i = 0; i < difference; i++) {\r\n\t                    this.scatter_hover_measured_factor.push('Not given');\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        if (this.old_predicted_factor != this.predicted_factor) {\r\n\t            this.scatter_hover_predicted_factor = [];\r\n\t            for (var _f = 0, _g = this.predicted_factor; _f < _g.length; _f++) {\r\n\t                var z = _g[_f];\r\n\t                this.scatter_hover_predicted_factor.push((Math.round(z * 1000) / 1000).toFixed(3));\r\n\t            }\r\n\t            this.old_predicted_factor = this.predicted_factor;\r\n\t        }\r\n\t        if (this.old_area != this.area) {\r\n\t            this.scatter_hover_area = [];\r\n\t            for (var _h = 0, _j = this.area; _h < _j.length; _h++) {\r\n\t                var a = _j[_h];\r\n\t                this.scatter_hover_area.push((Math.round(a * 10) / 10).toFixed(1));\r\n\t            }\r\n\t            this.old_area = this.area;\r\n\t        }\r\n\t    };\r\n\t    // hover_width: <string[]> [],\r\n\t    // hover_length: <string[]> [],\r\n\t    // hover_area: <string[]> [],\r\n\t    // hover_measured_factor: <string[]> [],\r\n\t    // hover_predicted_factor: <string[]> [],\r\n\t    BokehUseModelComponent.prototype.ngAfterViewInit = function () {\r\n\t        var hover_tool = new Bokeh.HoverTool({\r\n\t            tooltips: [\r\n\t                [\"Width\", \" @hover_width cm\"],\r\n\t                [\"Length\", \" @hover_length cm\"],\r\n\t                [\"Area\", \" @hover_area cm^2\"],\r\n\t                [\"Measured factor\", \" @hover_measured_factor\"],\r\n\t                [\"Predicted factor\", \" @hover_predicted_factor\"],\r\n\t            ],\r\n\t            renderers: [\r\n\t                this.scatter_renderer\r\n\t            ]\r\n\t        });\r\n\t        this.fig.add_tools(hover_tool);\r\n\t        this.doc.add_root(this.fig);\r\n\t        Bokeh.embed.add_document_standalone(this.doc, this.bokehplot.nativeElement);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], BokehUseModelComponent.prototype, \"title\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], BokehUseModelComponent.prototype, \"plot_width\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Number)\r\n\t    ], BokehUseModelComponent.prototype, \"plot_height\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehUseModelComponent.prototype, \"scatter_x\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehUseModelComponent.prototype, \"scatter_y\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehUseModelComponent.prototype, \"scatter_z\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehUseModelComponent.prototype, \"pcolour_x\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehUseModelComponent.prototype, \"pcolour_y\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehUseModelComponent.prototype, \"pcolour_z\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], BokehUseModelComponent.prototype, \"enabled\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehUseModelComponent.prototype, \"predicted_factor\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], BokehUseModelComponent.prototype, \"area\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild('bokehplot'), \r\n\t        __metadata('design:type', Object)\r\n\t    ], BokehUseModelComponent.prototype, \"bokehplot\", void 0);\r\n\t    BokehUseModelComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-bokeh-use-model',\r\n\t            template: __webpack_require__(187)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], BokehUseModelComponent);\r\n\t    return BokehUseModelComponent;\r\n\t}(bokeh_pcolour_1.BokehPcolour));\r\n\texports.BokehUseModelComponent = BokehUseModelComponent;\r\n\n\n/***/ },\n/* 200 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(3);\r\n\tvar ChooseSpecificationsComponent = (function () {\r\n\t    function ChooseSpecificationsComponent() {\r\n\t        this.currentSettings = {\r\n\t            machine: null,\r\n\t            energy: null,\r\n\t            applicator: null,\r\n\t            ssd: null\r\n\t        };\r\n\t        this.settingsUpdated = new core_1.EventEmitter();\r\n\t    }\r\n\t    ChooseSpecificationsComponent.prototype.ngOnInit = function () {\r\n\t        this.currentSettings.energy = JSON.parse(localStorage.getItem(\"currentEnergy\"));\r\n\t        this.currentSettings.applicator = JSON.parse(localStorage.getItem(\"currentApplicator\"));\r\n\t        this.currentSettings.ssd = JSON.parse(localStorage.getItem(\"currentSSD\"));\r\n\t        this.allMachineSpecifications = JSON.parse(localStorage.getItem(\"specifications\"));\r\n\t        if (this.allMachineSpecifications == null) {\r\n\t            this.allMachineSpecifications = {};\r\n\t            this.machineList = [];\r\n\t        }\r\n\t        else {\r\n\t            this.machineList = Object.keys(this.allMachineSpecifications).sort();\r\n\t            this.currentSettings.machine = String(JSON.parse(localStorage.getItem(\"current_machine\")));\r\n\t            if (this.currentSettings.machine == null ||\r\n\t                this.allMachineSpecifications[this.currentSettings.machine] === undefined) {\r\n\t                this.currentSettings.machine = this.machineList[0];\r\n\t            }\r\n\t            this.currentMachineSpecifications = this.allMachineSpecifications[this.currentSettings.machine];\r\n\t        }\r\n\t        this.settingsUpdated.emit(this.currentSettings);\r\n\t    };\r\n\t    ChooseSpecificationsComponent.prototype.updateMachineID = function (newCurrentMachine) {\r\n\t        this.currentSettings.machine = newCurrentMachine;\r\n\t        localStorage.setItem(\"current_machine\", JSON.stringify(newCurrentMachine));\r\n\t        this.currentMachineSpecifications = this.allMachineSpecifications[this.currentSettings.machine];\r\n\t        if (this.currentMachineSpecifications != null) {\r\n\t            for (var _i = 0, _a = [\"energy\", \"applicator\", \"ssd\"]; _i < _a.length; _i++) {\r\n\t                var item = _a[_i];\r\n\t                if (this.currentMachineSpecifications[item].length > 0) {\r\n\t                    this.currentSettings[item] = this.currentMachineSpecifications[item][0];\r\n\t                }\r\n\t                else {\r\n\t                    this.currentSettings[item] = null;\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t        else {\r\n\t            for (var _b = 0, _c = [\"energy\", \"applicator\", \"ssd\"]; _b < _c.length; _b++) {\r\n\t                var item = _c[_b];\r\n\t                this.currentSettings[item] = null;\r\n\t            }\r\n\t        }\r\n\t        localStorage.setItem(\"currentEnergy\", JSON.stringify(Number(this.currentSettings.energy)));\r\n\t        localStorage.setItem(\"currentApplicator\", JSON.stringify(this.currentSettings.applicator));\r\n\t        localStorage.setItem(\"currentSSD\", JSON.stringify(Number(this.currentSettings.ssd)));\r\n\t        this.settingsUpdated.emit(this.currentSettings);\r\n\t    };\r\n\t    ChooseSpecificationsComponent.prototype.updateEnergy = function (newCurrentEnergy) {\r\n\t        this.currentSettings.energy = Number(newCurrentEnergy);\r\n\t        localStorage.setItem(\"currentEnergy\", JSON.stringify(Number(newCurrentEnergy)));\r\n\t        this.settingsUpdated.emit(this.currentSettings);\r\n\t    };\r\n\t    ChooseSpecificationsComponent.prototype.updateApplicator = function (newCurrentApplicator) {\r\n\t        this.currentSettings.applicator = newCurrentApplicator;\r\n\t        localStorage.setItem(\"currentApplicator\", JSON.stringify(newCurrentApplicator));\r\n\t        this.settingsUpdated.emit(this.currentSettings);\r\n\t    };\r\n\t    ChooseSpecificationsComponent.prototype.updateSSD = function (newCurrentSSD) {\r\n\t        this.currentSettings.ssd = Number(newCurrentSSD);\r\n\t        localStorage.setItem(\"currentSSD\", JSON.stringify(Number(newCurrentSSD)));\r\n\t        this.settingsUpdated.emit(this.currentSettings);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ChooseSpecificationsComponent.prototype, \"currentSettings\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ChooseSpecificationsComponent.prototype, \"settingsUpdated\", void 0);\r\n\t    ChooseSpecificationsComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'my-choose-specifications',\r\n\t            template: __webpack_require__(201)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ChooseSpecificationsComponent);\r\n\t    return ChooseSpecificationsComponent;\r\n\t}());\r\n\texports.ChooseSpecificationsComponent = ChooseSpecificationsComponent;\r\n\n\n/***/ },\n/* 201 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div \\r\\n      *ngIf=\\\"this.machineList.length > 0\\\" \\r\\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\r\\n    <h6>Machine ID</h6>\\r\\n    <select\\r\\n        [(ngModel)]=\\\"currentSettings.machine\\\"\\r\\n        (input)=\\\"updateMachineID($event.target.value)\\\">\\r\\n      <option *ngFor=\\\"let machine of machineList\\\">{{machine}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div \\r\\n      *ngIf=\\\"this.machineList.length > 0 && currentSettings.machine != null\\\" \\r\\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\r\\n    <h6>Energy</h6>\\r\\n    <select\\r\\n        [(ngModel)]=\\\"currentSettings.energy\\\"\\r\\n        (input)=\\\"updateEnergy($event.target.value)\\\"\\r\\n        *ngIf=\\\"currentMachineSpecifications.energy.length > 0\\\">\\r\\n      <option *ngFor=\\\"let energy of currentMachineSpecifications.energy\\\" value=\\\"{{energy}}\\\">{{energy}} MeV</option>\\r\\n    </select>\\r\\n    <p *ngIf=\\\"currentMachineSpecifications.energy == 0\\\">\\r\\n      This machine doesn't have any energies defined. Please \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        define energies.\\r\\n      </a>\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div \\r\\n      *ngIf=\\\"this.machineList.length > 0 && currentSettings.machine != null\\\" \\r\\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\r\\n    <h6>Applicator</h6>\\r\\n    <select \\r\\n        [(ngModel)]=\\\"currentSettings.applicator\\\"\\r\\n        (input)=\\\"updateApplicator($event.target.value)\\\"\\r\\n        *ngIf=\\\"currentMachineSpecifications.applicator.length > 0\\\">\\r\\n      <option *ngFor=\\\"let applicator of currentMachineSpecifications.applicator\\\">{{applicator}}</option>\\r\\n    </select>\\r\\n    <p *ngIf=\\\"currentMachineSpecifications.applicator == 0\\\">\\r\\n      This machine doesn't have any applicators defined. Please \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        define applicators.\\r\\n      </a>\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div \\r\\n      *ngIf=\\\"this.machineList.length > 0 && currentSettings.machine != null\\\" \\r\\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\r\\n    <h6>SSD</h6>\\r\\n    <select  \\r\\n        [(ngModel)]=\\\"currentSettings.ssd\\\"\\r\\n        (input)=\\\"updateSSD($event.target.value)\\\"\\r\\n        *ngIf=\\\"currentMachineSpecifications.ssd.length > 0\\\">\\r\\n      <option *ngFor=\\\"let ssd of currentMachineSpecifications.ssd\\\">{{ssd}}</option>\\r\\n    </select>\\r\\n    <p *ngIf=\\\"currentMachineSpecifications.ssd == 0\\\">\\r\\n      This machine doesn't have an ssd defined. Please \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        define at least one ssd.\\r\\n      </a>\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n  \\r\\n\";\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** app.859199ba7a2003296388.js\n **/","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (process.env.ENV === 'production') {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/main.ts\n **/","import { NgModule } from '@angular/core'\r\nimport { BrowserModule } from '@angular/platform-browser'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { HttpModule } from '@angular/http'\r\nimport { Title } from '@angular/platform-browser'\r\nimport { NgZone } from '@angular/core'\r\n// import {MaterialModule} from '@angular/material'\r\n\r\nimport { routing } from './app.routing'\r\n\r\nimport { Angulartics2 } from 'angulartics2'\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/src/providers/angulartics2-google-analytics'\r\nimport { Angulartics2Module } from 'angulartics2'\r\nimport { Angulartics2On } from 'angulartics2/src/core/angulartics2On'\r\n\r\nimport { MdlModule } from 'angular2-mdl'\r\n\r\nimport { AppComponent }  from './app.component'\r\nimport { PlotComponent } from './plot.component'\r\nimport { ParameteriseComponent } from './parameterise.component'\r\nimport { PageNotFoundComponent } from './page-not-found.component'\r\nimport { WidthLengthTableComponent } from './width-length-table.component'\r\nimport { JsonInputComponent } from './json-input.component'\r\nimport { HomeComponent } from './home.component'\r\nimport { CreateModelComponent } from './create-model.component'\r\nimport { UseModelComponent } from './use-model.component'\r\nimport { StorageManagementComponent } from './storage-management.component'\r\nimport { SpecificationsComponent } from './specifications.component'\r\nimport { DicomComponent } from './dicom.component'\r\nimport { JsonEditComponent } from './json-edit.component'\r\nimport { SendToParameterisationComponent } from './send-to-parameterisation.component'\r\nimport { BokehCreateModelComponent } from './bokeh-create-model.component'\r\nimport { BokehUseModelComponent } from './bokeh-use-model.component'\r\nimport { ChooseSpecificationsComponent } from './choose-specifications.component'\r\n\r\nimport { MyJsonPipe } from './my-json.pipe'\r\n\r\nimport { ModelData, ModelMeasurement, ModelGrid, Predictions } from './model-data'\r\n\r\nimport { ElectronApiService } from './electron-api.service'\r\nimport { DataService } from './data.service'\r\nimport { TitleService } from './title.service'\r\nimport { LocalStorageService } from './local-storage.service'\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n     BrowserModule,\r\n     FormsModule,\r\n     HttpModule,\r\n     MdlModule,\r\n    //  MaterialModule.forRoot(),\r\n     routing,\r\n     Angulartics2Module.forRoot()\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    ParameteriseComponent,\r\n    PlotComponent,\r\n    PageNotFoundComponent,\r\n    WidthLengthTableComponent,\r\n    JsonInputComponent,\r\n    MyJsonPipe,\r\n    HomeComponent,\r\n    CreateModelComponent,\r\n    UseModelComponent,\r\n    StorageManagementComponent,\r\n    SpecificationsComponent,\r\n    DicomComponent,\r\n    SendToParameterisationComponent,\r\n    JsonEditComponent,\r\n    BokehCreateModelComponent,\r\n    BokehUseModelComponent,\r\n    ChooseSpecificationsComponent\r\n  ],\r\n  providers: [\r\n    ElectronApiService,\r\n    DataService,\r\n    TitleService,\r\n    Title,\r\n    LocalStorageService,\r\n    Angulartics2GoogleAnalytics,\r\n    ModelData, ModelMeasurement, ModelGrid, Predictions\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/app.module.ts\n **/","import { ModuleWithProviders }  from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Angulartics2Module } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/src/providers/angulartics2-google-analytics';\r\n\r\nimport { ParameteriseComponent } from './parameterise.component';\r\nimport { PageNotFoundComponent } from './page-not-found.component';\r\nimport { HomeComponent } from './home.component';\r\nimport { CreateModelComponent } from './create-model.component';\r\nimport { UseModelComponent } from './use-model.component'\r\nimport { StorageManagementComponent } from './storage-management.component';\r\nimport { SpecificationsComponent } from './specifications.component';\r\nimport { DicomComponent } from './dicom.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    data: {\r\n      title: 'Home'\r\n    }\r\n  },\r\n  {\r\n    path: 'storage',\r\n    component: StorageManagementComponent\r\n  },\r\n  {\r\n    path: 'specifications',\r\n    component: SpecificationsComponent\r\n  },\r\n  {\r\n    path: 'dicom',\r\n    component: DicomComponent\r\n  },\r\n  {\r\n    path: 'parameterise',\r\n    component: ParameteriseComponent\r\n  },\r\n  {\r\n    path: 'create-model',\r\n    component: CreateModelComponent\r\n  },\r\n  {\r\n    path: 'use-model',\r\n    component: UseModelComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'model',\r\n    redirectTo: 'create-model'\r\n  },\r\n  {\r\n    path: '**', component: PageNotFoundComponent\r\n  }\r\n];\r\n\r\nexport const appRoutingProviders: any[] = [\r\n  //Angulartics2GoogleAnalytics\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/app.routing.ts\n **/","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Parameterisation } from './parameterisation';\r\nimport { InsertData } from './insert-data';\r\n\r\n// import { CookieService } from 'angular2-cookie/core';\r\nimport { ElectronApiService } from './electron-api.service';\r\nimport { DataService } from './data.service';\r\nimport { TitleService } from './title.service';\r\n// import { LocalStorageService } from './local-storage.service';\r\n\r\nimport { ModelData } from './model-data'\r\n\r\nimport { DEMO_PARAMETERISE_INPUT } from './demo-data';\r\n\r\n@Component({\r\n  selector: 'my-parameterise',\r\n  template: require('./parameterise.component.html'),\r\n})\r\nexport class ParameteriseComponent implements OnInit {\r\n  parameterisation: Parameterisation = {\r\n    insert: {\r\n      x: [0],\r\n      y: [0]\r\n    },\r\n    width: null,\r\n    length: null,\r\n    circle: null,\r\n    ellipse: null\r\n  };\r\n  machineSpecifications: {};\r\n\r\n  // @ViewChild('jsonInput') jsonInputComponent: any;\r\n\r\n  textAreaX: string;\r\n  textAreaY: string;\r\n\r\n  jsonValid: boolean = true;\r\n  xInputValid: boolean = true;\r\n  yInputValid: boolean = true;\r\n  equalLengths: boolean = true;\r\n\r\n  serverResponseValid: boolean = true;\r\n  serverErrorMessage: string;\r\n\r\n  dataInFlight: boolean = false;\r\n\r\n  submitDisabled: boolean = false;\r\n\r\n  refreshJsonInput: boolean = false;\r\n\r\n  parameteriseURL: string;\r\n\r\n  insertData: InsertData = {\r\n    machine: null,\r\n    parameterisation: this.parameterisation,\r\n    energy: null,\r\n    applicator: null,\r\n    ssd: null,\r\n    factor: <number> null\r\n  }\r\n\r\n  machineExists: boolean = false;\r\n  machineSettingsExist: boolean = false;\r\n  modelExists: boolean = false;\r\n\r\n  ableToAddDataToModel: boolean = false;\r\n  dataAlreadyExistsOnModel: boolean = false;\r\n\r\n  serverError: boolean = false;\r\n\r\n  R50: number;\r\n\r\n  currentSettings: {\r\n    machine: string, \r\n    energy: number, \r\n    applicator: string, \r\n    ssd: number\r\n  }\r\n\r\n  constructor(\r\n    private electronApiService: ElectronApiService,\r\n    private dataService: DataService,\r\n    private myTitleService: TitleService,\r\n    private router: Router,\r\n    private modelData: ModelData\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n    this.myTitleService.setTitle('Parameterisation');\r\n\r\n    this.parameteriseURL = localStorage.getItem(\"parameteriseURL\")\r\n    if (this.parameteriseURL == null) {\r\n      this.parameteriseURL = 'http://electronapi.simonbiggs.net/parameterise';\r\n    }\r\n    this.machineSpecifications = JSON.parse(localStorage.getItem(\"specifications\"));\r\n    if (this.machineSpecifications == null) {\r\n      this.machineSpecifications = {};\r\n    }\r\n    this.checkMachineSettings()\r\n    this.checkIfCanBeSentToModel()\r\n\r\n    this.updateTextAreaValues()\r\n  }\r\n\r\n  createKey() {\r\n    let key = (\r\n      '{\"machine\":' + JSON.stringify(String(this.insertData.machine)) + ',' +\r\n      '\"energy\":' + JSON.stringify(Number(this.insertData.energy)) + ',' +\r\n      '\"applicator\":' + JSON.stringify(String(this.insertData.applicator)) + ',' +\r\n      '\"ssd\":' + JSON.stringify(Number(this.insertData.ssd)) +\r\n      '}')\r\n    return key\r\n  }\r\n\r\n  addMeasuredFactor(factor: number) {\r\n    this.dataAlreadyExistsOnModel = true\r\n    this.ableToAddDataToModel = false\r\n\r\n    let key = this.createKey()\r\n    let modelData = JSON.parse(localStorage.getItem(key))\r\n    if (modelData == null) {\r\n      modelData = {\r\n        measurement: {\r\n          width: <number[]> [],\r\n          length: <number[]> [],\r\n          factor: <number[]> [],\r\n        },\r\n        model: {\r\n          width: <number[]> [],\r\n          length: <number[]> [],\r\n          factor: <number[]> []\r\n        }\r\n      }\r\n    }\r\n    modelData.model.width = <number[]> []\r\n    modelData.model.length = <number[]> []\r\n    modelData.model.factor = <number[]> []\r\n\r\n\r\n    modelData.measurement.width.push(Number(this.insertData.parameterisation.width))\r\n    modelData.measurement.length.push(Number(this.insertData.parameterisation.length))\r\n    modelData.measurement.factor.push(Number(factor))\r\n\r\n    localStorage.setItem(key, JSON.stringify(modelData))\r\n\r\n    localStorage.setItem(\"current_machine\", JSON.stringify(Number(\r\n      this.insertData.machine)))\r\n    localStorage.setItem(\"currentEnergy\", JSON.stringify(Number(\r\n      this.insertData.energy)))\r\n    localStorage.setItem(\"currentApplicator\", JSON.stringify(\r\n      this.insertData.applicator))\r\n    localStorage.setItem(\"currentSSD\", JSON.stringify(Number(\r\n      this.insertData.ssd)))\r\n\r\n  }\r\n\r\n  predictFactor() {\r\n    localStorage.setItem(\"current_machine\", JSON.stringify(Number(\r\n      this.insertData.machine)))\r\n    localStorage.setItem(\"currentEnergy\", JSON.stringify(Number(\r\n      this.insertData.energy)))\r\n    localStorage.setItem(\"currentApplicator\", JSON.stringify(\r\n      this.insertData.applicator))\r\n    localStorage.setItem(\"currentSSD\", JSON.stringify(Number(\r\n      this.insertData.ssd)))\r\n\r\n    this.currentSettings = {\r\n      machine: this.insertData.machine,\r\n      energy: this.insertData.energy,\r\n      applicator: this.insertData.applicator,\r\n      ssd: this.insertData.ssd\r\n    }\r\n\r\n    this.modelData.loadModelData(this.currentSettings)\r\n    this.modelData.predictions.width.unshift(this.parameterisation.width)\r\n    this.modelData.predictions.length.unshift(this.parameterisation.length)\r\n    if (this.insertData.factor != 0 && this.insertData.factor != null) {\r\n      this.modelData.predictions.measuredFactor.unshift(this.insertData.factor)\r\n    }    \r\n\r\n    this.modelData.saveModelData(this.currentSettings)\r\n\r\n    this.router.navigate([\"/use-model\"])\r\n\r\n  }\r\n\r\n  updateTextAreaValues() {\r\n    this.textAreaX = String(this.parameterisation.insert.x)\r\n      .replace(/,/g,', ')\r\n    this.textAreaY = String(this.parameterisation.insert.y)\r\n      .replace(/,/g,', ')\r\n  }\r\n\r\n  checkIfEqualLengths() {\r\n    if (this.parameterisation.insert.x.length == this.parameterisation.insert.y.length) {\r\n      this.equalLengths = true\r\n    }\r\n    else {\r\n      this.equalLengths = false\r\n    }\r\n  }\r\n\r\n  saveInsertData() { \r\n    this.insertData['parameterisation'] = this.parameterisation\r\n    localStorage.setItem(\r\n      \"last_insertData\", JSON.stringify(this.insertData))\r\n  }\r\n\r\n  validateInput(input: string): boolean {\r\n    // return /^(-?\\d*(\\.\\d+)?[,;\\s]+)*-?\\d*(\\.\\d+)?[,;\\s]*$/.test(input)\r\n    return /^[-\\d\\.,;\\s]*$/.test(input)\r\n    // return true\r\n  }\r\n\r\n  inputTextAreaX(xInput: string) {\r\n    try {\r\n      if (this.validateInput(xInput)) {\r\n        this.parameterisation.insert.x = eval(\r\n          '[' + xInput.replace(/[,;\\n\\t]\\s*/g,', ') + ']')\r\n        this.insertUpdated(this.parameterisation.insert)        \r\n        this.xInputValid = true\r\n        this.checkIfEqualLengths()\r\n        this.saveInsertData()\r\n        this.checkIfCanBeSentToModel()\r\n      }\r\n      else {\r\n        this.xInputValid = false\r\n      }\r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n      this.xInputValid = false\r\n    }\r\n  }\r\n\r\n  inputTextAreaY(yInput: string) {\r\n    try {\r\n      if (this.validateInput(yInput)) {\r\n        this.parameterisation.insert.y = eval(\r\n          '[' + yInput.replace(/[,;\\n\\t]\\s*/g,', ')  + ']')\r\n        this.insertUpdated(this.parameterisation.insert)\r\n        this.yInputValid = true\r\n        this.checkIfEqualLengths()\r\n        this.saveInsertData()\r\n        this.checkIfCanBeSentToModel()\r\n      }\r\n      else {\r\n        this.yInputValid = false\r\n      }\r\n    }\r\n    catch(err) {\r\n      console.log(err)\r\n      this.yInputValid = false\r\n    }\r\n  }\r\n\r\n\r\n  getData(): void {\r\n    let localStorageInsertDataString = localStorage['last_insertData'];\r\n    \r\n    if (localStorageInsertDataString) {\r\n      this.insertData = JSON.parse(localStorageInsertDataString);\r\n      let insert = this.insertData['parameterisation']['insert']\r\n      this.insertUpdated(insert);\r\n      this.insertData['parameterisation'] = this.parameterisation;\r\n    }\r\n    else {\r\n      // this.loadDemoData();\r\n    }\r\n  }\r\n\r\n  loadDemoData(): void {\r\n    let demoData = JSON.parse(JSON.stringify(DEMO_PARAMETERISE_INPUT));\r\n    this.insertUpdated(demoData.insert);\r\n    // this.jsonInputComponent.refresh = true;\r\n    this.insertData =  {\r\n      machine: null,\r\n      parameterisation: this.parameterisation,\r\n      energy: null,\r\n      applicator: null,\r\n      ssd: null,\r\n      factor: null\r\n    }\r\n\r\n    this.updateTextAreaValues()\r\n    this.checkIfEqualLengths()\r\n  }\r\n\r\n  sleep(time: number) {\r\n    return new Promise((resolve) => setTimeout(resolve, time));\r\n  }\r\n\r\n  recursiveServerSubmit() {\r\n    this.serverError = false\r\n\r\n    this.electronApiService.sendToServer(\r\n      this.parameteriseURL,\r\n      JSON.stringify(this.parameterisation.insert)\r\n    )\r\n      .then((parameterisationResult: any) => {\r\n        this.parameterisation.circle = parameterisationResult.circle;\r\n        this.parameterisation.ellipse = parameterisationResult.ellipse;\r\n        this.parameterisation.width = parameterisationResult.width;\r\n        this.parameterisation.length = parameterisationResult.length;\r\n        let complete = parameterisationResult.complete;\r\n        if (complete) {\r\n          this.dataInFlight = false;\r\n          this.serverResponseValid = true;\r\n          this.checkSubmitButton()\r\n          localStorage.setItem(\r\n            JSON.stringify(this.parameterisation.insert), \r\n            JSON.stringify(this.parameterisation)\r\n          );\r\n          this.saveInsertData()\r\n          this.checkIfCanBeSentToModel()\r\n          if (this.parameterisation.width == null) {\r\n            this.serverError = true\r\n          }\r\n        }\r\n        else {\r\n          this.sleep(500).then(() => this.recursiveServerSubmit());\r\n        }\r\n      })\r\n  }\r\n\r\n  checkIfCanBeSentToModel() {\r\n    this.ableToAddDataToModel = false;\r\n    this.dataAlreadyExistsOnModel = false;\r\n    if (this.machineSettingsExist) {\r\n      let key = this.createKey()\r\n      let modelData = JSON.parse(localStorage.getItem(key))\r\n\r\n      if (modelData == null) {\r\n        this.ableToAddDataToModel = true\r\n      }\r\n      else if (modelData.measurement == null) {\r\n        this.ableToAddDataToModel = true\r\n      }\r\n      else {\r\n        if (this.parameterisation.width != null && this.parameterisation.length != null && this.insertData.factor != null) {\r\n          if (\r\n              modelData.measurement.width.indexOf(Number(this.parameterisation.width)) > -1 &&\r\n              modelData.measurement.length.indexOf(Number(this.parameterisation.length)) > -1 &&\r\n              modelData.measurement.factor.indexOf(Number(this.insertData.factor)) > -1) {\r\n            this.dataAlreadyExistsOnModel = true\r\n          }\r\n          else {\r\n            this.dataAlreadyExistsOnModel = false\r\n            this.ableToAddDataToModel = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log(this.ableToAddDataToModel)\r\n  }\r\n\r\n  checkMachineSettings() {\r\n    this.R50 = null;\r\n    let machine = this.insertData['machine'];\r\n    let energy = this.insertData['energy'];\r\n    let applicator = this.insertData['applicator'];\r\n    let ssd = this.insertData['ssd'];\r\n    if (this.machineSpecifications[machine]) {\r\n      let specifications = this.machineSpecifications[machine];\r\n      this.R50 = specifications['R50'][energy];\r\n      if (\r\n        specifications['energy'].indexOf(Number(energy)) > -1 && \r\n        specifications['applicator'].indexOf(String(applicator)) > -1 && \r\n        specifications['ssd'].indexOf(Number(ssd)) > -1) {\r\n          this.machineSettingsExist = true;\r\n      }\r\n      else {\r\n        this.machineSettingsExist = false;\r\n      }\r\n      this.machineExists = true;\r\n    }\r\n    else {\r\n      this.machineExists = false;\r\n      this.machineSettingsExist = false;\r\n      this.modelExists = false;\r\n    }\r\n  }\r\n\r\n  insertDataChange() {\r\n    localStorage.setItem(\r\n      \"last_insertData\", JSON.stringify(this.insertData)\r\n    );\r\n    this.checkMachineSettings()\r\n    this.checkIfCanBeSentToModel()\r\n  }\r\n\r\n  onSubmit() {\r\n    this.dataInFlight = true;\r\n    this.checkSubmitButton();\r\n    this.recursiveServerSubmit();\r\n  }\r\n\r\n  insertDataFromLocalStorage(localStorageInsertData: string) {\r\n\r\n  }\r\n\r\n  parameterisationFromLocalStorage(localStorageParameterisationString: string) {\r\n    let localStorageParameterisation = JSON.parse(localStorageParameterisationString); \r\n    this.parameterisation.insert = localStorageParameterisation['insert'];\r\n    this.parameterisation.width = localStorageParameterisation['width'];\r\n    this.parameterisation.length = localStorageParameterisation['length'];\r\n    this.parameterisation.circle = localStorageParameterisation['circle'];\r\n    this.parameterisation.ellipse = localStorageParameterisation['ellipse'];\r\n  }\r\n\r\n  insertUpdated(insert: any) {\r\n    let localStorageParameterisation = localStorage.getItem(JSON.stringify(insert))\r\n    if (localStorageParameterisation) {\r\n      this.parameterisationFromLocalStorage(localStorageParameterisation);\r\n    }\r\n    else {\r\n      this.parameterisation.insert = insert;\r\n      this.parameterisation.width = null;\r\n      this.parameterisation.length = null;\r\n      this.parameterisation.circle = null;\r\n      this.parameterisation.ellipse = null;\r\n    }\r\n  }\r\n\r\n  onJsonStatusChange(jsonStatus: boolean) {\r\n    this.jsonValid = jsonStatus;\r\n    this.checkSubmitButton();\r\n  }\r\n\r\n  checkSubmitButton() {\r\n    if (this.dataInFlight || !this.jsonValid ) {\r\n      this.submitDisabled = true;\r\n    }\r\n    else {\r\n      this.submitDisabled = false;\r\n    }\r\n  }\r\n\r\n  parameterisationServerChange(serverUrl: string) {\r\n    localStorage.setItem(\"parameteriseURL\", serverUrl);\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/parameterise.component.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class ElectronApiService {\r\n  // private parameteriseURL = 'http://electronapi.simonbiggs.net/parameterise';\r\n  // private modelURL = 'http://electronapi.simonbiggs.net/model';\r\n  private wakeUpURL = 'http://electronapi.simonbiggs.net/wakeup';\r\n\r\n  constructor(private http: Http) { }\r\n  // Initial get from server to wake it up\r\n  wakeUpServer() {\r\n    return this.http\r\n      .get(this.wakeUpURL).toPromise();\r\n  }\r\n\r\n  sendToServer(URL:string, input: string): Promise<any> {\r\n    return this.http\r\n            .post(URL, input)\r\n            .toPromise()\r\n            .then((res) => {\r\n              let nan: number = null;\r\n              return res.json()})\r\n            .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error('An error occurred', error);\r\n    return Promise.reject(error.message || error);\r\n  }\r\n\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/electron-api.service.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { Parameterisation } from './parameterisation'\r\n\r\nimport { DEMO_PARAMETERISE_INPUT } from './demo-data';\r\n// import { DEMO_MODEL_INPUT } from './demo-data';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    getParameterisationData(): Promise<Parameterisation> {\r\n        return Promise.resolve(DEMO_PARAMETERISE_INPUT);\r\n    };\r\n    // getModelData(): Promise<string> {\r\n    //     return Promise.resolve(DEMO_MODEL_INPUT);\r\n    // }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/data.service.ts\n **/","import { Parameterisation } from './parameterisation';\r\nimport { Coordinates } from './coordinates';\r\n\r\nconst insert: Coordinates = {\r\n  x: [\r\n    0.99, -0.14, -1.0, -1.73, -2.56, -3.17, -3.49,\r\n    -3.57, -3.17, -2.52, -1.76, -1.04, -0.17,\r\n    0.77, 1.63, 2.36, 2.79, 2.91, 3.04, 3.22,\r\n    3.34, 3.37, 3.08, 2.54, 1.88, 1.02, 0.99],\r\n  y: [\r\n    5.05, 4.98, 4.42, 3.24, 1.68, 0.6, -0.64,\r\n    -1.48, -2.38, -3.77, -4.81,  -5.26, -5.51,\r\n    -5.58, -5.23, -4.64, -3.77, -2.77, -1.68,\r\n    -0.29, 1.23, 2.68, 3.8, 4.6, 5.01, 5.08, \r\n    5.05]\r\n}\r\n\r\nexport const DEMO_PARAMETERISE_INPUT: Parameterisation = {\r\n  insert: insert,\r\n  circle: null,\r\n  ellipse: null,\r\n  width: null,\r\n  length: null\r\n};\r\n  \r\n// export const DEMO_MODEL_INPUT: string =`{\r\n//   \"width\": [\r\n//     3.15, 3.16, 3.17, 3.17, 3.17, 3.55, 3.66, \r\n//     3.71, 4.2, 4.21, 4.21, 4.21, 4.21, 4.38, \r\n//     4.48, 4.59, 4.59, 4.67, 5.21, 5.25, 5.26,\r\n//     5.26, 5.26, 5.34, 5.43, 5.72, 5.86, 6, 6.04,\r\n//     6.08, 6.3, 6.31, 6.41, 6.53, 6.54, 6.64, 6.78,\r\n//     6.9, 7.08, 7.18, 7.21, 7.36, 7.56, 7.6, 7.64,\r\n//     7.82, 8.06, 8.4, 9.45], \r\n//   \"length\": [\r\n//     3.16, 5.25, 13.64, 6.83, 9.43, 7.7, 5.04, \r\n//     4.36, 4.21, 10.51, 13.65, 6.82, 8.41, 5.47, \r\n//     7.29, 5.67, 6.54, 6.28, 11.4, 5.26, 10.52, \r\n//     13.66, 8.41, 9.64, 11.02, 11.6, 8.62, 7.98,\r\n//     9.22, 6.64, 6.33, 8.24, 8.69, 10.99, 8.41, \r\n//     9.81, 10.98, 10.25, 10.77, 11.27, 9.03, 7.37,\r\n//     10.05, 10.26, 8.99, 10.85, 11.85, 8.42, 9.47],\r\n//   \"factor\": [\r\n//     0.9294, 0.9346, 0.9533, 0.9488, 0.9488, \r\n//     0.9443, 0.9434, 0.9488, 0.956, 0.9709, 0.9756,\r\n//     0.9606, 0.9709, 0.9634, 0.9606, 0.9588,\r\n//     0.9681, 0.9737, 0.9881, 0.9709, 0.9881,\r\n//     0.9872, 0.9833, 0.993, 0.9872, 0.999, 0.9891,\r\n//     0.9911, 0.999, 0.993, 0.9862, 0.9921, 0.999,\r\n//     1, 0.993, 0.999, 1.007, 0.999, 1.005, 0.999,\r\n//     1.0101, 1.003, 1.004, 1.0142, 1.003, 1.002,\r\n//     1.007, 1.007, 1.0081]\r\n// }`\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/demo-data.ts\n **/","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TitleService {\r\n  title = 'Home';\r\n\r\n  getTitle(): string {\r\n    return this.title;\r\n  }\r\n\r\n  setTitle(title: string) {\r\n    this.title = title;\r\n  }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/title.service.ts\n **/","import { Injectable } from '@angular/core';\r\n\r\nexport class Base {\r\n  public propNames: string[]\r\n  public keyConversions: {}\r\n\r\n  reset() {\r\n    for (let propName of this.propNames) {\r\n      this[propName] = []\r\n    }\r\n  }\r\n\r\n  fillFromObject(object: {}) {\r\n    object = this.updateOldKeyNames(object)\r\n    for (let propName of this.propNames) {\r\n      if (object[propName] == null) {\r\n        this[propName] = []\r\n      }\r\n      else {\r\n        this[propName] = object[propName]\r\n      }\r\n    }\r\n  }\r\n\r\n  updateOldKeyNames(object: {}) {\r\n    let newKey: string\r\n\r\n    for (let oldKey in this.keyConversions) {\r\n      if (object[oldKey] != null && object[this.keyConversions[oldKey]] == null) {\r\n        newKey = this.keyConversions[oldKey]\r\n        Object.defineProperty(object, newKey,\r\n            Object.getOwnPropertyDescriptor(object, oldKey));\r\n        delete object[oldKey];\r\n      }\r\n    }\r\n\r\n    return object\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class ModelMeasurement extends Base {\r\n  public propNames: string[] = ['width', 'length', 'measuredFactor']\r\n  public keyConversions: {} = {\r\n    'factor': 'measuredFactor'\r\n  }\r\n  public width: number[] = []\r\n  public length: number[] = []\r\n  public measuredFactor: number[] = []\r\n}\r\n\r\n@Injectable()\r\nexport class ModelGrid extends Base  {\r\n  public propNames: string[] = ['width', 'length', 'predictedFactor']\r\n  public keyConversions: {} = {\r\n    'factor': 'predictedFactor'\r\n  }\r\n  public width: number[] = []\r\n  public length: number[] = []\r\n  public predictedFactor: number[] = []\r\n}\r\n\r\n@Injectable()\r\nexport class Predictions extends Base {\r\n  public propNames: string[] = ['width', 'length', 'area', 'measuredFactor', 'predictedFactor']\r\n  public width: number[] = []\r\n  public length: number[] = []\r\n  public area: number[] = []\r\n  public measuredFactor: number[] = []\r\n  public predictedFactor: number[] = []\r\n}\r\n\r\n@Injectable()\r\nexport class ModelData {\r\n  public propNames: string[] = ['measurement', 'model', 'predictions']\r\n  // currentSettings: {\r\n  //   machine: string, \r\n  //   energy: number, \r\n  //   applicator: string, \r\n  //   ssd: number\r\n  // }\r\n\r\n  constructor(    \r\n    public measurement: ModelMeasurement,\r\n    public model: ModelGrid,\r\n    public predictions: Predictions\r\n  ) { }\r\n\r\n  fillFromObject(object: {}) {\r\n    if (object == null) {\r\n      for (let propName of this.propNames) {\r\n        this[propName].reset()\r\n      }\r\n    }\r\n    else {\r\n      for (let propName of this.propNames) {\r\n        if (object[propName] == null) {\r\n          this[propName].reset()\r\n        }\r\n        else {\r\n          this[propName].fillFromObject(object[propName])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createLocalStorageKey(currentSettings: {machine: string, energy: number, applicator: string, ssd: number}) {\r\n    let localStorageKey = (\r\n      '{\"machine\":' + JSON.stringify(String(currentSettings.machine)) + ',' +\r\n      '\"energy\":' + JSON.stringify(Number(currentSettings.energy)) + ',' +\r\n      '\"applicator\":' + JSON.stringify(String(currentSettings.applicator)) + ',' +\r\n      '\"ssd\":' + JSON.stringify(Number(currentSettings.ssd)) +\r\n      '}')\r\n\r\n    return localStorageKey\r\n  }\r\n\r\n  loadModelData(currentSettings: {machine: string, energy: number, applicator: string, ssd: number}) {\r\n    let localStorageKey = this.createLocalStorageKey(currentSettings)\r\n    let parsedData = JSON.parse(localStorage.getItem(localStorageKey))\r\n\r\n    this.fillFromObject(parsedData)\r\n  }\r\n\r\n  saveModelData(currentSettings: {machine: string, energy: number, applicator: string, ssd: number}) {\r\n    let localStorageKey = this.createLocalStorageKey(currentSettings)\r\n    localStorage.setItem(localStorageKey, JSON.stringify(this))\r\n  }\r\n\r\n  // getCurrentSettings() {\r\n\r\n  // }\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/model-data.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\" style=\\\"display: flex; align-items: center; flex-flow: row wrap;\\\">\\r\\n    <h5>Equivalent ellipse parameterisation</h5>\\r\\n    <p>This is for the determination of equivalent ellipse widths and lengths as defined in the paper method.</p>\\r\\n\\r\\n    <p>\\r\\n      To begin shape parameterisation you need to define your insert shape. \\r\\n      This can be done by editing the x and y coordinates within the text boxes below or by using a shape       \\r\\n      <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n        pulled from a dicom file.\\r\\n      </a>\\r\\n    </p>\\r\\n\\r\\n    <p>\\r\\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\\r\\n      This web app should handle copying and pasting from a range of sources (including excel).\\r\\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\\r\\n    </p>\\r\\n\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"X coordinates (cm @iso)\\\"\\r\\n      [(ngModel)]=\\\"textAreaX\\\"\\r\\n      (input)=\\\"inputTextAreaX($event.target.value)\\\"\\r\\n      rows=4\\r\\n      floating-label\\r\\n      [disabled]=\\\"dataInFlight\\\"\\r\\n      [style.width]=\\\"'100%'\\\"></mdl-textfield>\\r\\n\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Y coordinates (cm @iso)\\\"\\r\\n      [(ngModel)]=\\\"textAreaY\\\"\\r\\n      (input)=\\\"inputTextAreaY($event.target.value)\\\"\\r\\n      rows=4\\r\\n      floating-label\\r\\n      [disabled]=\\\"dataInFlight\\\"\\r\\n      [style.width]=\\\"'100%'\\\"></mdl-textfield>\\r\\n\\r\\n    <p *ngIf=\\\"!equalLengths\\\">\\r\\n      The x and y coordinate lengths need to be the same as each other.\\r\\n    </p>\\r\\n\\r\\n    <p *ngIf=\\\"this.parameterisation.insert.x.length < 3 || this.parameterisation.insert.y.length < 3\\\">\\r\\n      You need at least 3 data points to create an insert shape.\\r\\n    </p>\\r\\n\\r\\n    <div style=\\\"width:100%; height:30px\\\"></div>\\r\\n\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Load demo data\\\"\\r\\n      [disabled]=\\\"submitDisabled\\\"\\r\\n      (click)=\\\"loadDemoData()\\\">Load Demo Data         \\r\\n    </button>\\r\\n\\r\\n    <div style=\\\"width:20px; height:30px\\\"></div>\\r\\n\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Parameterise insert\\\"\\r\\n      [disabled]=\\\"submitDisabled || !xInputValid || !yInputValid || !equalLengths\\\"\\r\\n      (click)=\\\"onSubmit()\\\">Parameterise Insert          \\r\\n    </button>\\r\\n\\r\\n\\r\\n\\r\\n    <div [hidden]=\\\"serverResponseValid\\\">\\r\\n      {{serverErrorMessage}}\\r\\n    </div>\\r\\n\\r\\n    <div style=\\\"height:20px; width:100%;\\\"></div>\\r\\n\\r\\n    <my-plot \\r\\n      [insert_x]=\\\"parameterisation.insert.x\\\"\\r\\n      [insert_y]=\\\"parameterisation.insert.y\\\"\\r\\n      [circle]=\\\"parameterisation.circle\\\"\\r\\n      [ellipse]=\\\"parameterisation.ellipse\\\"\\r\\n      [enabled]=\\\"xInputValid && yInputValid && equalLengths\\\">\\r\\n    </my-plot>\\r\\n\\r\\n    <div style=\\\"height:20px; width:20px;\\\"></div>\\r\\n\\r\\n    <my-width-length-table\\r\\n      [width]=\\\"parameterisation.width\\\"\\r\\n      [length]=\\\"parameterisation.length\\\"\\r\\n      [enabled]=\\\"xInputValid && yInputValid && equalLengths\\\">\\r\\n    </my-width-length-table>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Send parameterisation to model</h5>\\r\\n    <p>\\r\\n      Once you have parameterised an insert shape you may either predict this insert with the model, or you may add the insert to the model.\\r\\n    </p>\\r\\n    <p>\\r\\n      To predict the insert with the model you must have filled in the correct machine ID, energy, applicator, and ssd in the text boxes below.\\r\\n      Furthermore these inputs need to correspond to one of the \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        machine specifications you have defined.\\r\\n      </a>\\r\\n    </p>\\r\\n    <p>\\r\\n      To append the current insert shape along with its measured factor to the model you must have filled in the corresponding machine ID, energy, applicator, ssd, and measured factor in the text boxes below.\\r\\n      Once again the machine specifications given need to correspond to one of the \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        machine specifications you have defined.\\r\\n      </a>\\r\\n    </p>\\r\\n\\r\\n\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Machine (ID)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.machine\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n\\r\\n    <p *ngIf=\\\"!machineExists\\\">\\r\\n      This machine ID does not exist within your \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        provided machine specifications.\\r\\n      </a>\\r\\n    </p>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Energy (Nominal or MeV)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.energy\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Applicator (ID)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.applicator\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"SSD (cm)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.ssd\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n\\r\\n    <p *ngIf=\\\"!machineSettingsExist\\\">\\r\\n      These specific machine settings do not exist within your       \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        provided machine specifications.\\r\\n      </a>\\r\\n    </p>\\r\\n\\r\\n    <mdl-textfield #measuredFactor\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Measured insert factor (as per TG 25)\\\"\\r\\n      (input)=\\\"insertDataChange()\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"insertData.factor\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Add measured factor to model\\\"\\r\\n      [disabled]=\\\"!ableToAddDataToModel || !machineSettingsExist || measuredFactor.value==null || measuredFactor.value=='' || submitDisabled || !xInputValid || !yInputValid || !equalLengths\\\"\\r\\n      (click)=\\\"addMeasuredFactor(measuredFactor.value)\\\">Add Measured Factor to Model            \\r\\n    </button>\\r\\n\\r\\n    <p *ngIf=\\\"dataAlreadyExistsOnModel && !submitDisabled && xInputValid && yInputValid && equalLengths && machineSettingsExist\\\">\\r\\n      This width, length, and measured factor combination exists within the model.       \\r\\n      <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n        View the model.\\r\\n      </a>\\r\\n    </p>\\r\\n    \\r\\n    <div style=\\\"height:20px; width:20px;\\\"></div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\"\\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Parameterise | Predict factor with model\\\"\\r\\n      [disabled]=\\\"!machineSettingsExist || submitDisabled || !xInputValid || !yInputValid || !equalLengths || parameterisation.width == null || parameterisation.length == null\\\"\\r\\n      (click)=\\\"predictFactor()\\\">Predict Factor with Model        \\r\\n    </button>\\r\\n\\r\\n    \\r\\n    <!--<p>\\r\\n      <font color=\\\"#d3d3d3\\\">\\r\\n        Currently the \\\"Predict Factor with Model\\\" button just changes the active machine specifications to match that given above and then takes you to the model component.\\r\\n        A future implementation is to have this button plot your insert shape on the model plot and display the predicted factor.\\r\\n      </font>\\r\\n    </p>-->\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\">\\r\\n    <h5>Change parameterisation server url (optional)</h5>\\r\\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default server is: <br>\\r\\n      <a>http://electronapi.simonbiggs.net/parameterise</a>       \\r\\n    </p>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Parameterisation Server Address\\\"\\r\\n      (input)=\\\"parameterisationServerChange($event.target.value)\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"parameteriseURL\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n  </div>\\r\\n\\r\\n  <!--<div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet\\\">\\r\\n    <h5>Edit raw coordinates</h5>\\r\\n    <my-json-input #jsonInput\\r\\n      [insert]=\\\"parameterisation.insert\\\"\\r\\n      [jsonDisabled]=\\\"dataInFlight\\\"\\r\\n      (insertUpdated)=\\\"insertUpdated($event)\\\"\\r\\n      (jsonStatus)=\\\"onJsonStatusChange($event)\\\">\\r\\n    </my-json-input>\\r\\n  </div>-->\\r\\n\\r\\n</div>\\r\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/parameterise.component.html\n ** module id = 65\n ** module chunks = 0\n **/","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'my-page-not-found',\r\n  template: require('./page-not-found.component.html')\r\n})\r\nexport class PageNotFoundComponent {\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/page-not-found.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    This page has not been found. Please provide feedback ...\\r\\n  </div>\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/page-not-found.component.html\n ** module id = 67\n ** module chunks = 0\n **/","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TitleService } from './title.service'\r\n\r\n\r\n@Component({\r\n  selector: 'my-home',\r\n  template: require('./home.component.html')\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(\r\n    private myTitleService: TitleService\r\n  ) {}\r\n  \r\n  ngOnInit() {\r\n    this.myTitleService.setTitle('Home');\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/home.component.ts\n **/","module.exports = \"<div itemscope itemtype=\\\"http://schema.org/SoftwareApplication\\\" class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h3 itemprop=\\\"name\\\">Electron insert factor modelling</h3>\\r\\n    <p>\\r\\n      Tags: <span itemprop=\\\"applicationCategory\\\">Medical physics, electron inserts, electron cutouts, Python, Angular2, Bokeh, spline modelling</span><br>\\r\\n      Last update: <span itemprop=\\\"datePublished\\\" content=\\\"2016-10-18\\\">2016-10-23</span><br>\\r\\n      Version: <span itemprop=\\\"softwareVersion\\\">0.1.4-beta</span><br>\\r\\n      Operating system: <span itemprop=\\\"operatingSystem\\\">Windows, Linux, Mac, Android, and iOS</span> <br>\\r\\n      Requirements: <span itemprop=\\\"requirements\\\">A browser that supports <a href=\\\"http://caniuse.com/#feat=namevalue-storage\\\">local storage</a></span><br>\\r\\n      Developed by: <span itemprop=\\\"author\\\" itemscope itemtype=\\\"http://schema.org/Person\\\"><a itemprop=\\\"name\\\" href=\\\"https://github.com/SimonBiggs\\\">Simon Biggs</a></span>\\r\\n\\r\\n    </p>\\r\\n    \\r\\n    <h4>Description</h4>\\r\\n    <p>\\r\\n      This online web app is for the modelling of the portion of the electron output factor that is dependent on the shape of the shielding insert mounted within the applicator. This allows modelling insert factors using only the measured factors already available at a centre. Should all outliers be removed from the data set the user might expect as low as 0.5% standard uncertainty for factor prediction with as little as 8 data points.\\r\\n    </p>\\r\\n\\r\\n\\r\\n    <p>If you have any issues or feedback please contact me at <a href=\\\"mailto:mail@simonbiggs.net\\\">mail@simonbiggs.net</a>.</p>\\r\\n\\r\\n    <h4>Instructions</h4>\\r\\n    <h5>Overview</h5>\\r\\n    <p>This web app is divided into four logical components:</p>\\r\\n      <ul>\\r\\n        <li>   \\r\\n          Defining your centre specific machine specifications within the   \\r\\n          <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n            machine specifications component\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          Insert shape extraction from a dicom patient plan within the\\r\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n            dicom component\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          Parameterise the insert shapes into equivalent widths and lengths within the\\r\\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n            parameterisation component\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          Take at least 8 widths, lengths, and measured factors for a given machine, applicator, energy, ssd combination and create an empirical model within the\\r\\n          <a routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <p>\\r\\n        All your model and machine data is saved on your local machine within your browser. \\r\\n        Your progress will be saved as long as you do not clear your browser data.\\r\\n        In the future I plan to implement a data export and import feature, as well as the ability to sync models between browsers via a server.\\r\\n        Currently however the only place your web app data is being stored is on your local machine.\\r\\n      </p>\\r\\n\\r\\n       \\r\\n      \\r\\n      <h5>To demo</h5>\\r\\n      <p>\\r\\n        If you wish to simply demo this app these are the following steps you can take:\\r\\n      </p>\\r\\n      <ul>\\r\\n        <li>\\r\\n          Within the \\r\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n            dicom component \\r\\n          </a>\\r\\n          download the demo dicom file, load it into the web app and see the insert shapes be pulled from the dicom file without any network traffic\\r\\n        </li>\\r\\n        <li>\\r\\n          Within the \\r\\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n            parameterise component\\r\\n          </a>\\r\\n          press the \\\"Load Demo Data\\\" button and then press the \\\"Parameteterise Insert\\\" button to see the parameterisation algorithim in action\\r\\n        </li>\\r\\n        <li>\\r\\n          Within the \\r\\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component\\r\\n          </a>\\r\\n          press the \\\"Load Demo Data\\\" button and then press the \\\"Run Spline Model\\\" to see the spline model being created. \\r\\n          You can then either hover over the model, or tap on the model to view the relevant values.\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <h5>To implement in your centre</h5>\\r\\n      <p>\\r\\n        To implement this web app in your centre you need to do the following:\\r\\n      </p>\\r\\n      <ul>\\r\\n        <li>  \\r\\n          Specify the machine models and the corresponding applicators, energies, and ssds within the    \\r\\n          <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n            machine specification component.\\r\\n          </a>\\r\\n        </li>\\r\\n        <li> \\r\\n          Collate / measure your electron insert factor measuremens. These factors are to measured in accordance to TG 25.   \\r\\n        </li>\\r\\n        <li>\\r\\n          If the insert shapes are ellipses, you may directly input the ellipse widths and lengths as projected to the isocentre within the \\r\\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component.\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          If the insert shape is a generic shape or you know the x and y coordinates of your insert then determine the equivalent ellipse widths and lengths by inputting x and y coordinates as defined at isocentre within the \\r\\n          <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n            parameterisation component.\\r\\n          </a>          \\r\\n        </li>\\r\\n        <li>\\r\\n          If the insert shape is defined within your planning system, export the patient plan to dicom and then read the insert coordinates from the dicom file using the\\r\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n            dicom component.\\r\\n          </a>          \\r\\n        </li>\\r\\n        <li>\\r\\n          Once you have the corresponding equivalent ellipse widths and lengths for your measured factors these may be appended to the relevant machine configuration within the \\r\\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          Whenever a machine configuration gets at least 8 data points you may press the \\\"Run Spline Model\\\" on the \\r\\n          <a routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\">\\r\\n            model component\\r\\n          </a>\\r\\n          which will allow the prediction of insert factors for other widths and lengths.\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <h5>To use the web app after it has been implemented</h5>\\r\\n      <ul>\\r\\n        <li>\\r\\n          Export the patient plan to dicom and then read the insert coordinates from the dicom file using the\\r\\n          <a routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\">\\r\\n            dicom component.\\r\\n          </a>          \\r\\n        </li>\\r\\n        <li>\\r\\n          Press the \\\"Parameterise Insert\\\" button to determine the equivalent ellipse width and length\\r\\n        </li>\\r\\n        <li>\\r\\n          Press the \\\"Predict Factor with Model\\\" button to automatically change the machine configuration to that which matches your loaded insert\\r\\n        </li>\\r\\n        <li>\\r\\n          Hover your mouse over the relevant width and length within the model to predict your insert factor\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n\\r\\n    <h4>Publications</h4>\\r\\n    <!--<h6>Original paper</h6>-->\\r\\n    <p>The paper detailing the algorithim and its validation:</p>\\r\\n    <p>\\r\\n      S. Biggs, M. Sobolewski, R. Murry, J. Kenny, Spline modelling electron insert factors using routine measurements. Physica Medica (2015), <a href=\\\"http://dx.doi.org/10.1016/j.ejmp.2015.11.002\\\">doi:10.1016/j.ejmp.2015.11.002</a>.\\r\\n    </p>\\r\\n\\r\\n    <!--<h6>EPSM2016 Poster</h6>\\r\\n    <ul>\\r\\n      <li><a href=\\\"https://www.dropbox.com/s/09ij94rqc012ad8/ElectronInsertsWebAppPoster.jpg?dl=1\\\">Low resolution</a></li>\\r\\n      <li><a href=\\\"https://www.dropbox.com/s/ga5e64echv255b8/ElectronsPoster.svg?dl=1\\\">Original SVG file</a></li>\\r\\n    </ul>-->\\r\\n\\r\\n    <h4>Disclaimer</h4>\\r\\n    <p>\\r\\n      Any use of this web app or any of its code has you accepting the AGPL3+ license which includes no warranty that this code is fit for a particular purpose. Attempts have been made to make the code transparent and it is recommended that an experienced python programmer and physicist who understands the procedure outlined in the paper and the requirements of your centre identifies whether or not this method and code is fit for your use.</p>\\r\\n\\r\\n    <h4>Use of Google Analytics</h4>\\r\\n    <p>\\r\\n      To aid in quickly identifying bugs, user experience issues, and documenting app usage the Google Analytics service is employed. \\r\\n      This collates and reports page views, button clicks, and demographic information based upon your IP address.\\r\\n      For more information on privacy regarding Google Analytics <a href=\\\"https://support.google.com/analytics/answer/6004245\\\">click here.</a>\\r\\n      If you wish to opt-out of Google Analytics data collection please <a href=\\\"https://tools.google.com/dlpage/gaoptout\\\">click here.</a>\\r\\n    </p>   \\r\\n\\r\\n\\r\\n    <h4>Steps required to freeze your own version of this web app</h4>\\r\\n      As I make improvements to this web app I will be updating this online version. \\r\\n      You may desire to not have the web app you are using day to day change on you.\\r\\n      To achieve this you can create your own version of the server and your own version of the web app.\\r\\n      \\r\\n      For now this will require a bit of your own working out until I provide further instructions.\\r\\n\\r\\n\\r\\n\\r\\n    <h4>Source code</h4>\\r\\n    <p>\\r\\n      For the purpose of coding transparency and to enable the user to take responsibility for the code themselves any redistribution\\r\\n      or derivative works of this web app need to include the source code of any additions made and need to include a way\\r\\n      for users to easily access the source code of each of the components used or linked to.\\r\\n    </p>\\r\\n\\r\\n    <h5>Server Code</h5>\\r\\n\\r\\n    <h6>Base Electron Insert Factor Source Code</h6>\\r\\n    <p>\\r\\n      The python file which does the shape parameterisation and insert factor modelling which is used by the server is found here:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py\\\">\\r\\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/electroninserts.py</a>\\r\\n    </p>\\r\\n\\r\\n    <h6>Tornado REST API</h6>\\r\\n    <p>\\r\\n      The Tornado REST API is found here:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py\\\">\\r\\n              https://github.com/SimonBiggs/electronfactor-server/blob/master/main.py</a>\\r\\n    </p>\\r\\n\\r\\n    <h6>Heroku App code</h6>\\r\\n    <p>\\r\\n      The code to make the heroku app is found here:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electronfactor-server\\\">\\r\\n              https://github.com/SimonBiggs/electronfactor-server</a>\\r\\n    </p>\\r\\n\\r\\n    <h5>Web App Code</h5>\\r\\n    <p>\\r\\n      The source code for this web app is found here:\\r\\n      <a itemprop=\\\"downloadUrl\\\" href=\\\"https://github.com/SimonBiggs/electroninserts-webapp\\\">\\r\\n            https://github.com/SimonBiggs/electroninserts-webapp</a>\\r\\n    </p>\\r\\n\\r\\n    <h5>Libraries used</h5>\\r\\n    <h6>Bokehjs</h6>\\r\\n    <p>\\r\\n      The bokehjs library is used for plots. Documentation can be found here:\\r\\n      <a href=\\\"http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs\\\">\\r\\n              http://bokeh.pydata.org/en/latest/docs/user_guide/bokehjs.html#userguide-bokehjs</a>\\r\\n    </p>\\r\\n    <p>\\r\\n      Source code can be found here:\\r\\n      <a href=\\\"https://github.com/bokeh/bokeh/tree/master/bokehjs\\\">\\r\\n              https://github.com/bokeh/bokeh/tree/master/bokehjs</a>\\r\\n    </p>\\r\\n\\r\\n    <h6>dcmjs</h6>\\r\\n    <p>\\r\\n      The dcmjs library is used for reading dicom files within javascript. Website can be found here:\\r\\n      <a href=\\\"http://dcmjs.org/\\\">\\r\\n              http://dcmjs.org/</a>\\r\\n    </p>\\r\\n    <p>\\r\\n      Source code can be found here:\\r\\n      <a href=\\\"https://github.com/commontk/dcmjs\\\">\\r\\n              https://github.com/commontk/dcmjs</a>\\r\\n    </p>\\r\\n\\r\\n    <h6>Angular2</h6>\\r\\n    <p>\\r\\n      This interface was built using Angular2. Documentation can be found here:\\r\\n      <a href=\\\"https://angular.io/docs/ts/latest/\\\">\\r\\n              https://angular.io/docs/ts/latest/</a>\\r\\n    </p>\\r\\n    <p>\\r\\n      Source code can be found here:\\r\\n      <a href=\\\"https://github.com/angular/angular\\\">\\r\\n              https://github.com/angular/angular</a>\\r\\n    </p>\\r\\n    <h6>Remaining libraries</h6>\\r\\n    <p>\\r\\n      For all remaining libraries used please see the npm package.json file:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json\\\">\\r\\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/package.json</a>\\r\\n    </p>\\r\\n    <p>\\r\\n      And the index file for various imports:\\r\\n      <a href=\\\"https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html\\\">\\r\\n              https://github.com/SimonBiggs/electroninserts-webapp/blob/master/src/public/index.html</a>\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/home.component.html\n ** module id = 69\n ** module chunks = 0\n **/","import { Component, OnInit, NgZone, ViewChild } from '@angular/core';\r\n\r\nimport { TitleService } from './title.service'\r\nimport { ElectronApiService } from './electron-api.service';\r\nimport { ModelData } from './model-data'\r\n\r\n@Component({\r\n  selector: 'my-create-model',\r\n  template: require('./create-model.component.html')\r\n})\r\nexport class CreateModelComponent implements OnInit {\r\n  textboxInput = {\r\n    width: <string>null,\r\n    length: <string>null,\r\n    measuredFactor: <string>null\r\n  }\r\n\r\n  textboxLabels = {\r\n    width: \"Equivalent ellipse widths (cm @iso)\",\r\n    length: \"Equivalent ellipse lengths (cm @iso)\",\r\n    measuredFactor: \"Measured insert factor (as per TG 25)\"\r\n  }\r\n\r\n  textboxValid = {\r\n    width: true,\r\n    length: true,\r\n    measuredFactor: true\r\n  }\r\n\r\n  currentSettings = {\r\n    machine: <string>null,\r\n    energy: <number>null,\r\n    applicator: <string>null,\r\n    ssd: <number>null\r\n  }\r\n\r\n  lengthSmallerThanWidth: boolean = false\r\n  \r\n  plot_width = 600\r\n\r\n  modelURL: string\r\n  dataInFlight: boolean = false\r\n\r\n\r\n\r\n  @ViewChild('plotContainer') plotContainer: any\r\n  @ViewChild('settingsPicker') settingsPicker: any\r\n\r\n  constructor(\r\n    private modelData: ModelData,\r\n    private myTitleService: TitleService,\r\n    private electronApiService: ElectronApiService,\r\n    ngZone: NgZone\r\n  ) {\r\n    window.onresize = (e) => {\r\n      ngZone.run(() => {\r\n        this.updatePlotWidth()\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.myTitleService.setTitle('Create Model')\r\n\r\n    this.modelURL = localStorage.getItem(\"modelURL\")\r\n    if (this.modelURL == null) {\r\n      this.modelURL = 'http://electronapi.simonbiggs.net/model'\r\n    }\r\n    this.updatePlotWidth()\r\n\r\n  }\r\n\r\n  updatePlotWidth() {\r\n    this.plot_width = this.plotContainer.nativeElement.clientWidth\r\n  }\r\n\r\n  currentMachineSettingsUpdated(newSettings: {}) {\r\n    for (let key of ['machine', 'energy', 'applicator', 'ssd']) {\r\n      this.currentSettings[key] = newSettings[key]\r\n    }\r\n    this.loadMeasuredData()\r\n    this.checkLengthSmallerThanWidth()\r\n  }\r\n\r\n  createKey() {\r\n    let key = (\r\n      '{\"machine\":' + JSON.stringify(String(this.currentSettings.machine)) + ',' +\r\n      '\"energy\":' + JSON.stringify(Number(this.currentSettings.energy)) + ',' +\r\n      '\"applicator\":' + JSON.stringify(String(this.currentSettings.applicator)) + ',' +\r\n      '\"ssd\":' + JSON.stringify(Number(this.currentSettings.ssd)) +\r\n      '}')\r\n\r\n    return key\r\n  }\r\n\r\n  loadMeasuredData() {\r\n    let localStorageKey = this.createKey()\r\n    let parsedData = JSON.parse(localStorage.getItem(localStorageKey))\r\n\r\n    this.modelData.fillFromObject(parsedData)\r\n\r\n    this.updateTextboxInput()\r\n  }\r\n\r\n  saveModel() {\r\n    let key = this.createKey()\r\n    localStorage.setItem(key, JSON.stringify(this.modelData))\r\n  }\r\n\r\n  updateTextboxInput() {\r\n    for (let key of ['width', 'length', 'measuredFactor']) {\r\n      this.textboxInput[key] = String(this.modelData.measurement[key])\r\n        .replace(/,/g, ', ')\r\n    }\r\n  }\r\n\r\n  checkLengthSmallerThanWidth() {\r\n    this.lengthSmallerThanWidth = false\r\n    for (let i = 0; i < this.modelData.measurement.width.length; i++) {\r\n      if (this.modelData.measurement.width[i] > this.modelData.measurement.length[i]) {\r\n        this.lengthSmallerThanWidth = true\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  validateInput(input: string): boolean {\r\n    // return /^(-?\\d*(\\.\\d+)?[,;\\s]+)*-?\\d*(\\.\\d+)?[,;\\s]*$/.test(input)\r\n    return true\r\n  }\r\n\r\n  onTextboxChange(key: string, newInput: string) {\r\n    this.textboxValid[key] = false\r\n    this.modelData.model.reset()\r\n\r\n    try {\r\n      if (this.validateInput(newInput)) {\r\n        this.modelData.measurement[key] = eval('[' + newInput.replace(/[,;\\n\\t]\\s*/g, ', ') + ']')\r\n        this.saveModel()\r\n        this.textboxValid[key] = true\r\n        this.checkLengthSmallerThanWidth()\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  basicServerSubmit() {\r\n    this.dataInFlight = true\r\n    this.electronApiService.sendToServer(\r\n      this.modelURL,\r\n      JSON.stringify(this.modelData.measurement)\r\n    )\r\n      .then((modelResult: any) => {\r\n        this.modelData.model.width = modelResult.model_width;\r\n        this.modelData.model.length = modelResult.model_length;\r\n        this.modelData.model.predictedFactor = modelResult.model_factor;\r\n        this.dataInFlight = false\r\n        this.saveModel()\r\n      })\r\n  }\r\n\r\n  modelServerChange(newModelURL: string) {\r\n    localStorage.setItem(\"modelURL\", newModelURL);\r\n  }\r\n\r\n  defaultServer() {\r\n    this.modelURL = 'http://electronapi.simonbiggs.net/model';\r\n    localStorage.setItem(\"modelURL\", this.modelURL);\r\n  }\r\n\r\n  loadDemoData() {\r\n    for (let key of ['machine', 'energy', 'applicator', 'ssd']) {\r\n      this.currentSettings[key] = null\r\n    }\r\n\r\n    this.settingsPicker.currentSettings = this.currentSettings\r\n\r\n    this.modelData.model.reset()\r\n\r\n    this.modelData.measurement.width = [\r\n      3.71, 6.78, 6.3, 7.56, 5.26, 6.53, 7.08, 4.38, 3.66,\r\n      4.21, 4.21, 6.54, 5.86, 3.17, 6., 8.06, 6.31, 5.26,\r\n      4.21, 5.21, 4.59, 5.34, 6.41, 5.26, 5.25, 7.82, 4.2,\r\n      3.16, 7.18, 5.72, 6.08, 6.64, 8.4, 4.59, 3.15, 4.67,\r\n      4.21, 9.45, 7.64, 3.17, 3.17, 7.36]\r\n    this.modelData.measurement.length = [\r\n      4.36, 10.97, 6.33, 10.05, 13.66, 10.99, 10.77, 5.47,\r\n      5.04, 8.41, 13.65, 8.41, 8.62, 9.43, 7.97, 11.85,\r\n      8.24, 10.52, 6.82, 11.4, 5.67, 9.64, 8.69, 8.41,\r\n      5.26, 10.85, 4.21, 5.25, 11.27, 11.6, 6.64, 9.81,\r\n      8.42, 6.54, 3.16, 6.28, 10.51, 9.47, 8.99, 13.64,\r\n      6.83, 7.37]\r\n    this.modelData.measurement.measuredFactor = [\r\n      0.9489, 1.0067, 0.9858, 1.0045, 0.9868, 1.0004, 1.0052,\r\n      0.9634, 0.9437, 0.9708, 0.9757, 0.9931, 0.9896, 0.9492,\r\n      0.9911, 1.0067, 0.9923, 0.9879, 0.9609, 0.9884, 0.9587,\r\n      0.9934, 0.9991, 0.9831, 0.9705, 1.0019, 0.9562, 0.9348,\r\n      0.9987, 0.9989, 0.9933, 0.9991, 1.0067, 0.9683, 0.9296,\r\n      0.9735, 0.9709, 1.0084, 1.0028, 0.953, 0.9484, 1.0032]\r\n    \r\n    this.checkLengthSmallerThanWidth()\r\n    this.updateTextboxInput()\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/create-model.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Description</h5>\\r\\n    <p>\\r\\n      Use this component to turn a set of at least 8 measured factors with corresponding equivalent widths and lengths into a spline model.\\r\\n      These widths and lengths need to be determined using the parameterisation method employed within the \\r\\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n        parameterisation component.\\r\\n      </a>\\r\\n    </p>\\r\\n    <p>\\r\\n      You are free to edit the widths, lengths, and factors manually below, or have the       \\r\\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n        parameterisation component\\r\\n      </a>\\r\\n      automatically add the measured factors to the correct model. Both work interchangably.\\r\\n      You may only add shapes via the \\r\\n      <a routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\">\\r\\n        parameterisation component\\r\\n      </a>\\r\\n      if machine ID, applicator, energy, ssd, and measured factor are filled in and they match a machine configuration defined within the \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        specifications component.\\r\\n      </a> \\r\\n    </p>\\r\\n    <p>\\r\\n      A spline model is only valid for a single machine configuration. \\r\\n      Therefore each machine, applicator, energy, ssd has its own model. \\r\\n      Using the machine configuration section below you can change between the configurations.\\r\\n      This will only work if you have already\\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        defined your machine configurations.\\r\\n      </a> \\r\\n    </p>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Choose machine configuration</h5>\\r\\n    <p>\\r\\n      Here is where you select the machine specifications for the model you with to edit. \\r\\n      You will only see options here if you have actually       \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        defined your machine configurations.\\r\\n      </a> \\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div [style.width]=\\\"'100%'\\\">\\r\\n    <my-choose-specifications #settingsPicker\\r\\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\\r\\n    </my-choose-specifications>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <div [style.width]=\\\"'100%'\\\" [style.height]=\\\"'30px'\\\"></div>\\r\\n    <h5>\\r\\n      The model\\r\\n      <span *ngIf=\\\"currentSettings.machine != null && currentSettings.energy != null && currentSettings.energy != 0 && currentSettings.applicator != null && currentSettings.applicator != '' && currentSettings.ssd != null && currentSettings.ssd != 0\\\">\\r\\n        for machine ID {{currentSettings.machine}}, at an energy of {{currentSettings.energy}} MeV, on the {{currentSettings.applicator}} applicator at {{currentSettings.ssd}} cm SSD\\r\\n      </span>\\r\\n      </h5>    \\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n\\r\\n    <h6>Input widths, lengths, and factors</h6>\\r\\n    <p>\\r\\n      Use the following text boxes to directly edit the measured data used by the spline model.\\r\\n    </p>\\r\\n    <p>\\r\\n      Coordinates can be separated by commas (,), semicolons (;), tabs, or new lines.\\r\\n      This web app should handle copying and pasting from a range of sources (including excel).\\r\\n      Number inputs can only contain the characters 0-9, a minus sign (-) and decimal points (.).\\r\\n    </p>\\r\\n\\r\\n    <div *ngFor=\\\"let key of ['width', 'length', 'measuredFactor']\\\">\\r\\n      <mdl-textfield \\r\\n        type=\\\"text\\\"\\r\\n        [label]=\\\"textboxLabels[key]\\\"\\r\\n        [(ngModel)]=\\\"this.textboxInput[key]\\\"\\r\\n        (input)=\\\"onTextboxChange(key, $event.target.value)\\\"\\r\\n        rows=4\\r\\n        floating-label\\r\\n        [disabled]=\\\"dataInFlight\\\"\\r\\n        [style.width]=\\\"'100%'\\\"></mdl-textfield>\\r\\n      <p *ngIf=\\\"!textboxValid[key]\\\">\\r\\n        The {{key}} input is invalid\\r\\n      </p>\\r\\n      <span *ngIf=\\\"key=='length'\\\">\\r\\n        <p *ngIf=\\\"lengthSmallerThanWidth\\\">\\r\\n          There exists a length value that is smaller than its corresponding width. Spline modelling is disabled as a result.\\r\\n        </p>\\r\\n      </span>\\r\\n    </div>\\r\\n    <p *ngIf=\\\"modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length\\\">\\r\\n      The lengths of the inputs are not equal. Spline modelling is disabled as a result.\\r\\n    </p>\\r\\n    <p *ngIf=\\\"modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8\\\">\\r\\n      There are currently less than 8 data points. Spline modelling is disabled as a result.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\" #plotContainer>\\r\\n    <h6>The spline model</h6>\\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Model | Load demo data\\\"\\r\\n      [disabled]=\\\"dataInFlight\\\"\\r\\n      (click)=\\\"loadDemoData()\\\">Load demo data         \\r\\n    </button>\\r\\n      \\r\\n    <button\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      angulartics2On=\\\"click\\\" angularticsEvent=\\\"Model | Calculate spline model\\\"\\r\\n      [disabled]=\\\"modelData.measurement.width.length < 8 || modelData.measurement.length.length < 8 || modelData.measurement.measuredFactor.length < 8 || dataInFlight || modelData.measurement.measuredFactor.length != modelData.measurement.width.length || modelData.measurement.measuredFactor.length != modelData.measurement.length.length || modelData.measurement.width.length != modelData.measurement.length.length || !textboxValid['width'] || !textboxValid['length'] || !textboxValid['measuredFactor'] || lengthSmallerThanWidth\\\"\\r\\n      (click)=\\\"basicServerSubmit()\\\">Calculate Spline Model\\r\\n    </button>\\r\\n    \\r\\n\\r\\n    <div *ngIf=\\\"modelData.measurement.width.length > 0 && modelData.measurement.length.length > 0 && modelData.measurement.measuredFactor.length > 0\\\">\\r\\n      <my-bokeh-create-model\\r\\n        [title]=\\\"'Model Plot'\\\"\\r\\n        [scatter_x]=\\\"modelData.measurement.width\\\"\\r\\n        [scatter_y]=\\\"modelData.measurement.length\\\"\\r\\n        [scatter_z]=\\\"modelData.measurement.measuredFactor\\\"\\r\\n        [pcolour_x]=\\\"modelData.model.width\\\"\\r\\n        [pcolour_y]=\\\"modelData.model.length\\\"\\r\\n        [pcolour_z]=\\\"modelData.model.predictedFactor\\\"\\r\\n        [plot_width]=\\\"plot_width\\\"\\r\\n        [plot_height]=\\\"380\\\">\\r\\n      </my-bokeh-create-model>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"modelData.measurement.width.length == 0 || modelData.measurement.length.length == 0|| modelData.measurement.measuredFactor.length == 0\\\">\\r\\n      <p>\\r\\n        <font color=\\\"red\\\">There is currently no data for this combination.</font> If you wish to load some demo data to see the model in action press the \\\"load demo data\\\" button below.\\r\\n        To set this model up with your own data follow the instructions in the description at the top of this page.\\r\\n      </p>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet\\\">\\r\\n    <h5>Change modelling server url (optional)</h5>\\r\\n    <p>Only change the following address if you wish to use your own server. This is not required to be edited. The default is: <br>\\r\\n      <a (click)=\\\"defaultServer()\\\">http://electronapi.simonbiggs.net/model</a>        \\r\\n    </p>\\r\\n    <mdl-textfield\\r\\n      type=\\\"text\\\"\\r\\n      label=\\\"Spline model server address\\\"\\r\\n      (input)=\\\"modelServerChange($event.target.value)\\\"\\r\\n      floating-label\\r\\n      [(ngModel)]=\\\"modelURL\\\"\\r\\n      style=\\\"width:100%\\\"></mdl-textfield>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/create-model.component.html\n ** module id = 71\n ** module chunks = 0\n **/","import { Component, OnInit, ViewChild, NgZone } from '@angular/core';\r\n\r\nimport { TitleService } from './title.service'\r\nimport { ModelData } from './model-data'\r\n\r\nimport { validateInput } from './sanitise-validation'\r\n\r\n@Component({\r\n  selector: 'my-use-model',\r\n  template: require('./use-model.component.html')\r\n})\r\nexport class UseModelComponent {\r\n  textboxInput = {\r\n    width: <string> null,\r\n    length: <string> null,\r\n    area: <string> null,\r\n    measuredFactor: <string> null\r\n  }\r\n\r\n  textboxLabels = {\r\n    width: \"Width of ellipse given by diameter of largest encompassed circle (cm @iso)\",\r\n    length: \"Length of ellipse that matches insert shape area (cm @iso)\",\r\n    area: \"[Optional] Area of insert shape (cm^2 @iso)\",\r\n    measuredFactor: \"[Optional] Measured insert factor (as per TG 25)\"\r\n  }\r\n\r\n  textboxValid = {\r\n    width: true,\r\n    length: true,\r\n    area: true,\r\n    measuredFactor: true\r\n  }\r\n\r\n  currentSettings = {\r\n    machine: <string> null,\r\n    energy: <number> null,\r\n    applicator: <string> null,\r\n    ssd: <number> null\r\n  }\r\n\r\n  modelLookup = {}\r\n  predictionDifference: number[] = []\r\n\r\n  lengthSmallerThanWidth: boolean = false\r\n  \r\n  plot_width = 600\r\n\r\n  @ViewChild('plotContainer') plotContainer: any\r\n  @ViewChild('settingsPicker') settingsPicker: any\r\n\r\n  constructor(\r\n    private modelData: ModelData,\r\n    private myTitleService: TitleService,\r\n    ngZone: NgZone\r\n  ) {\r\n    window.onresize = (e) => {\r\n      ngZone.run(() => {\r\n        this.updatePlotWidth()\r\n      })\r\n    }\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.myTitleService.setTitle('Use Model')\r\n    this.updatePlotWidth()\r\n    this.updateModelLookup()\r\n    this.loadMeasuredData()\r\n    this.updatePredictedFactors()\r\n  }\r\n  \r\n\r\n  // linearInterpolate(x: number, x1: number, x2: number, y1: number, y2: number) {\r\n  //   let m = (y2 - y1) / (x2 - x1)\r\n  //   let c = y1 - m * x1\r\n  //   let y = m * x + c\r\n\r\n  //   return y\r\n  // }\r\n\r\n  // bilinearInterpolate(\r\n  //     x: number, y: number, \r\n  //     x_1: number, x_2: number, \r\n  //     y_1: number, y_2: number, \r\n  //     z_x1y1: number, z_x1y2: number, z_x2y1: number, z_x2y2: number) {\r\n  //   let z_xy1 = this.linearInterpolate(x, x_1, x_2, z_x1y1, z_x2y1)\r\n  //   let z_xy2 = this.linearInterpolate(x, x_1, x_2, z_x1y2, z_x2y2)\r\n\r\n  //   let z_xy = this.linearInterpolate(y, y_1, y_2, z_xy1, z_xy2)\r\n\r\n  //   return z_xy\r\n  // }\r\n\r\n  lookupFactor(width: number, length: number) {\r\n    width = Math.round(width*10)/10\r\n    length = Math.round(length*10)/10\r\n\r\n    let key: string\r\n    key = String(width) + \",\" + String(length)\r\n\r\n    return Math.round(this.modelLookup[key]*1000)/1000\r\n  }\r\n\r\n  updatePredictedFactors() {\r\n    this.modelData.predictions.predictedFactor = []\r\n\r\n    let amount = Math.min(this.modelData.predictions.width.length, this.modelData.predictions.length.length)\r\n    let predictedFactor: number\r\n    let width: number\r\n    let length: number\r\n    for (let i = 0; i < amount; i++) {\r\n      width = this.modelData.predictions.width[i]\r\n      length = this.modelData.predictions.length[i]\r\n      predictedFactor = this.lookupFactor(width, length)\r\n\r\n      this.modelData.predictions.predictedFactor.push(predictedFactor)\r\n    }\r\n    \r\n    this.updatePredictionDifference()\r\n  }\r\n\r\n  updatePredictionDifference() {\r\n    this.predictionDifference = []\r\n    let measuredFactor: number\r\n    let predictedFactor: number\r\n    let difference: number\r\n    for (let i in this.modelData.predictions.measuredFactor) {\r\n      measuredFactor = this.modelData.predictions.measuredFactor[i]\r\n      predictedFactor = this.modelData.predictions.predictedFactor[i]\r\n      difference = predictedFactor - measuredFactor\r\n      difference = Math.round(difference * 1000) / 1000\r\n\r\n      this.predictionDifference.push(difference)\r\n    }\r\n  }\r\n  \r\n  updateModelLookup() {\r\n    this.modelLookup = {}\r\n    let key: string\r\n    for (let i in this.modelData.model.width) {\r\n      key = String(this.modelData.model.width[i]) + \",\" + String(this.modelData.model.length[i])\r\n      this.modelLookup[key] = this.modelData.model.predictedFactor[i]\r\n    }\r\n  }\r\n\r\n  convertLengthToArea(width: number, length: number): number {\r\n    let area = Math.PI * width * length / 4\r\n    return Math.round(area*10)/10\r\n  }\r\n\r\n  convertAreaToLength(width: number, area: number): number {\r\n    let length = 4 * area / (Math.PI * width)\r\n    return Math.round(length*10)/10\r\n  }\r\n\r\n  updateAreaFromLength() {\r\n    let width: number\r\n    let length: number\r\n    let area: number\r\n\r\n    this.modelData.predictions.area = []\r\n\r\n    for (let i in this.modelData.predictions.length) {\r\n      width = this.modelData.predictions.width[i]\r\n      length = this.modelData.predictions.length[i]\r\n\r\n      area = this.convertLengthToArea(width, length)\r\n      this.modelData.predictions.area.push(area)\r\n    }\r\n  }\r\n\r\n  updateLengthFromArea() {\r\n    let width: number\r\n    let length: number\r\n    let area: number\r\n\r\n    this.modelData.predictions.length = []\r\n\r\n    for (let i in this.modelData.predictions.area) {\r\n      width = this.modelData.predictions.width[i]\r\n      area = this.modelData.predictions.area[i]\r\n\r\n      length = this.convertAreaToLength(width, area)\r\n      this.modelData.predictions.length.push(length)\r\n    }\r\n  }\r\n\r\n  updatePlotWidth() {\r\n    this.plot_width = this.plotContainer.nativeElement.clientWidth\r\n  }\r\n\r\n  currentMachineSettingsUpdated(newSettings: {}) {\r\n    for (let key of ['machine', 'energy', 'applicator', 'ssd']) {\r\n      this.currentSettings[key] = newSettings[key]\r\n    }\r\n    this.loadMeasuredData()\r\n  }\r\n\r\n  // createLocalStorageKey() {\r\n  //   let localStorageKey = (\r\n  //     '{\"machine\":' + JSON.stringify(String(this.currentSettings.machine)) + ',' +\r\n  //     '\"energy\":' + JSON.stringify(Number(this.currentSettings.energy)) + ',' +\r\n  //     '\"applicator\":' + JSON.stringify(String(this.currentSettings.applicator)) + ',' +\r\n  //     '\"ssd\":' + JSON.stringify(Number(this.currentSettings.ssd)) +\r\n  //     '}')\r\n\r\n  //   return localStorageKey\r\n  // }\r\n\r\n  loadMeasuredData() {\r\n    this.modelData.loadModelData(this.currentSettings)\r\n    // let localStorageKey = this.createLocalStorageKey()\r\n    // let parsedData = JSON.parse(localStorage.getItem(localStorageKey))\r\n\r\n    // this.modelData.fillFromObject(parsedData)\r\n\r\n    if (this.modelData.predictions.length.length < this.modelData.predictions.area.length) {\r\n      this.updateLengthFromArea()\r\n    }\r\n    else {\r\n      this.updateAreaFromLength()\r\n    }\r\n    this.updateModelLookup()\r\n    this.updatePredictedFactors()\r\n    this.updateAllTextboxInputs()\r\n  }\r\n\r\n  saveModel() {\r\n    this.modelData.saveModelData(this.currentSettings)\r\n    // let localStorageKey = this.createLocalStorageKey()\r\n    // localStorage.setItem(localStorageKey, JSON.stringify(this.modelData))\r\n  }\r\n\r\n  updateAllTextboxInputs() {\r\n    for (let key of ['width', 'length', 'area', 'measuredFactor']) {\r\n      this.updateTextboxInput(key)\r\n    }\r\n  }\r\n\r\n  updateTextboxInput(key: string) {\r\n    this.textboxInput[key] = String(this.modelData.predictions[key])\r\n      .replace(/,/g, ', ')\r\n  }\r\n\r\n  lastEdit: string = 'length'\r\n\r\n  onTextboxChange(key: string, newInput: string) {\r\n    this.textboxValid[key] = false\r\n\r\n    try {\r\n      if (validateInput(newInput)) {\r\n        this.modelData.predictions[key] = eval('[' + newInput.replace(/[,;\\n\\t]\\s*/g, ', ') + ']')\r\n        this.textboxValid[key] = true\r\n\r\n        if (key == 'length' || (key == 'width' && this.lastEdit == 'length')) {\r\n          this.updateAreaFromLength()\r\n          this.updateTextboxInput('area')\r\n          this.lastEdit = 'length'\r\n        }\r\n        if (key == 'area' || (key == 'width' && this.lastEdit == 'area')) {\r\n          this.updateLengthFromArea()\r\n          this.updateTextboxInput('length')\r\n          this.lastEdit = 'area'\r\n        }\r\n        this.updatePredictedFactors()\r\n        this.saveModel()\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/use-model.component.ts\n **/","export function validateInput(input: string): boolean {\r\n  // return /^(-?\\d*(\\.\\d+)?[,;\\s]+)*-?\\d*(\\.\\d+)?[,;\\s]*$/.test(input)\r\n  return /^[-\\d\\.,;\\sNa]*$/.test(input)\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/sanitise-validation.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Use models</h5>\\r\\n    <p>\\r\\n      This component is where created models are used. \\r\\n      Factors for prediction will be able to be inputted using width, and then either length or area, and optionally\\r\\n      a measured factor can be included for the purpose of comparing model results with measurement.\\r\\n    </p>\\r\\n    <p>\\r\\n      You can either use the parameterisation component to parameterise your shapes, or if you have a large data set of \\r\\n      generic shapes you need only determine the diameter of the largest encompassed circle to define width, and then\\r\\n      you may input shape area instead of length.\\r\\n      This allows you to quickly check large data sets of previous measurements on generic shapes.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Choose machine configuration</h5>\\r\\n    <my-choose-specifications #settingsPicker\\r\\n      (settingsUpdated)=currentMachineSettingsUpdated($event)>\\r\\n    </my-choose-specifications>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Inserts being predicted</h5>\\r\\n    <div *ngFor=\\\"let key of ['width', 'length', 'area', 'measuredFactor']\\\">\\r\\n      <mdl-textfield \\r\\n        type=\\\"text\\\"\\r\\n        [label]=\\\"textboxLabels[key]\\\"\\r\\n        [(ngModel)]=\\\"this.textboxInput[key]\\\"\\r\\n        (input)=\\\"onTextboxChange(key, $event.target.value)\\\"\\r\\n        rows=2\\r\\n        floating-label\\r\\n        [style.width]=\\\"'100%'\\\"></mdl-textfield>\\r\\n      <p *ngIf=\\\"!textboxValid[key]\\\">\\r\\n        The {{key}} input is invalid\\r\\n      </p>\\r\\n    </div>\\r\\n    <p>Predicted factors: {{modelData.predictions.predictedFactor}}</p>\\r\\n    <p>Prediction minus measured: {{predictionDifference}}</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\" #plotContainer>\\r\\n    <div *ngIf=\\\"modelData.model.width.length > 0 && modelData.model.length.length > 0 && modelData.model.predictedFactor.length > 0\\\">\\r\\n      <my-bokeh-use-model\\r\\n        [title]=\\\"'Model Plot'\\\"\\r\\n        [scatter_x]=\\\"modelData.predictions.width\\\"\\r\\n        [scatter_y]=\\\"modelData.predictions.length\\\"\\r\\n        [area]=\\\"modelData.predictions.area\\\"\\r\\n        [scatter_z]=\\\"modelData.predictions.measuredFactor\\\"\\r\\n        [predicted_factor]=\\\"modelData.predictions.predictedFactor\\\"\\r\\n        [pcolour_x]=\\\"modelData.model.width\\\"\\r\\n        [pcolour_y]=\\\"modelData.model.length\\\"\\r\\n        [pcolour_z]=\\\"modelData.model.predictedFactor\\\"\\r\\n        [plot_width]=\\\"plot_width\\\"\\r\\n        [plot_height]=\\\"380\\\">\\r\\n      </my-bokeh-use-model>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"modelData.model.width.length == 0 || modelData.model.length.length == 0|| modelData.model.predictedFactor.length == 0\\\">\\r\\n      <p>\\r\\n        A model has not been calculated for this machine specification.\\r\\n        If you do have at least 8 data points please calculate the spline model on the           \\r\\n        <a routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\">\\r\\n          create model component.\\r\\n        </a>\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/use-model.component.html\n ** module id = 74\n ** module chunks = 0\n **/","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TitleService } from './title.service'\r\nimport { LocalStorageService } from './local-storage.service';\r\n\r\n@Component({\r\n  selector: 'my-storage-management',\r\n  template: require('./storage-management.component.html')\r\n})\r\nexport class StorageManagementComponent implements OnInit {\r\n  testLocalStorage: boolean;\r\n  usedLocalStorageSpace: number;\r\n  remainingLocalStorageSpace: number;\r\n\r\n  constructor(\r\n    private myTitleService: TitleService,\r\n    private myLocalStorageService: LocalStorageService\r\n  ) {}\r\n  \r\n  ngOnInit() {\r\n    this.myTitleService.setTitle('Storage');\r\n    this.testLocalStorage = this.myLocalStorageService.isSupported;\r\n    this.usedLocalStorageSpace = this.myLocalStorageService.getUsedSpace();\r\n  }\r\n\r\n  testRemainingStorage() {\r\n    this.remainingLocalStorageSpace = this.myLocalStorageService.getRemainingSpace()\r\n  }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/storage-management.component.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { LocalStorage } from './localstoragemodule';\r\n\r\n@Injectable()\r\nexport class LocalStorageService {\r\n  isSupported = LocalStorage.isSupported;\r\n  hasItem = LocalStorage.hasItem;\r\n  getRemainingSpace = LocalStorage.getRemainingSpace;\r\n  getMaximumSpace = LocalStorage.getMaximumSpace;\r\n  getUsedSpace = LocalStorage.getUsedSpace;\r\n  getItemUsedSpace = LocalStorage.getItemUsedSpace;\r\n  getBackup = LocalStorage.getBackup;\r\n  applyBackup = LocalStorage.applyBackup;\r\n  consoleInfo = LocalStorage.consoleInfo;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/local-storage.service.ts\n **/","/**\r\n * Check if localStorage is supported                       const isSupported: boolean\r\n * Check if localStorage has an Item                        function hasItem(key: string): boolean\r\n * Get the amount of space left in localStorage             function getRemainingSpace(): number\r\n * Get the maximum amount of space in localStorage          function getMaximumSpace(): number\r\n * Get the used space in localStorage                       function getUsedSpace(): number\r\n * Get the used space of an item in localStorage            function getItemUsedSpace(): number\r\n * Backup Assosiative Array                                 interface Backup\r\n * Get a Backup of localStorage                             function getBackup(): Backup\r\n * Apply a Backup to localStorage                           function applyBackup(backup: Backup, fClear: boolean = true, fOverwriteExisting: boolean = true)\r\n * Dump all information of localStorage in the console      function consoleInfo(fShowMaximumSize: boolean = false)\r\n */\r\nexport module LocalStorage {\r\n    // Copied from https://gist.github.com/CodeiSir/1fb8bd9154dfde7eb0c7\r\n    // found from http://stackoverflow.com/a/34245594\r\n    \r\n    /**\r\n     * Flag set true if the Browser supports localStorage, widthout affecting it\r\n     */\r\n    export const isSupported: boolean = (() => {\r\n        try {\r\n            let itemBackup = localStorage.getItem(\"\")\r\n            localStorage.removeItem(\"\");\r\n            localStorage.setItem(\"\", itemBackup);\r\n            if (itemBackup === null) localStorage.removeItem(\"\")\r\n            else localStorage.setItem(\"\", itemBackup)\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    })()\r\n\r\n    /**\r\n     * Check if localStorage has an Item / exists with the give key\r\n     * @param key the key of the Item\r\n     */\r\n    export function hasItem(key: string): boolean {\r\n        return localStorage.getItem(key) !== null\r\n    }\r\n\r\n    /**\r\n     * This will return the left space in localStorage without affecting it's content\r\n     * Might be slow !!!\r\n     */\r\n    export function getRemainingSpace(): number {\r\n        let itemBackup = localStorage.getItem(\"\")\r\n        let increase = true\r\n        let data = \"1\"\r\n        let totalData = \"\"\r\n        let trytotalData = \"\"\r\n        while (true) {\r\n            try {\r\n                trytotalData = totalData + data\r\n                localStorage.setItem(\"\", trytotalData);\r\n                totalData = trytotalData;\r\n                if (increase) data += data\r\n            } catch (e) {\r\n                if (data.length < 2) {\r\n                    break;\r\n                }\r\n                increase = false\r\n                data = data.substr(data.length / 2)\r\n            }\r\n        }\r\n        if (itemBackup === null) localStorage.removeItem(\"\")\r\n        else localStorage.setItem(\"\", itemBackup)\r\n\r\n        return totalData.length\r\n    }\r\n\r\n    /**\r\n     * This function returns the maximum size of localStorage without affecting it's content\r\n     * Might be slow !!!\r\n     */\r\n    export function getMaximumSpace(): number {\r\n        let backup = getBackup()\r\n        localStorage.clear()\r\n        let max = getRemainingSpace()\r\n        applyBackup(backup)\r\n        return max\r\n    }\r\n\r\n    /**\r\n     * This will return the currently used size of localStorage\r\n     */\r\n    export function getUsedSpace(): number {\r\n        let sum = 0\r\n\r\n        for (let i = 0; i < localStorage.length; ++i) {\r\n            let key = localStorage.key(i)\r\n            let value = localStorage.getItem(key)\r\n            sum += key.length + value.length\r\n        }\r\n\r\n        return sum\r\n    }\r\n\r\n    /**\r\n     * This will return the currently used size of a given Item, returns NaN if key is not found\r\n     * @param key\r\n     */\r\n    export function getItemUsedSpace(key: string): number {\r\n        let value = localStorage.getItem(key)\r\n        if (value === null) {\r\n            return NaN\r\n        } else {\r\n            return key.length + value.length\r\n        }\r\n    }\r\n\r\n    /** \r\n     * Associative-array for localStorage holding key->value \r\n     */\r\n    export interface Backup {\r\n        [index: string]: string\r\n    }\r\n\r\n    /**\r\n     * This will return a localStorage-backup (Associative-Array key->value)\r\n     */\r\n    export function getBackup(): Backup {\r\n        let backup: Backup = {}\r\n\r\n        for (let i = 0; i < localStorage.length; ++i) {\r\n            let key = localStorage.key(i)\r\n            let value = localStorage.getItem(key)\r\n            backup[key] = value\r\n        }\r\n\r\n        return backup\r\n    }\r\n\r\n    /**\r\n     * This will apply a localStorage-Backup (Associative-Array key->value)\r\n     * @param backup            associative-array \r\n     * @param fClear             optional flag to clear all existing storage first. Default: true\r\n     * @param fOverwriteExisting optional flag to replace existing keys. Default: true\r\n     */\r\n    export function applyBackup(backup: Backup, fClear: boolean = true, fOverwriteExisting: boolean = true) {\r\n        if (fClear == true) {\r\n            localStorage.clear()\r\n        }\r\n\r\n        for (let key in backup) {\r\n            if (fOverwriteExisting === false && backup[key] !== undefined) {\r\n                continue\r\n            }\r\n            let value = backup[key]\r\n            localStorage.setItem(key, value)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This functions dumps all keys and values of the local Storage to the console,\r\n     * as well as the current size and number of items\r\n     * @param fShowMaximumSize optional, flag show maximum size of localStorage. Default: false\r\n     */\r\n    export function consoleInfo(fShowMaximumSize: boolean = false) {\r\n        let amount = 0\r\n        let size = 0\r\n\r\n        for (let i = 0; i < localStorage.length; ++i) {\r\n            let key = localStorage.key(i)\r\n            let value = localStorage.getItem(key);\r\n            console.log(amount, key, value)\r\n            size += key.length + value.length\r\n            amount++\r\n        }\r\n        console.log(\"Total entries:\", amount)\r\n        console.log(\"Total size:\", size)\r\n        if (fShowMaximumSize === true) {\r\n            let maxSize = getMaximumSpace()\r\n            console.log(\"Total size:\", maxSize)\r\n        }\r\n    }\r\n}\r\n/*\r\n    // Example\r\n    console.log(\"LocalStorage supported:\", LocalStorage.isSupported)// true - I hope so anyways 😉\r\n    localStorage.setItem(\"asd\", \"ASDASD\")                           // sets / overwrites the item \"asd\"\r\n    localStorage.setItem(\"asd\" + Math.random(), \"ASDASD\")           // set another item each time you refresh the page\r\n    var backup = LocalStorage.getBackup()                           // creates a backup, we will need it later!\r\n    console.log(JSON.stringify(backup))                             // this is how the backup looks like\r\n    var usedSpace = LocalStorage.getUsedSpace()                     // amount of space used right now\r\n    console.log(\"Used Space:\", usedSpace)                \r\n    var maxSpace = LocalStorage.getMaximumSpace()                   // amount of maximum space aviable\r\n    console.log(\"Maximum Space:\", maxSpace)             \r\n    var remSpace = LocalStorage.getRemainingSpace()                 // amount of remaining space\r\n    console.log(\"Remaining Space:\", remSpace)\r\n    console.log(\"SpaceCheck\", maxSpace === usedSpace + remSpace)    // true\r\n    console.log(\"hasItem\", LocalStorage.hasItem(\"nothis0ne\"))       // we don't have this one in our localStorage\r\n    localStorage.clear()                                            // oops, we deleted the localStorage!\r\n    console.log(\"has asd\",LocalStorage.hasItem(\"asd\"))              // item asd is lost 😒\r\n    LocalStorage.applyBackup(backup)                                // but we have a backup, restore it!\r\n    LocalStorage.consoleInfo()                                      // show all the info we have, see the backup worked 😊\r\n*/\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/localstoragemodule.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <h5>Storage management</h5>\\r\\n    <p>\\r\\n      Component still under construction\\r\\n    </p>\\r\\n    <p>\\r\\n      This component is for the management of the data stored within this browser.\\r\\n      In the future you will be able to come here to bulk export/import your data to a '.json' file for backup and transfer.\\r\\n      At this current point in time the only function of this component is to see how much browser storage this web app\\r\\n      has left for its use.\\r\\n    </p>\\r\\n\\r\\n    <p>\\r\\n      None of your measured data, or your model data is stored on a remote server. \\r\\n      Your measurements and models are only sent to the server in the form of x and y coordinates for parameterisation, and \\r\\n      in the form of widths, lengths, and measured factors for modelling. \\r\\n      The server does not save a copy to disk of any of that data.\\r\\n    </p>\\r\\n\\r\\n    <p>\\r\\n      In the future it is envisaged that an option will be provided for you to easily share your model with \\r\\n      the community under the AGPLv3+ license should you so choose, but this will not be automatic. \\r\\n      It will be opt-in only.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <h5>Local storage tests</h5>\\r\\n    <p></p>\\r\\n\\r\\n    <div *ngIf=\\\"testLocalStorage\\\">\\r\\n      <p>Your browser supports local storage. You currently have {{usedLocalStorageSpace}} B of used space. Most browsers support\\r\\n        5 MiB.\\r\\n      </p>\\r\\n\\r\\n      <p>To check your remaining storage press the button below. Warning, this might be slow.</p>\\r\\n      <button mdl-button mdl-button-type=\\\"raised\\\" mdl-colored=\\\"primary\\\" mdl-ripple (click)=\\\"testRemainingStorage()\\\">Test remaining local storage           \\r\\n      </button>\\r\\n      <div *ngIf=\\\"remainingLocalStorageSpace\\\">\\r\\n        <p>You have {{remainingLocalStorageSpace}} B of local storage remaining which is available for use by this webapp.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!testLocalStorage\\\">\\r\\n      <p>\\r\\n        This webapp relies upon local storage working within your browser. Your browser does not support local storage. Please download\\r\\n        and use a modern standards compliant browser such as\\r\\n        <a href=\\\"https://www.google.com.au/chrome/browser/desktop/\\\">Chrome</a> or\\r\\n        <a href=\\\"https://www.mozilla.org/en-GB/firefox/new/\\\">Firefox</a> to use this webapp.\\r\\n      </p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/storage-management.component.html\n ** module id = 78\n ** module chunks = 0\n **/","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { TitleService } from './title.service'\r\n\r\n@Component({\r\n  selector: 'my-specifications',\r\n  template: require('./specifications.component.html')\r\n})\r\nexport class SpecificationsComponent implements OnInit {\r\n  machines: string[];\r\n  specifications = {};\r\n  currentMachine: string;\r\n\r\n  newMachineID: string;\r\n  newMachineIDValid: boolean = false;\r\n  newModel: string;\r\n  newModelValid: boolean = false;\r\n  newMachineValid: boolean = false;\r\n  edittingMachine: string = null;\r\n\r\n  newEnergy: number;\r\n  newEnergyValid: boolean = false;\r\n  newR50: number;\r\n  newR50Valid: boolean = false;\r\n  newEnergySetValid: boolean = false;\r\n  edittingEnergy: string = null;\r\n\r\n  newApplicator: string;\r\n  newApplicatorValid: boolean = false;\r\n  edittingApplicator: string = null;\r\n\r\n  newSSD: number;\r\n  newSSDValid: boolean = false;\r\n  edittingSSD: string = null;\r\n\r\n\r\n  constructor(\r\n    private myTitleService: TitleService\r\n  ) {}\r\n\r\n\r\n  ngOnInit() {\r\n    this.myTitleService.setTitle('Specifications');\r\n    \r\n    this.changeSpecifications(JSON.parse(localStorage.getItem(\"specifications\")));    \r\n  }\r\n\r\n  changeSpecifications(newSpecifications: {}) {\r\n    this.specifications = newSpecifications;\r\n    if (this.specifications == null) {\r\n      this.specifications = {};\r\n      this.machines = [];\r\n    }\r\n    else {\r\n      this.machines = Object.keys(this.specifications).sort();\r\n\r\n      this.currentMachine = JSON.parse(localStorage.getItem(\"current_machine\"));\r\n      if (this.currentMachine == null || this.specifications[this.currentMachine] === undefined) {\r\n        this.currentMachine = this.machines[0];\r\n      }\r\n    }\r\n    this.updateSpecifications()\r\n  } \r\n\r\n  updateSpecifications() {\r\n    localStorage.setItem(\"specifications\", JSON.stringify(this.specifications));\r\n  }\r\n\r\n  changeCurrentMachine(machine: string) {\r\n    this.currentMachine = machine;\r\n    this.updateCurrentMachine()\r\n  }\r\n\r\n  checkNewMachineIDInput() {\r\n    if (this.specifications[this.newMachineID] == null && this.newMachineID != null && this.newMachineID != \"\") {\r\n      this.newMachineIDValid = true;\r\n    }\r\n    else {\r\n      this.newMachineIDValid = false;\r\n    }\r\n\r\n    this.checkNewMachineValid()\r\n  }\r\n\r\n  checkNewModelInput() {\r\n    if (this.newModel != null && this.newModel != \"\") {\r\n      this.newModelValid = true;\r\n    }\r\n    else {\r\n      this.newModelValid = false;\r\n    }\r\n\r\n    this.checkNewMachineValid()\r\n  }\r\n\r\n  checkNewMachineValid() {\r\n    this.newMachineValid = (this.newMachineIDValid && this.newModelValid);\r\n  }\r\n\r\n  addMachineID() {\r\n    if (this.newMachineValid) {\r\n      this.machines.push(this.newMachineID);\r\n      this.specifications[this.newMachineID] = {};\r\n      this.specifications[this.newMachineID][\"model\"] = this.newModel;\r\n      this.specifications[this.newMachineID][\"energy\"] = [];\r\n      this.specifications[this.newMachineID][\"R50\"] = {};\r\n      this.specifications[this.newMachineID][\"applicator\"] = [];\r\n      this.specifications[this.newMachineID][\"ssd\"] = [];\r\n\r\n      this.changeCurrentMachine(this.newMachineID);\r\n\r\n      this.newMachineID = null;\r\n      this.newModel = null;\r\n      this.newMachineIDValid = false;\r\n      this.newModelValid = false;\r\n      this.newMachineValid = false;      \r\n\r\n      this.updateSpecifications();\r\n    }\r\n  }\r\n\r\n  checkNewEnergyInput() {\r\n    if (this.specifications[this.currentMachine][\"energy\"].indexOf(Number(this.newEnergy)) < 0 && this.newEnergy != null && !isNaN(Number(this.newEnergy))) {\r\n      this.newEnergyValid = true;\r\n    }\r\n    else {\r\n      this.newEnergyValid = false;\r\n    }\r\n\r\n    this.checkNewEnergySetValid()\r\n  }\r\n\r\n  checkNewR50Input() {\r\n    if (this.newR50 != null && !isNaN(Number(this.newR50))) {\r\n      this.newR50Valid = true;\r\n    }\r\n    else {\r\n      this.newR50Valid = false;\r\n    }\r\n\r\n    this.checkNewEnergySetValid()\r\n  }\r\n\r\n  checkNewEnergySetValid() {\r\n    this.newEnergySetValid = (this.newEnergyValid && this.newR50Valid);\r\n  }\r\n\r\n  addEnergy() {\r\n    if (this.newEnergySetValid) {\r\n      this.specifications[this.currentMachine][\"energy\"].push(Number(this.newEnergy));\r\n      this.specifications[this.currentMachine][\"R50\"][this.newEnergy] = Number(this.newR50);\r\n\r\n      this.newEnergy = null;\r\n      this.newR50 = null;\r\n      this.newEnergyValid = false;\r\n      this.newR50Valid = false;\r\n      this.newEnergySetValid = false;\r\n\r\n      this.updateSpecifications();\r\n    }\r\n\r\n  }\r\n\r\n  checkNewApplicatorInput() {\r\n    if (this.specifications[this.currentMachine][\"applicator\"].indexOf(this.newApplicator.toLowerCase()) < 0 && this.newApplicator != null && this.newApplicator != \"\") {\r\n      this.newApplicatorValid = true;\r\n    }\r\n    else {\r\n      this.newApplicatorValid = false;\r\n    }\r\n  }\r\n\r\n  addApplicator() {\r\n    if (this.newApplicatorValid) { \r\n      this.specifications[this.currentMachine][\"applicator\"].push(this.newApplicator.toLowerCase());\r\n\r\n      this.newApplicator = null;\r\n      this.newApplicatorValid = false;\r\n\r\n      this.updateSpecifications();\r\n    }\r\n  }\r\n\r\n  checkNewSSDInput() {\r\n    if (this.specifications[this.currentMachine][\"ssd\"].indexOf(Number(this.newSSD)) < 0 && this.newSSD != null && !isNaN(Number(this.newSSD))) {\r\n      this.newSSDValid = true;\r\n    }\r\n    else {\r\n      this.newSSDValid = false;\r\n    }\r\n  }\r\n\r\n  addSSD() {\r\n    if (this.newSSDValid) {\r\n    this.specifications[this.currentMachine][\"ssd\"].push(Number(this.newSSD));\r\n\r\n    this.newSSD = null;\r\n    this.newSSDValid = false;\r\n\r\n    this.updateSpecifications();\r\n    }\r\n  }\r\n\r\n  updateCurrentMachine() {\r\n    localStorage.setItem(\"current_machine\", JSON.stringify(this.currentMachine));\r\n  }\r\n\r\n  editMachine(machine:string) {\r\n    this.currentMachine = null;\r\n    this.edittingMachine = machine;\r\n  }\r\n\r\n  finishMachineEdit(machine: any, idInput: any, modelInput: any) {\r\n    if (idInput != machine) {\r\n      this.specifications[idInput] = this.specifications[machine]\r\n      delete this.specifications[machine]\r\n      this.machines = Object.keys(this.specifications).sort();\r\n    }\r\n    this.specifications[idInput][\"model\"] = modelInput;\r\n\r\n    this.updateSpecifications();\r\n\r\n    this.currentMachine = this.edittingMachine;\r\n    this.edittingMachine = null;\r\n  }\r\n\r\n  deleteMachine(machine:string) {\r\n    let index = this.machines.indexOf(machine);\r\n    this.machines.splice(index, 1);\r\n    delete this.specifications[machine];\r\n\r\n    this.edittingMachine = null;\r\n\r\n    this.updateSpecifications();\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/specifications.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Machine specifications editing</h5>\\r\\n    <p>\\r\\n      Use this component to define your centre's machine specifications. \\r\\n      These will be used throughout this web app to silo each model into its own specific machine ID, applicator, energy, ssd combination.\\r\\n    </p>\\r\\n    <p>\\r\\n      <font color=\\\"#d3d3d3\\\">\\r\\n        Currently the editing and deleting of energy, applicator, and SSD entries is not yet implimented.\\r\\n      </font>\\r\\n    </p>\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\" style=\\\"width:100%\\\">\\r\\n      <mdl-card-title>\\r\\n        <h2 mdl-card-title-text>Machine IDs</h2>\\r\\n      </mdl-card-title>\\r\\n\\r\\n      <mdl-list>\\r\\n        \\r\\n        <div *ngFor=\\\"let machine of machines\\\">\\r\\n        \\r\\n          <div *ngIf=\\\"machine!=edittingMachine\\\">\\r\\n            <mdl-list-item lines=\\\"3\\\">\\r\\n              <mdl-list-item-primary-content>\\r\\n                <!--<div (click)=\\\"editMachine(machine)\\\">-->\\r\\n                <div>\\r\\n                  <span>{{machine}}</span>\\r\\n                  <mdl-list-item-text-body>{{specifications[machine].model}}</mdl-list-item-text-body>\\r\\n                </div>\\r\\n              </mdl-list-item-primary-content>\\r\\n              <mdl-list-item-secondary-action>\\r\\n                <button\\r\\n                  mdl-button\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  [disabled]=\\\"machine==currentMachine || edittingMachine!=null\\\"\\r\\n                  (click)=\\\"changeCurrentMachine(machine)\\\"><mdl-icon>dashboard</mdl-icon>       \\r\\n                </button>\\r\\n                <button\\r\\n                  mdl-button *ngIf=\\\"machine!=edittingMachine\\\"\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  [disabled]=\\\"false\\\"\\r\\n                  (click)=\\\"editMachine(machine)\\\"><mdl-icon>edit</mdl-icon>       \\r\\n                </button>\\r\\n              </mdl-list-item-secondary-action>\\r\\n            </mdl-list-item>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div *ngIf=\\\"machine==edittingMachine\\\">\\r\\n            <mdl-list-item lines=\\\"3\\\">\\r\\n              <mdl-list-item-primary-content>\\r\\n                <mdl-textfield #machineIDTextField\\r\\n                  type=\\\"text\\\"\\r\\n                  label=\\\"Machine ID\\\"\\r\\n                  [value]=\\\"machine\\\"\\r\\n                  (keyup.enter)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"\\r\\n                  floating-label\\r\\n                  style=\\\"display:inline;\\\"></mdl-textfield>\\r\\n                <mdl-textfield #modelTextField\\r\\n                  type=\\\"text\\\"\\r\\n                  label=\\\"Model\\\"\\r\\n                  [value]=\\\"specifications[machine].model\\\"\\r\\n                  (keyup.enter)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"\\r\\n                  floating-label\\r\\n                  style=\\\"display:inline;\\\"></mdl-textfield>\\r\\n              </mdl-list-item-primary-content>\\r\\n\\r\\n              <mdl-list-item-secondary-action>\\r\\n                <button\\r\\n                  mdl-button\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  [disabled]=\\\"machine!=edittingMachine\\\"\\r\\n                  (click)=\\\"deleteMachine(machine)\\\"><mdl-icon>delete</mdl-icon>       \\r\\n                </button>\\r\\n                <button\\r\\n                  mdl-button\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  mdl-colored=\\\"primary\\\" \\r\\n                  [disabled]=\\\"machine==currentMachine || edittingMachine!=null\\\"\\r\\n                  (click)=\\\"changeCurrentMachine(machine)\\\"><mdl-icon>dashboard</mdl-icon>       \\r\\n                </button>\\r\\n                <button\\r\\n                  mdl-button\\r\\n                  mdl-button-type=\\\"icon\\\"\\r\\n                  mdl-ripple\\r\\n                  [disabled]=\\\"false\\\"\\r\\n                  (click)=\\\"finishMachineEdit(machine, machineIDTextField.value, modelTextField.value)\\\"><mdl-icon>done</mdl-icon>       \\r\\n                </button>\\r\\n              </mdl-list-item-secondary-action>\\r\\n            </mdl-list-item>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </mdl-list>\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"New Machine ID\\\"\\r\\n          [(ngModel)]=\\\"newMachineID\\\"\\r\\n          (input)=\\\"checkNewMachineIDInput()\\\"\\r\\n          (keyup.enter)=\\\"addMachineID()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:100%\\\"></mdl-textfield>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"Machine Make and Model\\\"\\r\\n          [(ngModel)]=\\\"newModel\\\"\\r\\n          (input)=\\\"checkNewModelInput()\\\"\\r\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add machine ID\\\"\\r\\n          (keyup.enter)=\\\"addMachineID()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:70%\\\"></mdl-textfield>\\r\\n        <button \\r\\n          [disabled]=\\\"!newMachineValid\\\"\\r\\n          mdl-button \\r\\n          mdl-button-type=\\\"mini-fab\\\"\\r\\n          mdl-ripple\\r\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add machine ID\\\"\\r\\n          (click)=\\\"addMachineID()\\\">\\r\\n          <mdl-icon>add</mdl-icon>\\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n\\r\\n    </mdl-card>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"currentMachine\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\r\\n      <mdl-card-title>\\r\\n        <h2 mdl-card-title-text>Energies for {{currentMachine}}</h2>\\r\\n      </mdl-card-title>\\r\\n        <mdl-list>\\r\\n          <mdl-list-item *ngFor=\\\"let energy of specifications[currentMachine].energy\\\" lines=\\\"3\\\">\\r\\n            <mdl-list-item-primary-content>\\r\\n              <span>{{energy}} MeV</span>\\r\\n              <mdl-list-item-text-body>R50: {{specifications[currentMachine].R50[energy]}} cm</mdl-list-item-text-body>\\r\\n            </mdl-list-item-primary-content>\\r\\n            <mdl-list-item-secondary-action>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\r\\n              </button>\\r\\n            </mdl-list-item-secondary-action>\\r\\n          </mdl-list-item>\\r\\n        </mdl-list>\\r\\n\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"New Energy (MeV)\\\"\\r\\n          [(ngModel)]=\\\"newEnergy\\\"\\r\\n          (input)=\\\"checkNewEnergyInput()\\\"\\r\\n          (keyup.enter)=\\\"addEnergy()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:100%\\\"></mdl-textfield>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"R50 for New Energy (cm)\\\"\\r\\n          [(ngModel)]=\\\"newR50\\\"\\r\\n          (input)=\\\"checkNewR50Input()\\\"\\r\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add energy\\\"\\r\\n          (keyup.enter)=\\\"addEnergy()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:70%\\\"></mdl-textfield>\\r\\n        <button \\r\\n          [disabled]=\\\"!newEnergySetValid\\\" \\r\\n          mdl-button \\r\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add energy\\\"\\r\\n          mdl-button-type=\\\"mini-fab\\\"\\r\\n          (click)=\\\"addEnergy()\\\">\\r\\n          <mdl-icon>add</mdl-icon>\\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n    </mdl-card>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"currentMachine\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\r\\n      <mdl-card-title>\\r\\n        <h2 mdl-card-title-text>Applicators for {{currentMachine}}</h2>\\r\\n      </mdl-card-title>\\r\\n        <mdl-list>\\r\\n          <mdl-list-item *ngFor=\\\"let applicator of specifications[currentMachine].applicator\\\">\\r\\n            <mdl-list-item-primary-content>\\r\\n              <mdl-list-item-text-body>{{applicator}}</mdl-list-item-text-body>\\r\\n            </mdl-list-item-primary-content>\\r\\n            <mdl-list-item-secondary-action>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\r\\n              </button>\\r\\n            </mdl-list-item-secondary-action>\\r\\n          </mdl-list-item>\\r\\n        </mdl-list>\\r\\n\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"New Applicator\\\"\\r\\n          [(ngModel)]=\\\"newApplicator\\\"\\r\\n          (input)=\\\"checkNewApplicatorInput()\\\"\\r\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add applicator\\\"\\r\\n          (keyup.enter)=\\\"addApplicator()\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:70%\\\"></mdl-textfield>\\r\\n        <button \\r\\n          [disabled]=\\\"!newApplicatorValid\\\" \\r\\n          mdl-button \\r\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add applicator\\\"\\r\\n          mdl-button-type=\\\"mini-fab\\\"\\r\\n          (click)=\\\"addApplicator()\\\">\\r\\n          <mdl-icon>add</mdl-icon>\\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n    </mdl-card>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"currentMachine\\\" class=\\\"mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\"  style=\\\"width:100%\\\">\\r\\n      <mdl-card-title>\\r\\n        <h2 mdl-card-title-text>SSDs for {{currentMachine}}</h2>\\r\\n      </mdl-card-title>\\r\\n        <mdl-list>\\r\\n          <mdl-list-item *ngFor=\\\"let ssd of specifications[currentMachine].ssd\\\">\\r\\n            <mdl-list-item-primary-content>\\r\\n              <mdl-list-item-text-body>{{ssd}} cm</mdl-list-item-text-body>\\r\\n            </mdl-list-item-primary-content>\\r\\n            <mdl-list-item-secondary-action>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>done</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>edit</mdl-icon>       \\r\\n              </button>\\r\\n              <button\\r\\n                mdl-button\\r\\n                mdl-button-type=\\\"icon\\\"\\r\\n                mdl-ripple\\r\\n                [disabled]=\\\"true\\\"\\r\\n                (click)=\\\"null\\\"><mdl-icon>delete</mdl-icon>       \\r\\n              </button>\\r\\n            </mdl-list-item-secondary-action>\\r\\n          </mdl-list-item>\\r\\n        </mdl-list>\\r\\n\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <mdl-textfield\\r\\n          type=\\\"text\\\"\\r\\n          label=\\\"New SSD (cm)\\\"\\r\\n          [(ngModel)]=\\\"newSSD\\\"\\r\\n          (input)=\\\"checkNewSSDInput()\\\"\\r\\n          (keyup.enter)=\\\"addSSD()\\\"\\r\\n          angulartics2On=\\\"keyup.enter\\\" angularticsEvent=\\\"Specifications | Enter press | Add ssd\\\"\\r\\n          floating-label\\r\\n          style=\\\"width:70%\\\"></mdl-textfield>\\r\\n        <button \\r\\n          [disabled]=\\\"!newSSDValid\\\" \\r\\n          mdl-button \\r\\n          angulartics2On=\\\"click\\\" angularticsEvent=\\\"Specifications | Button click | Add ssd\\\"\\r\\n          mdl-button-type=\\\"mini-fab\\\"\\r\\n          (click)=\\\"addSSD()\\\">\\r\\n          <mdl-icon>add</mdl-icon>\\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n    </mdl-card>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col mdl-cell--8-col-tablet mdl-cell--6-col-phone\\\">\\r\\n    <h5>Raw specification data editing (optional)</h5>\\r\\n    <p>\\r\\n      If you desire you may edit the raw machine specifications in its raw format below. \\r\\n      Currently error checking on this raw input is not implemented.\\r\\n      Incorrectly editing the data below may cause the web app not to function.\\r\\n      Input data above to determine the data structure required.</p>\\r\\n    <my-json-edit\\r\\n      [input]=\\\"specifications\\\"\\r\\n      (inputUpdated)=\\\"changeSpecifications($event)\\\"\\r\\n      buttonText=\\\"Update Specifications\\\">\\r\\n    </my-json-edit>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/specifications.component.html\n ** module id = 80\n ** module chunks = 0\n **/","import { Component, OnInit, ApplicationRef, ViewChild } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Coordinates } from './coordinates'\r\nimport { Parameterisation } from './parameterisation';\r\nimport { InsertData } from './insert-data';\r\n\r\nimport { TitleService } from './title.service';\r\n\r\nimport { safeLoad } from 'js-yaml';\r\n\r\ndeclare var Module: any;\r\ndeclare var FS: any;\r\n\r\n// declare var yaml: any;\r\n// declare var pypyjs: any;\r\n\r\n@Component({\r\n  selector: 'my-dicom',\r\n  template: require('./dicom.component.html'),\r\n  styles: ['./dicom.component.css']\r\n})\r\nexport class DicomComponent implements OnInit {\r\n  parameterisation: Parameterisation = {\r\n    insert: {\r\n      x: [0],\r\n      y: [0]\r\n    },\r\n    width: null,\r\n    length: null,\r\n    circle: null,\r\n    ellipse: null\r\n  };\r\n\r\n  insertData: InsertData = {\r\n    machine: null,\r\n    parameterisation: this.parameterisation,\r\n    energy: null,\r\n    applicator: null,\r\n    ssd: null,\r\n    factor: null\r\n  }\r\n\r\n  dicomWarning: string;\r\n  dicomExitCode = 1;\r\n\r\n  insertList: any[];\r\n\r\n  reader = new FileReader();\r\n\r\n  constructor(\r\n    private myTitleService: TitleService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  @ViewChild('dicomOutput') dicomOutputDir: any;\r\n  @ViewChild('getBlockDataButton') getBlockDataButton: any;\r\n\r\n\r\n  ngOnInit() {\r\n    window['dicomData'] = ' ';\r\n\r\n    this.reader.onload = () => this.onceFileIsLoaded();\r\n    \r\n    let insertListString = localStorage.getItem('dicom_insertList')\r\n    if (insertListString) {\r\n      this.insertList = JSON.parse(insertListString);\r\n    }\r\n    else {\r\n      this.insertList = []\r\n    }\r\n\r\n    // localStorage.removeItem('dicomPrint');\r\n    Module.print = this.sendDicomDumpToGlobalVariable;\r\n    // Module.printErr = this.sendDicomDumpToLocalStorage;\r\n    this.myTitleService.setTitle('Dicom');\r\n\r\n    // pypyjs.exec(\"import json; print json.dumps({'hello': 'world'})\")\r\n    // pypyjs.exec(\"import dicom; print json.dumps({'hello': 'world'})\")\r\n  }\r\n\r\n  sendDicomDumpToGlobalVariable(print: any) {\r\n    window['dicomData'] = window['dicomData'] + '\\n' + print\r\n  }\r\n\r\n  updateDicomWarning() {\r\n    let status = Number(localStorage.getItem('dicomLoadStatus'));\r\n    if (status == 0) {\r\n      this.getBlockDataButton.disabled = false;\r\n      this.dicomWarning = null;\r\n    }\r\n    else {\r\n      this.getBlockDataButton.disabled = true;\r\n      this.dicomWarning = 'An error occured while trying to find the block data within the provided Dicom file.';\r\n    }\r\n  }\r\n\r\n  onceFileIsLoaded() {\r\n    let content = new Int8Array(this.reader.result);\r\n    console.log(content.length);\r\n    let fileName = 'dicomfile';\r\n\r\n    if (FS.isFile(fileName)) {\r\n      FS.unlink(fileName);\r\n    }\r\n    FS.writeFile(fileName, content, {encoding: \"binary\"});\r\n\r\n    let exit_orig = Module.exit;    \r\n    Module.exit = (status: any) => {\r\n      localStorage.setItem('dicomLoadStatus', status);\r\n      exit_orig(status);\r\n    }\r\n    Module.callMain(['dcmdump', fileName, '--print-all']);\r\n\r\n    Module.exit = exit_orig;\r\n\r\n    console.log(Module)\r\n\r\n    this.updateDicomWarning()\r\n    FS.unlink(fileName);\r\n  }\r\n\r\n  openFile(event: any) {\r\n\r\n    if (typeof event.target !== 'undefined') {\r\n      console.log(event.target.files);\r\n      let file = event.target.files[0];\r\n\r\n      window['dicomData'] = ' '\r\n\r\n      this.reader.readAsArrayBuffer(file);\r\n    }\r\n    else {\r\n      console.log(event);\r\n    }\r\n\r\n  }\r\n\r\n  convertDicomDumpToDict(dump: string) {\r\n    let yamlConvert = dump.replace(/\\s*#[^#\\n]*\\n/g,'\\n');\r\n    yamlConvert = yamlConvert.replace(/\\s*#[^#\\n]*$/g,'');\r\n    yamlConvert = yamlConvert.replace(/^\\n*/,'');\r\n    yamlConvert = yamlConvert.replace(/(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\))/g,'$1:')\r\n    yamlConvert = yamlConvert.replace(\r\n      /(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) SQ \\(Sequence with undefined length #=\\d+\\)/g,\r\n      '$1')\r\n    yamlConvert = yamlConvert.replace(\r\n      /(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) na \\(Item with undefined length #=\\d+\\)/g,\r\n      '$1')\r\n    yamlConvert = yamlConvert.replace(\r\n      / *\\(fffe,e00d\\): na \\(ItemDelimitationItem\\) *\\n/g,\r\n      '')\r\n    yamlConvert = yamlConvert.replace(\r\n      / *\\(fffe,e0dd\\): na \\(SequenceDelimitationItem\\)\\n/g,\r\n      '')\r\n    yamlConvert = yamlConvert.replace(\r\n      /(\\([0-9a-f][0-9a-f][0-9a-f][0-9a-f],[0-9a-f][0-9a-f][0-9a-f][0-9a-f]\\):) (.*)/g,\r\n      '$1 \"$2\"')\r\n    yamlConvert = yamlConvert.replace(/\\\\/g, ', ')\r\n    yamlConvert = yamlConvert.replace(/\\(fffe,e000\\):/g, ' - ')\r\n\r\n    yamlConvert = safeLoad(yamlConvert);\r\n\r\n    return yamlConvert;\r\n  }\r\n\r\n  convertBlockDataToCoords(blockData: string): Coordinates {\r\n    let listString = /\\[[, \\d\\.-]*\\]/.exec(blockData).toString();\r\n\r\n    let parsedData = JSON.parse('{ \"data\": ' + listString + '}');\r\n\r\n    let x: number[] = [];\r\n    let y: number[] = [];\r\n    let i = 0;\r\n    for (let num of parsedData['data']) {\r\n      if (i % 2 == 0) {\r\n        x.push(parseFloat((num / 10).toFixed(2)));\r\n      }\r\n      else {\r\n        y.push(parseFloat((num / 10).toFixed(2)));\r\n      }\r\n      i++;\r\n    }\r\n    let insert = {\r\n      \"x\": x,\r\n      \"y\": y\r\n    };\r\n\r\n    return insert;\r\n  }\r\n\r\n  dicomPullNumber(input: string): number {\r\n    return Number(input.replace(/.*\\[([\\d\\.-]*)\\].*/, \"$1\"));\r\n  }\r\n\r\n  dicomPullString(input: string): string {\r\n    return input.replace(/.*\\[(.*)\\].*/, \"$1\");\r\n  }\r\n\r\n  getBlockData() {\r\n    let dicomPrint = window['dicomData'];\r\n    let dicomDict = this.convertDicomDumpToDict(dicomPrint);\r\n\r\n    // console.log(dicomDict)\r\n\r\n    this.insertList = [];\r\n\r\n    let beamSequence = dicomDict[\"(300a,00b0)\"];\r\n    for (let beam of beamSequence) {\r\n      let temp = beam[\"(300a,00f4)\"]\r\n\r\n      if (temp != undefined) {\r\n        let blockData = beam[\"(300a,00f4)\"][0][\"(300a,0106)\"];\r\n        let coordinates = this.convertBlockDataToCoords(blockData);\r\n\r\n        let applicator = <string> null\r\n        try {\r\n          applicator = this.dicomPullString(\r\n            beam[\"(300a,0107)\"][0][\"(300a,0108)\"]);\r\n        }\r\n        catch(err) {\r\n          applicator = null\r\n          console.log(err)\r\n        }\r\n\r\n        let energy = <number> null\r\n        try {\r\n          energy = this.dicomPullNumber(\r\n            beam[\"(300a,0111)\"][0][\"(300a,0114)\"]);\r\n        }\r\n        catch(err) {\r\n          energy = null\r\n          console.log(err)\r\n        }\r\n\r\n        let ssd = <number> null\r\n        try {\r\n          ssd = this.dicomPullNumber(\r\n            beam[\"(300a,0111)\"][0][\"(300a,0130)\"]) / 10;\r\n        }\r\n        catch(err) {\r\n          ssd = null\r\n          console.log(err)\r\n        }\r\n        \r\n        let machine = <string> null\r\n        try {\r\n          machine = this.dicomPullString(\r\n          beam[\"(300a,00b2)\"]);\r\n        }\r\n        catch(err) {\r\n          machine = null\r\n          console.log(err)\r\n        }\r\n\r\n        let insert = {\r\n          \"machine\": machine,\r\n          \"coordinates\": coordinates,\r\n          \"applicator\": applicator.toLowerCase(),\r\n          \"energy\": energy,\r\n          \"ssd\": ssd\r\n        }\r\n        this.insertList.push(insert)\r\n      }\r\n\r\n    }\r\n    localStorage.setItem('dicom_insertList', JSON.stringify(this.insertList));\r\n  }\r\n\r\n  sendToParameterisation(insert: any) {\r\n    this.insertUpdated(insert['coordinates']);    \r\n\r\n    this.insertData['machine'] = insert['machine'];\r\n    this.insertData['parameterisation'] = this.parameterisation\r\n    this.insertData['energy'] = insert['energy'];\r\n    this.insertData['applicator'] = insert['applicator'];\r\n    this.insertData['ssd'] = insert['ssd'];\r\n\r\n    localStorage.setItem(\r\n      \"last_insertData\", JSON.stringify(this.insertData)\r\n    );\r\n\r\n    this.router.navigate([\"/parameterise\"])\r\n  }\r\n\r\n  parameterisationFromLocalStorage(localStorageParameterisationString: string) {\r\n    let localStorageParameterisation = JSON.parse(localStorageParameterisationString); \r\n    this.parameterisation.insert = localStorageParameterisation['insert'];\r\n    this.parameterisation.width = localStorageParameterisation['width'];\r\n    this.parameterisation.length = localStorageParameterisation['length'];\r\n    this.parameterisation.circle = localStorageParameterisation['circle'];\r\n    this.parameterisation.ellipse = localStorageParameterisation['ellipse'];\r\n  }\r\n\r\n  insertUpdated(insert: any) {\r\n    let localStorageParameterisation = localStorage.getItem(JSON.stringify(insert))\r\n    if (localStorageParameterisation) {\r\n      this.parameterisationFromLocalStorage(localStorageParameterisation);\r\n    }\r\n    else {\r\n      this.parameterisation.insert = insert;\r\n      this.parameterisation.width = null;\r\n      this.parameterisation.length = null;\r\n      this.parameterisation.circle = null;\r\n      this.parameterisation.ellipse = null;\r\n    }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/dicom.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    <h5>Locally reading Dicom patient plan files</h5>\\r\\n    <p>\\r\\n      Use this component to read a dicom patient plan file and extract the electron insert shape. \\r\\n      Export a dicom patient plan file that containts an electron plan from your planning system then open it using the file input box below.\\r\\n    </p>\\r\\n    <p>\\r\\n      For testing purposes you can download a demo dicom file from <a href=\\\"/30x16x30_RandomElectronShapes.dcm\\\">here</a>.\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <input type='file' (change)='openFile($event)'>\\r\\n    <div *ngIf=\\\"dicomWarning\\\">{{dicomWarning}}</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <button #getBlockDataButton\\r\\n      mdl-button mdl-button-type=\\\"raised\\\" \\r\\n      mdl-colored=\\\"primary\\\" \\r\\n      mdl-ripple\\r\\n      [disabled]=\\\"true\\\"\\r\\n      (click)=\\\"getBlockData()\\\">Get Dicom Insert Data\\r\\n    </button>\\r\\n\\r\\n    \\r\\n  </div>\\r\\n\\r\\n  <div *ngFor=\\\"let insert of insertList\\\" class=\\\"mdl-cell mdl-cell--6-col\\\">\\r\\n    <mdl-card mdl-shadow=\\\"6\\\">\\r\\n\\r\\n\\r\\n      <my-send-to-parameterisation\\r\\n        [machine]=insert.machine\\r\\n        [coordinates]=insert.coordinates\\r\\n        [applicator]=insert.applicator\\r\\n        [ssd]=insert.ssd\\r\\n        [energy]=insert.energy>\\r\\n      </my-send-to-parameterisation>\\r\\n\\r\\n      <mdl-card-actions mdl-card-border>\\r\\n        <button\\r\\n          mdl-button \\r\\n          mdl-ripple\\r\\n          (click)=\\\"sendToParameterisation(insert)\\\">Send to parameterisation           \\r\\n        </button>\\r\\n      </mdl-card-actions>\\r\\n    </mdl-card>\\r\\n    \\r\\n\\r\\n\\r\\n    <!--<p>{{insert | json}}</p>-->\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    <h5>Further information</h5>\\r\\n    <p>This Dicom loader does not send the Dicom file off to a server. The entire reading of the dicom file is done within javascript.\\r\\n    You can confirm this yourself by using the chrome web browser, pressing 'Ctrl + Shift + I'\\r\\n    and then clicking on the network tab. When the file is chosen, then the block data is pulled and sent to parameterisation,\\r\\n    at no point in this interaction is there network traffic.</p>\\r\\n\\r\\n    <p>The only data that will be sent to the server will be on either the paremeterisation tab or the model tab, and this data will\\r\\n      just consist of x and y coordinates or widths, lengths, and factors.\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/dicom.component.html\n ** module id = 117\n ** module chunks = 0\n **/","\"use strict\";\nvar core_1 = require('@angular/core');\nvar angulartics2_1 = require('../core/angulartics2');\nvar Angulartics2GoogleAnalytics = (function () {\n    function Angulartics2GoogleAnalytics(angulartics2) {\n        var _this = this;\n        this.angulartics2 = angulartics2;\n        this.angulartics2.settings.pageTracking.trackRelativePath = true;\n        this.angulartics2.settings.ga = {\n            additionalAccountNames: [],\n            userId: null\n        };\n        this.angulartics2.pageTrack.subscribe(function (x) { return _this.pageTrack(x.path); });\n        this.angulartics2.eventTrack.subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });\n        this.angulartics2.exceptionTrack.subscribe(function (x) { return _this.exceptionTrack(x); });\n        this.angulartics2.setUsername.subscribe(function (x) { return _this.setUsername(x); });\n        this.angulartics2.setUserProperties.subscribe(function (x) { return _this.setUserProperties(x); });\n        this.angulartics2.userTimings.subscribe(function (x) { return _this.userTimings(x); });\n    }\n    Angulartics2GoogleAnalytics.prototype.pageTrack = function (path) {\n        if (typeof _gaq !== 'undefined' && _gaq) {\n            _gaq.push(['_trackPageview', path]);\n            for (var _i = 0, _a = this.angulartics2.settings.ga.additionalAccountNames; _i < _a.length; _i++) {\n                var accountName = _a[_i];\n                _gaq.push([accountName + '._trackPageview', path]);\n            }\n            ;\n        }\n        if (typeof ga !== 'undefined' && ga) {\n            if (this.angulartics2.settings.ga.userId) {\n                ga('set', '&uid', this.angulartics2.settings.ga.userId);\n            }\n            ga('send', 'pageview', path);\n            for (var _b = 0, _c = this.angulartics2.settings.ga.additionalAccountNames; _b < _c.length; _b++) {\n                var accountName = _c[_b];\n                ga(accountName + '.send', 'pageview', path);\n            }\n            ;\n        }\n    };\n    Angulartics2GoogleAnalytics.prototype.eventTrack = function (action, properties) {\n        if (!properties || !properties.category) {\n            properties = properties || {};\n            properties.category = 'Event';\n        }\n        if (properties.value) {\n            var parsed = parseInt(properties.value, 10);\n            properties.value = isNaN(parsed) ? 0 : parsed;\n        }\n        if (ga) {\n            var eventOptions = {\n                eventCategory: properties.category,\n                eventAction: action,\n                eventLabel: properties.label,\n                eventValue: properties.value,\n                nonInteraction: properties.noninteraction,\n                page: properties.page || location.hash.substring(1) || location.pathname,\n                userId: this.angulartics2.settings.ga.userId\n            };\n            this.setDimensionsAndMetrics(properties);\n            if (this.angulartics2.settings.ga.transport) {\n                ga('send', 'event', eventOptions, { transport: this.angulartics2.settings.ga.transport });\n            }\n            else {\n                ga('send', 'event', eventOptions);\n            }\n            for (var _i = 0, _a = this.angulartics2.settings.ga.additionalAccountNames; _i < _a.length; _i++) {\n                var accountName = _a[_i];\n                ga(accountName + '.send', 'event', eventOptions);\n            }\n        }\n        else if (_gaq) {\n            _gaq.push(['_trackEvent', properties.category, action, properties.label, properties.value, properties.noninteraction]);\n        }\n    };\n    Angulartics2GoogleAnalytics.prototype.exceptionTrack = function (properties) {\n        if (!properties || !properties.appId || !properties.appName || !properties.appVersion) {\n            console.error('Must be setted appId, appName and appVersion.');\n            return;\n        }\n        if (properties.fatal === undefined) {\n            console.log('No \"fatal\" provided, sending with fatal=true');\n            properties.exFatal = true;\n        }\n        properties.exDescription = properties.description;\n        ga('send', 'exception', properties);\n    };\n    Angulartics2GoogleAnalytics.prototype.setUsername = function (userId) {\n        this.angulartics2.settings.ga.userId = userId;\n    };\n    Angulartics2GoogleAnalytics.prototype.setUserProperties = function (properties) {\n        this.setDimensionsAndMetrics(properties);\n    };\n    Angulartics2GoogleAnalytics.prototype.userTimings = function (properties) {\n        if (!properties || !properties.timingCategory || !properties.timingVar || !properties.timingValue) {\n            console.error('Properties timingCategory, timingVar, and timingValue are required to be set.');\n            return;\n        }\n        if (ga) {\n            ga('send', 'timing', properties);\n        }\n    };\n    Angulartics2GoogleAnalytics.prototype.setDimensionsAndMetrics = function (properties) {\n        if (ga) {\n            for (var idx = 1; idx <= 200; idx++) {\n                if (properties['dimension' + idx.toString()]) {\n                    ga('set', 'dimension' + idx.toString(), properties['dimension' + idx.toString()]);\n                }\n                if (properties['metric' + idx.toString()]) {\n                    ga('set', 'metric' + idx.toString(), properties['metric' + idx.toString()]);\n                }\n            }\n        }\n    };\n    Angulartics2GoogleAnalytics.decorators = [\n        { type: core_1.Injectable },\n    ];\n    Angulartics2GoogleAnalytics.ctorParameters = [\n        { type: angulartics2_1.Angulartics2, },\n    ];\n    return Angulartics2GoogleAnalytics;\n}());\nexports.Angulartics2GoogleAnalytics = Angulartics2GoogleAnalytics;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angulartics2/src/providers/angulartics2-google-analytics.js\n ** module id = 118\n ** module chunks = 0\n **/","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Angulartics2 } from 'angulartics2';\r\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/src/providers/angulartics2-google-analytics';\r\n\r\nimport { ElectronApiService } from './electron-api.service';\r\nimport { TitleService } from './title.service';\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  template: require('./app.component.html'),\r\n})\r\nexport class AppComponent implements OnInit {\r\n  pageTitle: string;\r\n\r\n  constructor(\r\n    private electronApiService: ElectronApiService,\r\n    private myTitleService: TitleService,\r\n    private router: Router,\r\n    private title:Title,\r\n    angulartics2: Angulartics2, \r\n    angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics\r\n  ) { \r\n    router.events\r\n      .filter(event => event instanceof NavigationEnd)\r\n      .subscribe(() => {\r\n        this.pageTitle = this.myTitleService.getTitle();\r\n        this.title.setTitle(\r\n          this.myTitleService.getTitle() + \r\n          ' | Electron Insert Factor Modelling');\r\n      })\r\n  }\r\n\r\n  ngOnInit() {\r\n    let redirect = sessionStorage['redirect'];\r\n    delete sessionStorage['redirect'];\r\n    if (redirect && redirect != location.href) {\r\n      history.replaceState(null, null, redirect);\r\n      this.router.navigate([redirect])\r\n    }\r\n    \r\n    this.electronApiService.wakeUpServer();\r\n\r\n    this.pageTitle = this.myTitleService.getTitle();\r\n    this.title.setTitle(\r\n      this.myTitleService.getTitle() + \r\n      ' | Electron Insert Factor Modelling');\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/app.component.ts\n **/","module.exports = \"\\r\\n<!--<md-sidenav-layout>\\r\\n\\r\\n  <md-sidenav #sidenav mode=\\\"side\\\" class=\\\"app-sidenav\\\">\\r\\n    <nav class=\\\"mdl-navigation\\\">\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" href>Home</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/export-import\\\" routerLinkActive=\\\"active\\\" href>Export / Import</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\" href>Machine specifications</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\" href>Dicom shape extraction</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\" href>Parameterise inserts</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/model\\\" routerLinkActive=\\\"active\\\" href>Model insert factors</a>\\r\\n    </nav>\\r\\n  </md-sidenav>\\r\\n\\r\\n  <md-toolbar color=\\\"primary\\\">\\r\\n    <button class=\\\"app-icon-button\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n      <i class=\\\"material-icons app-toolbar-menu\\\">menu</i>\\r\\n    </button>\\r\\n\\r\\n    {{pageTitle}}\\r\\n\\r\\n    <span class=\\\"app-toolbar-filler\\\"></span>\\r\\n    <button md-button (click)=\\\"isDarkTheme = !isDarkTheme\\\">TOGGLE DARK THEME</button>\\r\\n  </md-toolbar>\\r\\n\\r\\n  <div class=\\\"app-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</md-sidenav-layout>-->\\r\\n\\r\\n\\r\\n<mdl-layout mdl-layout-fixed-drawer mdl-layout-fixed-header>\\r\\n  <mdl-layout-header>\\r\\n    <mdl-layout-header-row>\\r\\n      <mdl-layout-title>{{pageTitle}}</mdl-layout-title>\\r\\n    </mdl-layout-header-row>\\r\\n  </mdl-layout-header>\\r\\n  <mdl-layout-drawer>\\r\\n    <mdl-layout-title>Electron Factors</mdl-layout-title>\\r\\n    <nav class=\\\"mdl-navigation\\\">\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" href>Home</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\" href>Machine specifications</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/dicom\\\" routerLinkActive=\\\"active\\\" href>Dicom shape extraction</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/parameterise\\\" routerLinkActive=\\\"active\\\" href>Parameterise inserts</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/create-model\\\" routerLinkActive=\\\"active\\\" href>Create electron model</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/use-model\\\" routerLinkActive=\\\"active\\\" href>Use electron model</a>\\r\\n      <a class=\\\"mdl-navigation__link\\\" routerLink=\\\"/storage\\\" routerLinkActive=\\\"active\\\" href>Storage management</a>\\r\\n    </nav>\\r\\n  </mdl-layout-drawer>\\r\\n  <mdl-layout-content>\\r\\n\\r\\n    <router-outlet></router-outlet>\\r\\n\\r\\n  </mdl-layout-content>\\r\\n</mdl-layout>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.html\n ** module id = 184\n ** module chunks = 0\n **/","import { Component, Input, OnChanges, ViewChild, AfterViewInit } from '@angular/core';\r\n\r\nimport { Coordinates } from './coordinates';\r\n\r\ndeclare var Bokeh: any;\r\n\r\n@Component({\r\n  selector: 'my-plot',\r\n  template: require('./bokeh-plot.html')\r\n})\r\nexport class PlotComponent implements OnChanges, AfterViewInit {\r\n  @Input()\r\n  insert_x: number[] = null\r\n  @Input()\r\n  insert_y: number[] = null\r\n  @Input()\r\n  circle: Coordinates = null;\r\n  @Input()\r\n  ellipse: Coordinates = null;\r\n  @Input()\r\n  enabled: boolean = true;\r\n  @Input()\r\n  plot_width: number = 300;\r\n  @Input()\r\n  plot_height: number = 300;\r\n\r\n  parsedJSON: any;\r\n  tempSource: any;\r\n  jsonValid: boolean = true;\r\n  jsonErrorMessage: string;\r\n\r\n  @ViewChild('bokehplot') bokehplot: any;\r\n\r\n  plt = Bokeh.Plotting;\r\n  tools = 'pan,crosshair,wheel_zoom,box_zoom,reset,save';\r\n\r\n  xrange = Bokeh.Range1d(-6, 6);\r\n  yrange = Bokeh.Range1d(-6, 6);\r\n  \r\n  fig = this.plt.figure({\r\n    title: 'Electron Insert Plot', tools: this.tools,\r\n    x_range: this.xrange, y_range: this.yrange,\r\n    plot_width: 300, plot_height: 300\r\n  });\r\n\r\n  source = new Bokeh.ColumnDataSource();\r\n  doc = new Bokeh.Document();\r\n\r\n\r\n  ngOnChanges() {\r\n    this.jsonValid = false;\r\n    this.tempSource = {\r\n      \"xs\": [[0], [0], [0]],\r\n      \"ys\": [[0], [0], [0]],\r\n      \"colour\": [\"navy\", \"firebrick\", \"green\"]\r\n    }\r\n    let xAll: number[] = [];\r\n    let yAll: number[] = [];\r\n    if (this.enabled) {\r\n      if (this.insert_x != null && this.insert_y != null) {\r\n        this.tempSource.xs[0] = this.insert_x.concat(this.insert_x[0]);\r\n        this.tempSource.ys[0] = this.insert_y.concat(this.insert_y[0]);\r\n        xAll = xAll.concat(this.tempSource.xs[0]);\r\n        yAll = yAll.concat(this.tempSource.ys[0]);\r\n      }\r\n\r\n\r\n      if (this.circle) {\r\n        if ('x' in this.circle && 'y' in this.circle) {\r\n          this.tempSource.xs[1] = this.circle.x\r\n          this.tempSource.ys[1] = this.circle.y\r\n          xAll = xAll.concat(this.tempSource.xs[1]);\r\n          yAll = yAll.concat(this.tempSource.ys[1]);\r\n        }\r\n      }\r\n      if (this.ellipse) {\r\n        if ('x' in this.ellipse && 'y' in this.ellipse) {\r\n          this.tempSource.xs[2] = this.ellipse.x\r\n          this.tempSource.ys[2] = this.ellipse.y\r\n          xAll = xAll.concat(this.tempSource.xs[2]);\r\n          yAll = yAll.concat(this.tempSource.ys[2]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let xMax = Math.max(...xAll);\r\n    let xMin = Math.min(...xAll);\r\n    let yMax = Math.max(...yAll);\r\n    let yMin = Math.min(...yAll);\r\n\r\n    let range = Math.max(xMax - xMin, yMax - yMin) * 1.1;\r\n    let sqXMax = (xMax + xMin) / 2 + range / 2\r\n    let sqXMin = (xMax + xMin) / 2 - range / 2\r\n    let sqYMax = (yMax + yMin) / 2 + range / 2\r\n    let sqYMin = (yMax + yMin) / 2 - range / 2\r\n\r\n\r\n\r\n    this.fig.attributes.x_range.start = sqXMin;\r\n    this.fig.attributes.x_range.end = sqXMax;\r\n    this.fig.attributes.y_range.start = sqYMin;\r\n    this.fig.attributes.y_range.end = sqYMax;\r\n    // this.fig.update_range();\r\n    // console.log(this.fig);\r\n\r\n    this.source.data = this.tempSource;\r\n\r\n    \r\n    \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // this.ngOnChanges();\r\n    this.fig.multi_line({ field: 'xs' }, { field: 'ys' }, {\r\n      source: this.source,\r\n      line_width: 2,\r\n      color: { field: 'colour' }\r\n    });\r\n\r\n    this.doc.add_root(this.fig);\r\n    Bokeh.embed.add_document_standalone(\r\n      this.doc, this.bokehplot.nativeElement);\r\n    \r\n\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/plot.component.ts\n **/","export class Coordinates {\r\n\r\n  constructor(\r\n    public x: number[],\r\n    public y: number[]\r\n  ) { }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/coordinates.ts\n **/","module.exports = \"<div \\r\\n    class=\\\"bk-root\\\" \\r\\n    [style.width]=\\\"plot_width + 'px'\\\" \\r\\n    [style.height]=\\\"plot_height + 'px'\\\">\\r\\n  <div #bokehplot></div>\\r\\n</div>\\r\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/bokeh-plot.html\n ** module id = 187\n ** module chunks = 0\n **/","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\n\r\nimport { MdlDefaultTableModel } from 'angular2-mdl';\r\n\r\n@Component({\r\n  selector: 'my-width-length-table',\r\n  template: require('./width-length-table.component.html'),\r\n})\r\nexport class WidthLengthTableComponent implements OnInit {\r\n  @Input()\r\n  width: number;\r\n  @Input()\r\n  length: number;\r\n  @Input()\r\n  enabled: boolean;\r\n\r\n  tableData:[any] = [\r\n      {width:null, length:null}\r\n  ];\r\n\r\n  public tableModel = new MdlDefaultTableModel([\r\n        {key:'width', name:'Width', sortable:true, numeric:true},\r\n        {key:'length', name:'Length', sortable:true, numeric:true}\r\n      ]);\r\n\r\n  ngOnChanges() {\r\n    if (this.enabled) {\r\n      this.tableData[0].width = this.width;\r\n      this.tableData[0].length = this.length;\r\n    }\r\n    else {\r\n      this.tableData[0].width = null;\r\n      this.tableData[0].length = null;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.tableModel.addAll(this.tableData);\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/width-length-table.component.ts\n **/","module.exports = \"<mdl-table mdl-shadow=\\\"2\\\"\\r\\n  [table-model]=\\\"tableModel\\\">\\r\\n</mdl-table>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/width-length-table.component.html\n ** module id = 189\n ** module chunks = 0\n **/","import { Component, Input, Output, OnChanges, EventEmitter, ViewChild } from '@angular/core';\r\n\r\nimport { MyJsonPipe } from './my-json.pipe'\r\n\r\nimport { Coordinates } from './coordinates';\r\n\r\n\r\n@Component({\r\n  selector: 'my-json-input',\r\n  template: require('./json-input.component.html'),\r\n})\r\nexport class JsonInputComponent implements OnChanges {\r\n  @Input()\r\n  insert: Coordinates;\r\n  @Input()\r\n  jsonDisabled: boolean;\r\n  @Input()\r\n  refresh: boolean;\r\n  @Output()\r\n  insertUpdated = new EventEmitter();\r\n  @Output()\r\n  jsonStatus = new EventEmitter();\r\n\r\n  jsonValid: boolean = true;\r\n  jsonErrorMessage: string;\r\n\r\n  @ViewChild('jsonInput') jsonInputDir: any;\r\n\r\n  onInput(jsonInput: string) {\r\n    this.parseAndCheckJSON(jsonInput) \r\n    this.insertUpdated.emit(this.insert);\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.refresh) {\r\n      this.jsonInputDir.value = new MyJsonPipe().transform(this.insert);      \r\n      this.parseAndCheckJSON(this.jsonInputDir.value);\r\n      this.refresh = false;\r\n    }\r\n  }\r\n\r\n  parseAndCheckJSON(jsonInput:string) {\r\n    let oldJsonValid = this.jsonValid;\r\n    this.jsonValid = false;\r\n    try {\r\n      let parsedJSON = JSON.parse(jsonInput);\r\n      if ('x' in parsedJSON && 'y' in parsedJSON) {\r\n        if (parsedJSON.x.length === parsedJSON.y.length) {\r\n          let x: [number] = parsedJSON.x\r\n          let y: [number] = parsedJSON.y\r\n          let insert = {\r\n            x: x,\r\n            y: y\r\n          }\r\n          this.insert = insert\r\n          this.jsonValid = true;\r\n        }\r\n        else {\r\n          this.jsonErrorMessage = 'The length of x doesn\\'t match the length of y.';\r\n        }\r\n      }\r\n      else {\r\n        this.jsonErrorMessage = 'Either x or y is missing.';\r\n      }\r\n    }\r\n    catch(err) {\r\n      this.jsonErrorMessage = 'Error in JSON input. ' + err ;\r\n    }\r\n    finally {\r\n      if (this.jsonValid != oldJsonValid) {\r\n        this.jsonStatus.emit(this.jsonValid)\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/json-input.component.ts\n **/","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'myJson', pure: false})\r\nexport class MyJsonPipe implements PipeTransform {\r\n  transform(input: {}): string {\r\n    let jsonText = JSON.stringify(input, null, 4)\r\n    jsonText = jsonText.replace(/(-?\\d+(\\.\\d+)?),\\n\\s*/g, \"$1, \");\r\n    jsonText = jsonText.replace(/null,\\n\\s*/g, \"null, \");\r\n    // jsonText = jsonText.replace(/:/g, \":\\n\");\r\n    return jsonText\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/my-json.pipe.ts\n **/","module.exports = \"<mdl-textfield #jsonInput\\r\\n  [value]=\\\"insert | myJson\\\"\\r\\n  (input)=\\\"onInput($event.target.value)\\\"\\r\\n  rows=\\\"12\\\" \\r\\n  style=\\\"width:100%\\\"\\r\\n  [disabled]=jsonDisabled>\\r\\n</mdl-textfield>\\r\\n<div *ngIf=\\\"!jsonValid\\\">\\r\\n  {{jsonErrorMessage}}\\r\\n</div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/json-input.component.html\n ** module id = 192\n ** module chunks = 0\n **/","import { Component, Input, Output, OnChanges, EventEmitter, ViewChild, OnInit } from '@angular/core';\r\n\r\nimport { MyJsonPipe } from './my-json.pipe'\r\nimport { JsonPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'my-json-edit',\r\n  template: require('./json-edit.component.html'),\r\n})\r\nexport class JsonEditComponent implements OnInit {\r\n  @Input()\r\n  input: {};\r\n  @Input()\r\n  buttonText: string = \"Button\";\r\n  @Output()\r\n  inputUpdated = new EventEmitter();\r\n  @Input()\r\n  validationCheck: Function = (parsedJSON: {}) => {};\r\n  @Input()\r\n  useMyJsonPipe: boolean = false;\r\n\r\n  editedInput: {};\r\n\r\n  lines: number = 10;\r\n\r\n  jsonValid: boolean = true;\r\n  jsonErrorMessage: string;\r\n\r\n  @ViewChild('jsonInput') jsonInputDir: any;\r\n\r\n  onInput(jsonInput: string) {\r\n    this.parseAndCheckJSON(jsonInput)\r\n  }\r\n\r\n  ngOnInit() {\r\n    let value = \"\";\r\n    if (this.useMyJsonPipe) {\r\n       value = new MyJsonPipe().transform(this.input); \r\n    }\r\n    else {\r\n      value = new JsonPipe().transform(this.input);\r\n    }     \r\n    this.lines = value.split(/\\r\\n|\\r|\\n/).length;    \r\n    this.editedInput = this.input;\r\n  }\r\n\r\n  updateInput() {\r\n    this.input = this.editedInput \r\n    this.inputUpdated.emit(this.input);\r\n  }\r\n\r\n  parseAndCheckJSON(jsonInput:string) {\r\n    let oldJsonValid = this.jsonValid;\r\n    this.jsonValid = false;\r\n    try {\r\n      let parsedJSON = JSON.parse(jsonInput);\r\n      this.validationCheck(parsedJSON);\r\n      this.editedInput = parsedJSON;\r\n      this.jsonValid = true;\r\n    }\r\n    catch(err) {\r\n      this.jsonErrorMessage = 'Error in JSON input. ' + err ;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/json-edit.component.ts\n **/","module.exports = \"<button\\r\\n  mdl-button mdl-button-type=\\\"raised\\\" \\r\\n  mdl-colored=\\\"primary\\\" \\r\\n  mdl-ripple\\r\\n  [disabled]=\\\"!jsonValid || input==editedInput\\\"\\r\\n  (click)=\\\"updateInput()\\\">{{buttonText}} \\r\\n</button>\\r\\n<div *ngIf=\\\"!jsonValid\\\">\\r\\n  {{jsonErrorMessage}}\\r\\n</div>\\r\\n<mdl-textfield *ngIf=\\\"!useMyJsonPipe\\\" #jsonInput\\r\\n  [value]=\\\"input | json\\\"\\r\\n  (input)=\\\"onInput($event.target.value)\\\"\\r\\n  [rows]=\\\"20\\\" \\r\\n  style=\\\"width:100%\\\">\\r\\n</mdl-textfield>\\r\\n<mdl-textfield *ngIf=\\\"useMyJsonPipe\\\" #jsonInput\\r\\n  [value]=\\\"input | myJson\\\"\\r\\n  (input)=\\\"onInput($event.target.value)\\\"\\r\\n  [rows]=\\\"20\\\" \\r\\n  style=\\\"width:100%\\\">\\r\\n</mdl-textfield>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/json-edit.component.html\n ** module id = 194\n ** module chunks = 0\n **/","import { Component, OnInit, Input} from '@angular/core';\r\n\r\nimport { Coordinates } from './coordinates';\r\n\r\nimport { MdlDefaultTableModel } from 'angular2-mdl';\r\n\r\n@Component({\r\n  selector: 'my-send-to-parameterisation',\r\n  template: require('./send-to-parameterisation.component.html'),\r\n})\r\nexport class SendToParameterisationComponent implements OnInit {\r\n  @Input()\r\n  applicator: string;\r\n  @Input()\r\n  machine: string;\r\n  @Input()\r\n  energy: number;\r\n  @Input()\r\n  ssd: number;\r\n  @Input()\r\n  coordinates: Coordinates;\r\n\r\n  tableData:[any] = [\r\n      {machine:null, applicator:null, energy:null, ssd:null}\r\n  ];\r\n\r\n  public tableModel = new MdlDefaultTableModel([\r\n        {key:'machine', name:'Machine', sortable:true, numeric:false},\r\n        {key:'applicator', name:'App', sortable:true, numeric:false},\r\n        {key:'energy', name:'Eng', sortable:true, numeric:true},\r\n        {key:'ssd', name:'SSD', sortable:true, numeric:true}\r\n      ]);\r\n\r\n  ngOnInit() {\r\n    this.tableData[0].machine = this.machine;\r\n    this.tableData[0].applicator = this.applicator;\r\n    this.tableData[0].energy = this.energy;\r\n    this.tableData[0].ssd = this.ssd;\r\n    this.tableModel.addAll(this.tableData);\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/send-to-parameterisation.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    <my-plot \\r\\n      [insert_x]=\\\"coordinates.x\\\"\\r\\n      [insert_y]=\\\"coordinates.y\\\">\\r\\n    </my-plot>\\r\\n  </div>\\r\\n  <div class=\\\"mdl-cell mdl-cell--12-col\\\">\\r\\n    <mdl-table mdl-shadow=\\\"2\\\"\\r\\n      [table-model]=\\\"tableModel\\\">\\r\\n    </mdl-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/send-to-parameterisation.component.html\n ** module id = 196\n ** module chunks = 0\n **/","import { Component, Input, OnChanges, ViewChild, AfterViewInit, OnInit } from '@angular/core';\r\n\r\nimport { BokehPcolour } from './bokeh-pcolour'\r\n\r\ndeclare var Bokeh: any;\r\n\r\n@Component({\r\n  selector: 'my-bokeh-create-model',\r\n  template: require('./bokeh-plot.html')\r\n})\r\nexport class BokehCreateModelComponent extends BokehPcolour implements AfterViewInit, OnChanges {\r\n  @Input()\r\n  title: string = \"Figure Title\";\r\n  @Input()\r\n  plot_width: number = 300;\r\n  @Input()\r\n  plot_height: number = 300;\r\n  @Input()\r\n  scatter_x: number[];\r\n  @Input()\r\n  scatter_y: number[];\r\n  @Input()\r\n  scatter_z: number[] = [0.5];\r\n  @Input()\r\n  pcolour_x: number[];\r\n  @Input()\r\n  pcolour_y: number[];\r\n  @Input()\r\n  pcolour_z: number[];\r\n  @Input()\r\n  enabled: boolean = true;\r\n\r\n  @ViewChild('bokehplot') bokehplot: any;\r\n\r\n\r\n  ngOnChanges() {\r\n    this.updateHoverData()\r\n    this.runAllUpdates()\r\n  }\r\n\r\n  updateHoverData() {\r\n    if (this.pcolour_data.x != this.pcolour_x) {\r\n      this.pcolour_hover_width = <string[]> []\r\n      for (let x of this.pcolour_x) {\r\n        this.pcolour_hover_width.push(x.toFixed(1))\r\n      }\r\n    }\r\n    if (this.pcolour_data.y != this.pcolour_y) {\r\n      this.pcolour_hover_length = <string[]> []\r\n      for (let y of this.pcolour_y) {\r\n        this.pcolour_hover_length.push(y.toFixed(1))\r\n      }\r\n    }\r\n    if (this.pcolour_data.z != this.pcolour_z) {\r\n      this.pcolour_hover_predicted_factor = <string[]> []\r\n      for (let z of this.pcolour_z) {\r\n        this.pcolour_hover_predicted_factor.push((Math.round(z*1000)/1000).toFixed(3))\r\n      }\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let hover_tool = new Bokeh.HoverTool({\r\n      tooltips: [\r\n        [\"Width\", \" @hover_width cm\"],\r\n        [\"Length\", \" @hover_length cm\"],\r\n        [\"Predicted Factor\", \" @hover_predicted_factor\"]\r\n      ],\r\n      renderers: [\r\n        this.pcolour_renderer\r\n      ]\r\n    })\r\n    this.fig.add_tools(hover_tool)\r\n\r\n    this.doc.add_root(this.fig);\r\n    Bokeh.embed.add_document_standalone(\r\n      this.doc, this.bokehplot.nativeElement); \r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/bokeh-create-model.component.ts\n **/","import { OnInit } from '@angular/core';\r\n\r\ndeclare var Bokeh: any;\r\n\r\nexport class BokehPcolour implements OnInit {\r\n  title: string = \"Figure Title\";\r\n  plot_width: number = 300;\r\n  plot_height: number = 300;\r\n  scatter_x: number[];\r\n  scatter_y: number[];\r\n  scatter_z: number[] = [0.5];\r\n  pcolour_x: number[];\r\n  pcolour_y: number[];\r\n  pcolour_z: number[];\r\n  enabled: boolean = true;\r\n\r\n  pcolour_hover_width: string[] = [];\r\n  pcolour_hover_length: string[] = [];\r\n  pcolour_hover_predicted_factor: string[] = [];\r\n\r\n  scatter_hover_width: string[] = [];\r\n  scatter_hover_length: string[] = [];\r\n  scatter_hover_area: string[] = [];\r\n  scatter_hover_measured_factor: string[] = [];\r\n  scatter_hover_predicted_factor: string[] = [];\r\n\r\n  plt = Bokeh.Plotting;\r\n  tools = 'pan,crosshair,wheel_zoom,box_zoom,reset,save';  \r\n  fig: any;\r\n\r\n  old_scatter_z: number[] = [];\r\n  old_pcolour_z: number[] = [];\r\n\r\n  scatter_c: string[] = [];\r\n  pcolour_c: string[] = [];\r\n\r\n  scatter_data = {\r\n    x: <number[]> [],\r\n    y: <number[]> [],\r\n    z: <number[]> [],\r\n    hover_width: <string[]> [],\r\n    hover_length: <string[]> [],\r\n    hover_area: <string[]> [],\r\n    hover_measured_factor: <string[]> [],\r\n    hover_predicted_factor: <string[]> [],\r\n    c: <string[]> []\r\n  }\r\n  scatter_source = new Bokeh.ColumnDataSource({\r\n    data: this.scatter_data\r\n  });\r\n\r\n  pcolour_renderer: any\r\n  scatter_renderer: any\r\n\r\n  pcolour_data = {\r\n    x: <number[]> [],\r\n    y: <number[]> [],\r\n    z: <number[]> [],\r\n    hover_width: <string[]> [],\r\n    hover_length: <string[]> [],\r\n    hover_predicted_factor: <string[]> [],\r\n    c: <string[]> []\r\n  }\r\n  pcolour_source = new Bokeh.ColumnDataSource({\r\n    data: this.pcolour_data\r\n  });\r\n  doc = new Bokeh.Document();\r\n\r\n  viridis_hex = [\r\n    \"#440154\",\"#440256\",\"#450457\",\"#450559\",\"#46075a\",\"#46085c\",\"#460a5d\",\"#460b5e\",\"#470d60\",\"#470e61\",\"#471063\",\"#471164\",\"#471365\",\"#481467\",\"#481668\",\"#481769\",\"#48186a\",\"#481a6c\",\"#481b6d\",\"#481c6e\",\"#481d6f\",\"#481f70\",\"#482071\",\"#482173\",\"#482374\",\"#482475\",\"#482576\",\"#482677\",\"#482878\",\"#482979\",\"#472a7a\",\"#472c7a\",\"#472d7b\",\"#472e7c\",\"#472f7d\",\"#46307e\",\"#46327e\",\"#46337f\",\"#463480\",\"#453581\",\"#453781\",\"#453882\",\"#443983\",\"#443a83\",\"#443b84\",\"#433d84\",\"#433e85\",\"#423f85\",\"#424086\",\"#424186\",\"#414287\",\"#414487\",\"#404588\",\"#404688\",\"#3f4788\",\"#3f4889\",\"#3e4989\",\"#3e4a89\",\"#3e4c8a\",\"#3d4d8a\",\"#3d4e8a\",\"#3c4f8a\",\"#3c508b\",\"#3b518b\",\"#3b528b\",\"#3a538b\",\"#3a548c\",\"#39558c\",\"#39568c\",\"#38588c\",\"#38598c\",\"#375a8c\",\"#375b8d\",\"#365c8d\",\"#365d8d\",\"#355e8d\",\"#355f8d\",\"#34608d\",\"#34618d\",\"#33628d\",\"#33638d\",\"#32648e\",\"#32658e\",\"#31668e\",\"#31678e\",\"#31688e\",\"#30698e\",\"#306a8e\",\"#2f6b8e\",\"#2f6c8e\",\"#2e6d8e\",\"#2e6e8e\",\"#2e6f8e\",\"#2d708e\",\"#2d718e\",\"#2c718e\",\"#2c728e\",\"#2c738e\",\"#2b748e\",\"#2b758e\",\"#2a768e\",\"#2a778e\",\"#2a788e\",\"#29798e\",\"#297a8e\",\"#297b8e\",\"#287c8e\",\"#287d8e\",\"#277e8e\",\"#277f8e\",\"#27808e\",\"#26818e\",\"#26828e\",\"#26828e\",\"#25838e\",\"#25848e\",\"#25858e\",\"#24868e\",\"#24878e\",\"#23888e\",\"#23898e\",\"#238a8d\",\"#228b8d\",\"#228c8d\",\"#228d8d\",\"#218e8d\",\"#218f8d\",\"#21908d\",\"#21918c\",\"#20928c\",\"#20928c\",\"#20938c\",\"#1f948c\",\"#1f958b\",\"#1f968b\",\"#1f978b\",\"#1f988b\",\"#1f998a\",\"#1f9a8a\",\"#1e9b8a\",\"#1e9c89\",\"#1e9d89\",\"#1f9e89\",\"#1f9f88\",\"#1fa088\",\"#1fa188\",\"#1fa187\",\"#1fa287\",\"#20a386\",\"#20a486\",\"#21a585\",\"#21a685\",\"#22a785\",\"#22a884\",\"#23a983\",\"#24aa83\",\"#25ab82\",\"#25ac82\",\"#26ad81\",\"#27ad81\",\"#28ae80\",\"#29af7f\",\"#2ab07f\",\"#2cb17e\",\"#2db27d\",\"#2eb37c\",\"#2fb47c\",\"#31b57b\",\"#32b67a\",\"#34b679\",\"#35b779\",\"#37b878\",\"#38b977\",\"#3aba76\",\"#3bbb75\",\"#3dbc74\",\"#3fbc73\",\"#40bd72\",\"#42be71\",\"#44bf70\",\"#46c06f\",\"#48c16e\",\"#4ac16d\",\"#4cc26c\",\"#4ec36b\",\"#50c46a\",\"#52c569\",\"#54c568\",\"#56c667\",\"#58c765\",\"#5ac864\",\"#5cc863\",\"#5ec962\",\"#60ca60\",\"#63cb5f\",\"#65cb5e\",\"#67cc5c\",\"#69cd5b\",\"#6ccd5a\",\"#6ece58\",\"#70cf57\",\"#73d056\",\"#75d054\",\"#77d153\",\"#7ad151\",\"#7cd250\",\"#7fd34e\",\"#81d34d\",\"#84d44b\",\"#86d549\",\"#89d548\",\"#8bd646\",\"#8ed645\",\"#90d743\",\"#93d741\",\"#95d840\",\"#98d83e\",\"#9bd93c\",\"#9dd93b\",\"#a0da39\",\"#a2da37\",\"#a5db36\",\"#a8db34\",\"#aadc32\",\"#addc30\",\"#b0dd2f\",\"#b2dd2d\",\"#b5de2b\",\"#b8de29\",\"#bade28\",\"#bddf26\",\"#c0df25\",\"#c2df23\",\"#c5e021\",\"#c8e020\",\"#cae11f\",\"#cde11d\",\"#d0e11c\",\"#d2e21b\",\"#d5e21a\",\"#d8e219\",\"#dae319\",\"#dde318\",\"#dfe318\",\"#e2e418\",\"#e5e419\",\"#e7e419\",\"#eae51a\",\"#ece51b\",\"#efe51c\",\"#f1e51d\",\"#f4e61e\",\"#f6e620\",\"#f8e621\",\"#fbe723\",\"#fde725\"]\r\n\r\n  vmin: number;\r\n  vmax: number;\r\n  colour_mapper = new Bokeh.LinearColorMapper({\r\n    palette: this.viridis_hex\r\n  })\r\n  ticker = new Bokeh.BasicTicker()\r\n  colour_bar = new Bokeh.ColorBar({\r\n    ticker: this.ticker,\r\n    label_standoff: 7,\r\n    location: [-6,0]\r\n  })\r\n\r\n  ngOnInit() {\r\n    this.figureInitialise()\r\n  }\r\n\r\n  figureInitialise() {\r\n    this.fig = this.plt.figure({\r\n        title: this.title, tools: this.tools,\r\n        plot_width: this.plot_width, plot_height: this.plot_height\r\n      });\r\n\r\n    this.pcolour_renderer = this.fig.rect(\r\n      { field: 'x' }, { field: 'y' }, 0.1, 0.1, {\r\n        source: this.pcolour_source,\r\n        color:  { field: 'c' }\r\n    });\r\n\r\n    this.scatter_renderer = this.fig.circle(\r\n      { field: 'x' }, { field: 'y' }, {\r\n        source: this.scatter_source,\r\n        size: 15,\r\n        line_color: 'black',\r\n        fill_color:  { field: 'c' },\r\n        line_width: 2\r\n    });\r\n\r\n    this.fig.add_layout(this.colour_bar, 'left')\r\n  }\r\n\r\n  runAllUpdates() {\r\n    this.updateScatterData()\r\n    this.updatePcolourData()\r\n    this.updateScatterColour()\r\n\r\n    this.updateSourceData()\r\n\r\n    this.updateFigureDimensions()\r\n  }\r\n\r\n  updateScatterData() {\r\n    this.scatter_data = {\r\n      x: <number[]> this.scatter_x,\r\n      y: <number[]> this.scatter_y,\r\n      z: <number[]> this.scatter_z,\r\n      hover_width: <string[]> this.scatter_hover_width,\r\n      hover_length: <string[]> this.scatter_hover_length,\r\n      hover_area: <string[]> this.scatter_hover_area,\r\n      hover_measured_factor: <string[]> this.scatter_hover_measured_factor,\r\n      hover_predicted_factor: <string[]> this.scatter_hover_predicted_factor,\r\n      c: <string[]> this.scatter_c\r\n    }\r\n  }\r\n\r\n  updatePcolourData() {\r\n    this.pcolour_data = {\r\n      x: <number[]> this.pcolour_x,\r\n      y: <number[]> this.pcolour_y,\r\n      z: <number[]> this.pcolour_z,\r\n      hover_width: <string[]> this.pcolour_hover_width,\r\n      hover_length: <string[]> this.pcolour_hover_length,\r\n      hover_predicted_factor: <string[]> this.pcolour_hover_predicted_factor,\r\n      c: <string[]> this.pcolour_c\r\n    }\r\n  }\r\n\r\n  updateScatterColour() {\r\n    if (this.old_scatter_z != this.scatter_z || this.old_pcolour_z != this.pcolour_z) {\r\n      let allZ = this.scatter_z.concat(this.pcolour_z);\r\n      this.vmin = Math.min(...allZ);\r\n      this.vmax = Math.max(...allZ);\r\n\r\n      this.colour_mapper.low = this.vmin\r\n      this.colour_mapper.high = this.vmax\r\n      this.colour_bar.color_mapper = this.colour_mapper\r\n\r\n      this.scatter_c = this.colour_mapper.v_compute(this.scatter_z)\r\n      this.pcolour_c = this.colour_mapper.v_compute(this.pcolour_z)\r\n\r\n      this.scatter_data.c = this.scatter_c\r\n      this.pcolour_data.c = this.pcolour_c\r\n\r\n      this.old_scatter_z = this.scatter_z;\r\n      this.old_pcolour_z = this.pcolour_z;\r\n\r\n      if (this.scatter_data.c.length < this.scatter_data.x.length) {\r\n        let difference = this.scatter_data.x.length - this.scatter_data.c.length\r\n        for (let i=0; i < difference; i++) {\r\n          this.scatter_data.c.push('#ffffff')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSourceData() {\r\n    if (this.scatter_source.data != this.scatter_data) {\r\n      this.scatter_source.data = this.scatter_data;\r\n    }\r\n\r\n    if (this.pcolour_source.data != this.pcolour_data) {\r\n      this.pcolour_source.data = this.pcolour_data;\r\n    }\r\n  }\r\n\r\n  updateFigureDimensions() {\r\n    if (this.fig != null) {\r\n      if (this.fig.width != this.plot_width) {\r\n        if (this.plot_width < 200) {\r\n          this.fig.width = 200\r\n        }\r\n        else {\r\n          this.fig.width = this.plot_width;\r\n        }        \r\n      }\r\n      if (this.fig.height != this.plot_height) {\r\n        this.fig.height = this.plot_height;\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/bokeh-pcolour.ts\n **/","import { Component, Input, OnChanges, ViewChild, AfterViewInit, OnInit } from '@angular/core';\r\n\r\nimport { BokehPcolour } from './bokeh-pcolour'\r\n\r\ndeclare var Bokeh: any;\r\n\r\n@Component({\r\n  selector: 'my-bokeh-use-model',\r\n  template: require('./bokeh-plot.html')\r\n})\r\nexport class BokehUseModelComponent extends BokehPcolour implements AfterViewInit, OnChanges {\r\n  @Input()\r\n  title: string = \"Figure Title\";\r\n  @Input()\r\n  plot_width: number = 300;\r\n  @Input()\r\n  plot_height: number = 300;\r\n  @Input()\r\n  scatter_x: number[];\r\n  @Input()\r\n  scatter_y: number[];\r\n  @Input()\r\n  scatter_z: number[] = [0.5];\r\n  @Input()\r\n  pcolour_x: number[];\r\n  @Input()\r\n  pcolour_y: number[];\r\n  @Input()\r\n  pcolour_z: number[];\r\n  @Input()\r\n  enabled: boolean = true;\r\n  @Input()\r\n  predicted_factor: number[] = []\r\n  @Input()\r\n  area: number[] = []\r\n\r\n  old_area: number[] = []\r\n  old_predicted_factor: number[] = []\r\n\r\n  @ViewChild('bokehplot') bokehplot: any;\r\n\r\n\r\n  ngOnChanges() {\r\n    this.updateHoverData()\r\n    this.runAllUpdates()\r\n  }\r\n\r\n  updateHoverData() {\r\n    if (this.scatter_data.x != this.scatter_x) {\r\n      this.scatter_hover_width = <string[]> []\r\n      for (let x of this.scatter_x) {\r\n        this.scatter_hover_width.push((Math.round(x*10)/10).toFixed(1))\r\n      }\r\n    }\r\n    if (this.scatter_data.y != this.scatter_y) {\r\n      this.scatter_hover_length = <string[]> []\r\n      for (let y of this.scatter_y) {\r\n        this.scatter_hover_length.push((Math.round(y*10)/10).toFixed(1))\r\n      }\r\n    }\r\n    if (this.scatter_data.z != this.scatter_z) {\r\n      this.scatter_hover_measured_factor = <string[]> []\r\n      for (let z of this.scatter_z) {\r\n        this.scatter_hover_measured_factor.push((Math.round(z*1000)/1000).toFixed(3))\r\n      }\r\n      if (this.scatter_hover_measured_factor.length < this.scatter_x.length) {\r\n        let difference = this.scatter_x.length - this.scatter_hover_measured_factor.length\r\n        for (let i=0; i < difference; i++) {\r\n          this.scatter_hover_measured_factor.push('Not given')\r\n        }\r\n      }\r\n    }\r\n    if (this.old_predicted_factor != this.predicted_factor) {\r\n      this.scatter_hover_predicted_factor = <string[]> []\r\n      for (let z of this.predicted_factor) {\r\n        this.scatter_hover_predicted_factor.push((Math.round(z*1000)/1000).toFixed(3))\r\n      }\r\n      this.old_predicted_factor = this.predicted_factor\r\n    }\r\n    if (this.old_area != this.area) {\r\n      this.scatter_hover_area = <string[]> []\r\n      for (let a of this.area) {\r\n        this.scatter_hover_area.push((Math.round(a*10)/10).toFixed(1))\r\n      }\r\n      this.old_area = this.area\r\n    }\r\n  }\r\n\r\n    // hover_width: <string[]> [],\r\n    // hover_length: <string[]> [],\r\n    // hover_area: <string[]> [],\r\n    // hover_measured_factor: <string[]> [],\r\n    // hover_predicted_factor: <string[]> [],\r\n\r\n  ngAfterViewInit() {\r\n    let hover_tool = new Bokeh.HoverTool({\r\n      tooltips: [\r\n        [\"Width\", \" @hover_width cm\"],\r\n        [\"Length\", \" @hover_length cm\"],\r\n        [\"Area\", \" @hover_area cm^2\"],\r\n        [\"Measured factor\", \" @hover_measured_factor\"],\r\n        [\"Predicted factor\", \" @hover_predicted_factor\"],\r\n        // [\"Predicted - Measured\", \" @hover_difference\"]\r\n      ],\r\n      renderers: [\r\n        this.scatter_renderer\r\n      ]\r\n    })\r\n    this.fig.add_tools(hover_tool)\r\n\r\n    this.doc.add_root(this.fig);\r\n    Bokeh.embed.add_document_standalone(\r\n      this.doc, this.bokehplot.nativeElement); \r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/bokeh-use-model.component.ts\n **/","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'my-choose-specifications',\r\n  template: require('./choose-specifications.component.html')\r\n})\r\nexport class ChooseSpecificationsComponent implements OnInit {\r\n  machineList: string[]\r\n  allMachineSpecifications: {}\r\n  currentMachineSpecifications: {}\r\n  @Input()\r\n  currentSettings = {\r\n    machine: <string> null,\r\n    energy: <number> null,\r\n    applicator: <string> null,\r\n    ssd: <number> null\r\n  }\r\n\r\n  @Output()\r\n  settingsUpdated = new EventEmitter()\r\n\r\n \r\n  ngOnInit() {\r\n    this.currentSettings.energy = JSON.parse(localStorage.getItem(\"currentEnergy\"))\r\n    this.currentSettings.applicator = JSON.parse(localStorage.getItem(\"currentApplicator\"))\r\n    this.currentSettings.ssd = JSON.parse(localStorage.getItem(\"currentSSD\"))\r\n\r\n    this.allMachineSpecifications = JSON.parse(localStorage.getItem(\"specifications\"))\r\n    if (this.allMachineSpecifications == null) {\r\n      this.allMachineSpecifications = {}\r\n      this.machineList = []\r\n    }\r\n    else {\r\n      this.machineList = Object.keys(this.allMachineSpecifications).sort();\r\n      this.currentSettings.machine = String(JSON.parse(localStorage.getItem(\"current_machine\")))\r\n      if (\r\n          this.currentSettings.machine == null || \r\n          this.allMachineSpecifications[this.currentSettings.machine] === undefined) {\r\n        this.currentSettings.machine = this.machineList[0]\r\n      }\r\n      this.currentMachineSpecifications = this.allMachineSpecifications[this.currentSettings.machine]\r\n    }\r\n    \r\n    this.settingsUpdated.emit(this.currentSettings)\r\n  }\r\n\r\n  updateMachineID(newCurrentMachine: string) {\r\n    this.currentSettings.machine = newCurrentMachine\r\n    localStorage.setItem(\"current_machine\", JSON.stringify(newCurrentMachine))\r\n    this.currentMachineSpecifications = this.allMachineSpecifications[this.currentSettings.machine]\r\n\r\n    if (this.currentMachineSpecifications != null) {\r\n      for (let item of [\"energy\", \"applicator\", \"ssd\"]) {\r\n        if (this.currentMachineSpecifications[item].length > 0) {\r\n          this.currentSettings[item] = this.currentMachineSpecifications[item][0]\r\n        }\r\n        else {\r\n          this.currentSettings[item] = null\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      for (let item of [\"energy\", \"applicator\", \"ssd\"]) {\r\n        this.currentSettings[item] = null\r\n      }\r\n    }\r\n\r\n    localStorage.setItem(\"currentEnergy\", JSON.stringify(Number(this.currentSettings.energy)))\r\n    localStorage.setItem(\"currentApplicator\", JSON.stringify(this.currentSettings.applicator))\r\n    localStorage.setItem(\"currentSSD\", JSON.stringify(Number(this.currentSettings.ssd)))\r\n\r\n    this.settingsUpdated.emit(this.currentSettings)\r\n  }\r\n\r\n  updateEnergy(newCurrentEnergy: number) {\r\n    this.currentSettings.energy = Number(newCurrentEnergy)\r\n    localStorage.setItem(\"currentEnergy\", JSON.stringify(Number(newCurrentEnergy)))\r\n\r\n    this.settingsUpdated.emit(this.currentSettings)\r\n  }\r\n\r\n  updateApplicator(newCurrentApplicator: string) {\r\n    this.currentSettings.applicator = newCurrentApplicator\r\n    localStorage.setItem(\"currentApplicator\", JSON.stringify(newCurrentApplicator))\r\n\r\n    this.settingsUpdated.emit(this.currentSettings)\r\n  }\r\n\r\n  updateSSD(newCurrentSSD: number) {\r\n    this.currentSettings.ssd = Number(newCurrentSSD)\r\n    localStorage.setItem(\"currentSSD\", JSON.stringify(Number(newCurrentSSD)))\r\n\r\n    this.settingsUpdated.emit(this.currentSettings)\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/angular2-template-loader!./src/app/choose-specifications.component.ts\n **/","module.exports = \"<div class=\\\"mdl-grid\\\">\\r\\n  <div \\r\\n      *ngIf=\\\"this.machineList.length > 0\\\" \\r\\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\r\\n    <h6>Machine ID</h6>\\r\\n    <select\\r\\n        [(ngModel)]=\\\"currentSettings.machine\\\"\\r\\n        (input)=\\\"updateMachineID($event.target.value)\\\">\\r\\n      <option *ngFor=\\\"let machine of machineList\\\">{{machine}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n\\r\\n  <div \\r\\n      *ngIf=\\\"this.machineList.length > 0 && currentSettings.machine != null\\\" \\r\\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\r\\n    <h6>Energy</h6>\\r\\n    <select\\r\\n        [(ngModel)]=\\\"currentSettings.energy\\\"\\r\\n        (input)=\\\"updateEnergy($event.target.value)\\\"\\r\\n        *ngIf=\\\"currentMachineSpecifications.energy.length > 0\\\">\\r\\n      <option *ngFor=\\\"let energy of currentMachineSpecifications.energy\\\" value=\\\"{{energy}}\\\">{{energy}} MeV</option>\\r\\n    </select>\\r\\n    <p *ngIf=\\\"currentMachineSpecifications.energy == 0\\\">\\r\\n      This machine doesn't have any energies defined. Please \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        define energies.\\r\\n      </a>\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div \\r\\n      *ngIf=\\\"this.machineList.length > 0 && currentSettings.machine != null\\\" \\r\\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\r\\n    <h6>Applicator</h6>\\r\\n    <select \\r\\n        [(ngModel)]=\\\"currentSettings.applicator\\\"\\r\\n        (input)=\\\"updateApplicator($event.target.value)\\\"\\r\\n        *ngIf=\\\"currentMachineSpecifications.applicator.length > 0\\\">\\r\\n      <option *ngFor=\\\"let applicator of currentMachineSpecifications.applicator\\\">{{applicator}}</option>\\r\\n    </select>\\r\\n    <p *ngIf=\\\"currentMachineSpecifications.applicator == 0\\\">\\r\\n      This machine doesn't have any applicators defined. Please \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        define applicators.\\r\\n      </a>\\r\\n    </p>\\r\\n  </div>\\r\\n\\r\\n  <div \\r\\n      *ngIf=\\\"this.machineList.length > 0 && currentSettings.machine != null\\\" \\r\\n      class=\\\"mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone\\\">\\r\\n    <h6>SSD</h6>\\r\\n    <select  \\r\\n        [(ngModel)]=\\\"currentSettings.ssd\\\"\\r\\n        (input)=\\\"updateSSD($event.target.value)\\\"\\r\\n        *ngIf=\\\"currentMachineSpecifications.ssd.length > 0\\\">\\r\\n      <option *ngFor=\\\"let ssd of currentMachineSpecifications.ssd\\\">{{ssd}}</option>\\r\\n    </select>\\r\\n    <p *ngIf=\\\"currentMachineSpecifications.ssd == 0\\\">\\r\\n      This machine doesn't have an ssd defined. Please \\r\\n      <a routerLink=\\\"/specifications\\\" routerLinkActive=\\\"active\\\">\\r\\n        define at least one ssd.\\r\\n      </a>\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n  \\r\\n\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/choose-specifications.component.html\n ** module id = 201\n ** module chunks = 0\n **/"],"sourceRoot":""}